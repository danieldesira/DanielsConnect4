(()=>{"use strict";var e,t,n,o,r,a,i={769:(e,t)=>{var n,o;Object.defineProperty(t,"__esModule",{value:!0}),t.Game=t.GameMode=void 0,function(e){e[e.EMPTY=0]="EMPTY",e[e.RED=1]="RED",e[e.GREEN=2]="GREEN"}(n||(n={})),function(e){e[e.SAME_PC=1]="SAME_PC"}(o=t.GameMode||(t.GameMode={}));var r=function(){function e(t,o,r,a,i){void 0===o&&(o=null),void 0===r&&(r=null),void 0===a&&(a=null),void 0===i&&(i=null);var s=this;this.board=new Array(e.columns),this.turn=n.RED,this.moveDot=function(e){s.clearUpper();var t=s.getCursorPosition(e),o=Math.round(t.x-50)/110;s.turn==n.RED?s.context.fillStyle="red":s.turn==n.GREEN&&(s.context.fillStyle="greenyellow"),s.context.beginPath(),s.context.arc(50+120*o,35,35,0,2*Math.PI),s.context.closePath(),s.context.fill()},this.landDot=function(t){var o,r=s.getCursorPosition(t),a=Math.round((r.x-50)/110);if(0===s.board[a][0]){for(var i=e.rows-1;i>-1;i--)if(0===s.board[a][i]){s.board[a][i]=s.turn,o=i;break}if(s.turn===n.RED?s.context.fillStyle="red":s.turn===n.GREEN&&(s.context.fillStyle="greenyellow"),s.context.beginPath(),s.context.arc(50+110*a,150+110*i,30,0,2*Math.PI),s.context.closePath(),s.context.fill(),s.checkTileCount(a,o)>3){var l="";s.turn===n.RED?l=s.playerRed+" (Red)":s.turn===n.GREEN&&(l=s.playerGreen+" (Green)"),s.exitBtn&&s.exitBtn.classList.add("hide");var c=l+" wins!";s.timerSpan&&(c+="\nTime taken: "+s.timerSpan.innerText),alert(c),localStorage.clear(),s.cleanUpEvents(),s.stopTimer(),s.clearPlayerNames(),void 0!==s.onGameEnd&&null!==s.onGameEnd&&setTimeout(s.onGameEnd,3e3)}s.turn===n.RED?s.turn=n.GREEN:s.turn===n.GREEN&&(s.turn=n.RED)}},this.beforeUnload=function(){s.saveGame()},this.timerCallback=function(){s.secondsRunning++;var e=Math.floor(s.secondsRunning/60),t=s.secondsRunning%60;s.timerSpan.innerText=e+":"+(t<10?"0":"")+t},this.canvas=document.getElementById(t),this.context=this.canvas.getContext("2d");for(var l=0;l<e.columns;l++){this.board[l]=new Array(e.rows);for(var c=0;c<e.rows;c++)this.board[l][c]=n.EMPTY}null!==o&&(this.exitBtn=document.getElementById(o)),null!==r&&(this.timerSpan=document.getElementById(r),this.secondsRunning=0),null!==a&&(this.playerRedSpan=document.getElementById(a)),null!==i&&(this.playerGreenSpan=document.getElementById(i))}return e.prototype.start=function(){this.checkGameData(),this.setUpPlayerNames(),this.paintBoard(),this.setGameEvents(),this.setTimer()},e.prototype.checkGameData=function(){if(this.mode===o.SAME_PC){var e=localStorage.getItem("board"),t=localStorage.getItem("nextTurn");e&&t&&(confirm("Do you want to continue playing the previous game? OK/Cancel")?this.restoreLastGame():localStorage.clear())}},e.prototype.setUpPlayerNames=function(){this.mode===o.SAME_PC&&(localStorage.getItem("playerRed")&&localStorage.getItem("playerGreen")||(this.playerRed=prompt("Please enter name for Red Player!"),this.playerGreen=prompt("Please enter name for Green Player!"))),this.playerGreenSpan&&(this.playerGreenSpan.innerText=this.playerGreen),this.playerRedSpan&&(this.playerRedSpan.innerText=this.playerRed)},e.prototype.paintBoard=function(){var t=this.context.createLinearGradient(0,0,this.canvas.width,0);t.addColorStop(0,"blue"),t.addColorStop(1,"aqua"),this.context.fillStyle=t,this.context.fillRect(0,70,this.canvas.width,this.canvas.height);for(var o=e.columns-1;o>=0;o--)for(var r=e.rows-1;r>=0;r--)this.board[o][r]===n.RED?this.context.fillStyle="red":this.board[o][r]===n.GREEN?this.context.fillStyle="greenyellow":this.context.fillStyle="black",this.context.beginPath(),this.context.arc(50+110*o,150+110*r,30,0,2*Math.PI),this.context.closePath(),this.context.fill()},e.prototype.getCursorPosition=function(e){var t,n;return void 0!==e.pageX||void 0!==e.pageY?(t=e.pageX,n=e.pageY):(t=e.clientX+document.body.scrollLeft+document.documentElement.scrollLeft,n=e.clientY+document.body.scrollTop+document.documentElement.scrollTop),t-=this.canvas.offsetLeft,n-=this.canvas.offsetTop,new a(t,n)},e.prototype.setGameEvents=function(){this.canvas.addEventListener("mousemove",this.moveDot,!1),this.canvas.addEventListener("click",this.landDot,!1),window.addEventListener("beforeunload",this.beforeUnload)},e.prototype.clearUpper=function(){this.context.clearRect(0,0,this.canvas.width,70)},e.prototype.checkTileCount=function(t,n){for(var o=n,r=0;r<4&&o<e.rows&&this.board[t][o]===this.turn;)r++,o++;if(r<4){for(r=0,o=t;o<e.columns&&this.board[o][n]===this.turn;)r++,o++;for(o=t-1;o>-1&&this.board[o][n]===this.turn;)r++,o--;if(r<4){r=0;for(var a=n-1,i=t+1;r<4&&a>-1&&i<e.columns&&this.board[i][a]===this.turn;)r++,i++,a--;for(i=t,a=n;r<4&&a<e.rows&&i>-1&&this.board[i][a]===this.turn;)r++,i--,a++;if(r<4){for(r=0,a=n-1,i=t-1;r<4&&a>-1&&i>-1&&this.board[i][a]===this.turn;)r++,i--,a--;for(i=t,a=n;r<4&&a<e.rows&&i<e.columns&&this.board[i][a]===this.turn;)r++,i++,a++}}}return r},e.prototype.cleanUpEvents=function(){this.canvas.removeEventListener("mousemove",this.moveDot,!1),this.canvas.removeEventListener("click",this.landDot,!1),window.removeEventListener("beforeunload",this.beforeUnload)},e.prototype.saveGame=function(){localStorage.setItem("nextTurn",this.turn.toString()),localStorage.setItem("board",JSON.stringify(this.board)),localStorage.setItem("playerRed",this.playerRed),localStorage.setItem("playerGreen",this.playerGreen),localStorage.setItem("secondsRunning",this.secondsRunning.toString())},e.prototype.restoreLastGame=function(){this.turn=parseInt(localStorage.getItem("nextTurn")),this.playerRed=localStorage.getItem("playerRed"),this.playerGreen=localStorage.getItem("playerGreen"),this.board=JSON.parse(localStorage.getItem("board")),this.secondsRunning=parseInt(localStorage.getItem("secondsRunning"))},e.prototype.exit=function(){this.cleanUpEvents(),this.saveGame(),this.onGameEnd(),this.stopTimer(),this.clearPlayerNames()},e.prototype.setTimer=function(){this.timerSpan&&(this.timerCallback(),this.timerInterval=setInterval(this.timerCallback,1e3),this.timerSpan.classList.remove("hide"))},e.prototype.stopTimer=function(){this.timerInterval&&(clearInterval(this.timerInterval),this.timerSpan.classList.add("hide"))},e.prototype.clearPlayerNames=function(){this.playerGreenSpan&&(this.playerGreenSpan.innerText=""),this.playerRedSpan&&(this.playerRedSpan.innerText="")},e.columns=9,e.rows=8,e}();t.Game=r;var a=function(e,t){this.x=e,this.y=t}}},s={};t=document.getElementById("menu"),n=document.getElementById("samePC"),o=document.getElementById("exitBtn"),r=function e(t){var n=s[t];if(void 0!==n)return n.exports;var o=s[t]={exports:{}};return i[t](o,o.exports,e),o.exports}(769),a=document.getElementById("board"),n.addEventListener("click",(function(){(e=new r.Game("board","exitBtn","timer","playerRed","playerGreen")).mode=r.GameMode.SAME_PC,e.onGameEnd=function(){t.classList.remove("hide"),a.classList.add("hide"),o.classList.add("hide")},e.start(),t.classList.add("hide"),a.classList.remove("hide"),o.classList.remove("hide")}),!1),o.addEventListener("click",(function(){e.exit()}),!1)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,