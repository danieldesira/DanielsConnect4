{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/board-logic.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/constants.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/enums/coin.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/enums/dimensions.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/index.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/action-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/current-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/disconnect-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/error-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/game-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/initial-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/skip-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/tie-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/winner-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/player-turn.js","webpack:///./src/lib/authentication.ts","webpack:///./src/lib/config.ts","webpack:///./src/lib/dialog/dialog.ts","webpack:///./src/lib/dialog/enums/dialog-type.ts","webpack:///./src/lib/dimensions-select.ts","webpack:///./src/lib/enums/dialog-ids.ts","webpack:///./src/lib/enums/game-mode.ts","webpack:///./src/lib/enums/sound.ts","webpack:///./src/lib/game.ts","webpack:///./src/lib/network-game.ts","webpack:///./src/lib/player-name-section.ts","webpack:///./src/lib/position.ts","webpack:///./src/lib/same-device-game.ts","webpack:///./src/lib/socket.ts","webpack:///./src/lib/timer.ts","webpack:///./src/lib/utils.ts","webpack:///./src/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoardLogic = void 0;\nvar constants_1 = require(\"./constants\");\nvar coin_1 = require(\"./enums/coin\");\nvar dimensions_1 = require(\"./enums/dimensions\");\nvar BoardLogic = /** @class */ (function () {\n    /**\n     * Initialises the board matrix given the board dimensions\n     * @param dim The board dimensions type\n     */\n    function BoardLogic(dim) {\n        var _this = this;\n        this.board = [];\n        /**\n         * Getter for the number of columns\n         * @returns The number of columns\n         */\n        this.getColumns = function () { return _this.columns; };\n        /**\n         * Getter for the number of rows\n         * @returns The number of rows\n         */\n        this.getRows = function () { return _this.rows; };\n        /**\n         * Getter for the board dimensions\n         * @returns The board dimensions\n         */\n        this.getDimensions = function () { return _this.dimensions; };\n        /**\n         * Getter for the board matrix\n         * @returns The board matrix\n         */\n        this.getBoard = function () { return _this.board; };\n        /**\n         * Resets the board matrix retaining the given dimensions\n         */\n        this.resetBoard = function () { return _this.initBoard(); };\n        switch (dim) {\n            case dimensions_1.BoardDimensions.Small:\n                this.columns = constants_1.dimensions.small.columns;\n                this.rows = constants_1.dimensions.small.rows;\n                break;\n            case dimensions_1.BoardDimensions.Medium:\n                this.columns = constants_1.dimensions.medium.columns;\n                this.rows = constants_1.dimensions.medium.rows;\n                break;\n            case dimensions_1.BoardDimensions.Large:\n                this.columns = constants_1.dimensions.large.columns;\n                this.rows = constants_1.dimensions.large.rows;\n                break;\n        }\n        this.dimensions = dim;\n        this.initBoard();\n    }\n    /**\n     * Initialises board matrix\n     */\n    BoardLogic.prototype.initBoard = function () {\n        this.board = new Array(this.columns);\n        for (var col = 0; col < this.columns; col++) {\n            this.board[col] = new Array(this.rows);\n            for (var row = 0; row < this.rows; row++) {\n                this.board[col][row] = coin_1.Coin.Empty;\n            }\n        }\n    };\n    /**\n     * Counts and checks the coin placeholders adjecent to the specified point (column x row). Matches may occurr,\n     * vertically, horizontally or diagonally.\n     * @param column - The column number of the starting point\n     * @param row - The row number of the starting point\n     * @param currentTurn - Coin color to be checked\n     * @returns Count of adjecent coins with the same color\n     */\n    BoardLogic.prototype.countConsecutiveCoins = function (column, row, currentTurn) {\n        var count = row;\n        var coinCount = 0;\n        // Vertical check\n        while (coinCount < 4 && count < this.rows && this.board[column][count] === currentTurn) {\n            coinCount++;\n            count++;\n        }\n        if (coinCount < 4) {\n            // Horizontal check\n            coinCount = 0;\n            count = column;\n            while (count < this.columns && this.board[count][row] === currentTurn) {\n                coinCount++;\n                count++;\n            }\n            count = column - 1;\n            while (count > -1 && this.board[count][row] === currentTurn) {\n                coinCount++;\n                count--;\n            }\n            // Diagonal checks\n            if (coinCount < 4) {\n                coinCount = 0;\n                var rowCount = row - 1;\n                var colCount = column + 1;\n                while (coinCount < 4 && rowCount > -1 && colCount < this.columns && this.board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount++; //right columns\n                    rowCount--; //upper rows\n                }\n                colCount = column;\n                rowCount = row;\n                while (coinCount < 4 && rowCount < this.rows && colCount > -1 && this.board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount--; // left columns\n                    rowCount++; // lower rows\n                }\n                if (coinCount < 4) {\n                    coinCount = 0;\n                    rowCount = row - 1;\n                    colCount = column - 1;\n                    while (coinCount < 4 && rowCount > -1 && colCount > -1 && this.board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount--; // left columns\n                        rowCount--; // upper rows\n                    }\n                    colCount = column;\n                    rowCount = row;\n                    while (coinCount < 4 && rowCount < this.rows && colCount < this.columns && this.board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount++; // right columns\n                        rowCount++; // lower rows\n                    }\n                }\n            }\n        }\n        return coinCount;\n    };\n    /**\n     * Checks if the board matrix is full\n     * @returns True if full, false if not\n     */\n    BoardLogic.prototype.isBoardFull = function () {\n        var full = true;\n        for (var col = 0; col < this.columns; col++) {\n            // Check upper row in every column\n            if (this.board[col][0] === coin_1.Coin.Empty) {\n                full = false;\n                break;\n            }\n        }\n        return full;\n    };\n    /**\n     * Places coin in a specific column\n     * @param color The color of the coin\n     * @param column The specified column number\n     * @returns Row number where the coin was placed. -1 if column is full.\n     */\n    BoardLogic.prototype.putCoin = function (color, column) {\n        for (var row = this.rows - 1; row >= 0; row--) {\n            if (this.board[column][row] === coin_1.Coin.Empty) {\n                this.board[column][row] = color;\n                return row;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Board matrix setter\n     * @param board The new board matrix\n     */\n    BoardLogic.prototype.setBoard = function (board) {\n        this.board = board;\n    };\n    /**\n     * Sets a single board matrix item, at the specified row and column\n     * @param coin The coin color\n     * @param col The column number\n     * @param row The row number\n     */\n    BoardLogic.prototype.setBoardItem = function (coin, col, row) {\n        this.board[col][row] = coin;\n    };\n    return BoardLogic;\n}());\nexports.BoardLogic = BoardLogic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dimensions = exports.skipTurnMaxWait = void 0;\n/**\n * @constant {number} skipTurnMaxWait - The maximum number of seconds that are allowed before skipping turn.\n */\nexports.skipTurnMaxWait = 60;\n/**\n * @constant dimensions - The column & row board dimensions available.\n */\nexports.dimensions = {\n    small: {\n        columns: 6,\n        rows: 5\n    },\n    medium: {\n        columns: 7,\n        rows: 6\n    },\n    large: {\n        columns: 9,\n        rows: 8\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Coin = void 0;\nvar Coin;\n(function (Coin) {\n    Coin[Coin[\"Empty\"] = 0] = \"Empty\";\n    Coin[Coin[\"Red\"] = 1] = \"Red\";\n    Coin[Coin[\"Green\"] = 2] = \"Green\";\n})(Coin || (exports.Coin = Coin = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoardDimensions = void 0;\nvar BoardDimensions;\n(function (BoardDimensions) {\n    BoardDimensions[BoardDimensions[\"Small\"] = 1] = \"Small\";\n    BoardDimensions[BoardDimensions[\"Medium\"] = 2] = \"Medium\";\n    BoardDimensions[BoardDimensions[\"Large\"] = 3] = \"Large\";\n})(BoardDimensions || (exports.BoardDimensions = BoardDimensions = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoardDimensions = exports.dimensions = exports.skipTurnMaxWait = exports.switchTurn = exports.randomiseColor = exports.WinnerMessage = exports.TieMessage = exports.SkipTurnMessage = exports.InitialMessage = exports.GameMessage = exports.ErrorMessage = exports.DisconnectMessage = exports.CurrentTurnMessage = exports.ActionMessage = exports.Coin = exports.default = void 0;\nvar board_logic_1 = require(\"./board-logic\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return board_logic_1.BoardLogic; } });\nvar coin_1 = require(\"./enums/coin\");\nObject.defineProperty(exports, \"Coin\", { enumerable: true, get: function () { return coin_1.Coin; } });\nvar action_message_1 = require(\"./models/action-message\");\nObject.defineProperty(exports, \"ActionMessage\", { enumerable: true, get: function () { return action_message_1.ActionMessage; } });\nvar current_turn_message_1 = require(\"./models/current-turn-message\");\nObject.defineProperty(exports, \"CurrentTurnMessage\", { enumerable: true, get: function () { return current_turn_message_1.CurrentTurnMessage; } });\nvar disconnect_message_1 = require(\"./models/disconnect-message\");\nObject.defineProperty(exports, \"DisconnectMessage\", { enumerable: true, get: function () { return disconnect_message_1.DisconnectMessage; } });\nvar error_message_1 = require(\"./models/error-message\");\nObject.defineProperty(exports, \"ErrorMessage\", { enumerable: true, get: function () { return error_message_1.ErrorMessage; } });\nvar game_message_1 = require(\"./models/game-message\");\nObject.defineProperty(exports, \"GameMessage\", { enumerable: true, get: function () { return game_message_1.GameMessage; } });\nvar initial_message_1 = require(\"./models/initial-message\");\nObject.defineProperty(exports, \"InitialMessage\", { enumerable: true, get: function () { return initial_message_1.InitialMessage; } });\nvar skip_turn_message_1 = require(\"./models/skip-turn-message\");\nObject.defineProperty(exports, \"SkipTurnMessage\", { enumerable: true, get: function () { return skip_turn_message_1.SkipTurnMessage; } });\nvar tie_message_1 = require(\"./models/tie-message\");\nObject.defineProperty(exports, \"TieMessage\", { enumerable: true, get: function () { return tie_message_1.TieMessage; } });\nvar winner_message_1 = require(\"./models/winner-message\");\nObject.defineProperty(exports, \"WinnerMessage\", { enumerable: true, get: function () { return winner_message_1.WinnerMessage; } });\nvar player_turn_1 = require(\"./player-turn\");\nObject.defineProperty(exports, \"randomiseColor\", { enumerable: true, get: function () { return player_turn_1.randomiseColor; } });\nObject.defineProperty(exports, \"switchTurn\", { enumerable: true, get: function () { return player_turn_1.switchTurn; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"skipTurnMaxWait\", { enumerable: true, get: function () { return constants_1.skipTurnMaxWait; } });\nObject.defineProperty(exports, \"dimensions\", { enumerable: true, get: function () { return constants_1.dimensions; } });\nvar dimensions_1 = require(\"./enums/dimensions\");\nObject.defineProperty(exports, \"BoardDimensions\", { enumerable: true, get: function () { return dimensions_1.BoardDimensions; } });\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActionMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ActionMessage = /** @class */ (function (_super) {\n    __extends(ActionMessage, _super);\n    /**\n     * @param {number} column - The column number\n     * @param {string} action - The type of action\n     * @param {Coin} color - The coin color\n     */\n    function ActionMessage(column, action, color) {\n        var _this = _super.call(this) || this;\n        _this.column = column;\n        _this.action = action;\n        _this.color = color;\n        return _this;\n    }\n    return ActionMessage;\n}(game_message_1.GameMessage));\nexports.ActionMessage = ActionMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CurrentTurnMessage = void 0;\nvar coin_1 = require(\"../enums/coin\");\nvar game_message_1 = require(\"./game-message\");\nvar CurrentTurnMessage = /** @class */ (function (_super) {\n    __extends(CurrentTurnMessage, _super);\n    function CurrentTurnMessage() {\n        var _this = _super.call(this) || this;\n        _this.currentTurn = coin_1.Coin.Empty;\n        return _this;\n    }\n    return CurrentTurnMessage;\n}(game_message_1.GameMessage));\nexports.CurrentTurnMessage = CurrentTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DisconnectMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar DisconnectMessage = /** @class */ (function (_super) {\n    __extends(DisconnectMessage, _super);\n    function DisconnectMessage() {\n        var _this = _super.call(this) || this;\n        _this.hardDisconnect = true;\n        return _this;\n    }\n    return DisconnectMessage;\n}(game_message_1.GameMessage));\nexports.DisconnectMessage = DisconnectMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ErrorMessage = /** @class */ (function (_super) {\n    __extends(ErrorMessage, _super);\n    /**\n     * @param {string} error The error message\n     */\n    function ErrorMessage(error) {\n        var _this = _super.call(this) || this;\n        _this.error = error;\n        return _this;\n    }\n    return ErrorMessage;\n}(game_message_1.GameMessage));\nexports.ErrorMessage = ErrorMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameMessage = void 0;\nvar GameMessage = /** @class */ (function () {\n    function GameMessage() {\n    }\n    /**\n     * Tests if message is an initial message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message is initial\n     * @public\n     * @static\n     */\n    GameMessage.isInitialMessage = function (msg) {\n        return (!isNaN(msg['gameId']) && msg['color']) || msg['opponentName'];\n    };\n    /**\n     * Tests if message is an inactivity message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents inactivity\n     * @public\n     * @static\n     */\n    GameMessage.isInactivityMessage = function (msg) {\n        return msg['endGameDueToInactivity'] && msg['currentTurn'];\n    };\n    /**\n     * Tests if message is an action message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents an action\n     * @public\n     * @static\n     */\n    GameMessage.isActionMessage = function (msg) {\n        return msg['action'] && !isNaN(msg['column']) && msg['color'];\n    };\n    /**\n     * Tests if message is a skip turn message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message is a skip turn\n     * @public\n     * @static\n     */\n    GameMessage.isSkipTurnMessage = function (msg) {\n        return msg['skipTurn'] && msg['currentTurn'];\n    };\n    /**\n     * Tests if message is a winner message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents win\n     * @public\n     * @static\n     */\n    GameMessage.isWinnerMessage = function (msg) {\n        return msg['winner'];\n    };\n    /**\n     * Tests if message is a tie message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents tie\n     * @public\n     * @static\n     */\n    GameMessage.isTieMessage = function (msg) {\n        return msg['tie'];\n    };\n    /**\n     * Tests if message is a current turn message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents current turn\n     * @public\n     * @static\n     */\n    GameMessage.isCurrentTurnMessage = function (msg) {\n        return msg['currentTurn'];\n    };\n    /**\n     * Tests if message is a disconnect message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represent a disconnection\n     * @public\n     * @static\n     */\n    GameMessage.isDisconnectMessage = function (msg) {\n        return msg['hardDisconnect'];\n    };\n    /**\n     * Tests if message is an error message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message is an error\n     * @public\n     * @static\n     */\n    GameMessage.isErrorMessage = function (msg) {\n        return msg['error'];\n    };\n    return GameMessage;\n}());\nexports.GameMessage = GameMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InitialMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar InitialMessage = /** @class */ (function (_super) {\n    __extends(InitialMessage, _super);\n    /**\n     * @param {number} gameId - The ID of the game\n     * @param {string} playerName - The name of the player\n     * @param {string} opponentName - The name of the opponent\n     * @param {Coin} color - The coin color chosen\n     * @param {BoardDimensions} dimensions - The game's chosen dimensions\n     */\n    function InitialMessage(gameId, playerName, opponentName, color, dimensions) {\n        var _this = _super.call(this) || this;\n        _this.gameId = gameId;\n        _this.playerName = playerName;\n        _this.opponentName = opponentName;\n        _this.color = color;\n        _this.dimensions = dimensions;\n        return _this;\n    }\n    return InitialMessage;\n}(game_message_1.GameMessage));\nexports.InitialMessage = InitialMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SkipTurnMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar SkipTurnMessage = /** @class */ (function (_super) {\n    __extends(SkipTurnMessage, _super);\n    /**\n     * @param {boolean} skipTurn - Whether to skip the current turn\n     * @param {Coin} currentTurn - Coin color to be the new turn\n     */\n    function SkipTurnMessage(skipTurn, currentTurn) {\n        var _this = _super.call(this) || this;\n        _this.skipTurn = skipTurn;\n        _this.currentTurn = currentTurn;\n        return _this;\n    }\n    return SkipTurnMessage;\n}(game_message_1.GameMessage));\nexports.SkipTurnMessage = SkipTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TieMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar TieMessage = /** @class */ (function (_super) {\n    __extends(TieMessage, _super);\n    /**\n     * @param {boolean} tie - Optional boolean parameter to determine if tie. True by default.\n     */\n    function TieMessage(tie) {\n        if (tie === void 0) { tie = true; }\n        var _this = _super.call(this) || this;\n        _this.tie = tie;\n        return _this;\n    }\n    return TieMessage;\n}(game_message_1.GameMessage));\nexports.TieMessage = TieMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WinnerMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\n/**\n * @class WinnerMessage model\n */\nvar WinnerMessage = /** @class */ (function (_super) {\n    __extends(WinnerMessage, _super);\n    /**\n     * @param {Coin} winner - The coin color of the winner\n     */\n    function WinnerMessage(winner) {\n        var _this = _super.call(this) || this;\n        _this.winner = winner;\n        return _this;\n    }\n    return WinnerMessage;\n}(game_message_1.GameMessage));\nexports.WinnerMessage = WinnerMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.switchTurn = exports.randomiseColor = void 0;\nvar coin_1 = require(\"./enums/coin\");\n/**\n * Randomises color\n * @returns {Coin} Random coin color\n */\nfunction randomiseColor() {\n    return Math.floor(Math.random() * 2) + 1;\n}\nexports.randomiseColor = randomiseColor;\n/**\n * Switches turn depending on input\n * @param {Coin} currentTurn - The current coin color\n * @returns {Coin} The opposing coin color\n */\nfunction switchTurn(currentTurn) {\n    return currentTurn === coin_1.Coin.Red ? coin_1.Coin.Green : coin_1.Coin.Red;\n}\nexports.switchTurn = switchTurn;\n","import { BoardDimensions, PlayerInfo, PlayerSettings, PlayerStats } from \"@danieldesira/daniels-connect4-common\";\r\nimport config from \"./config\";\r\nimport { AuthenticationModel } from \"./models/authentication-model\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        google: any;\r\n    }\r\n}\r\n\r\nexport async function handleGoogleSignon(response: any) {\r\n    const {credential} = response;\r\n    storeGoogleToken(credential);\r\n}\r\n\r\nfunction storeGoogleToken(token: string) {\r\n    const data = {\r\n        token,\r\n        service: 'google'\r\n    } as AuthenticationModel;\r\n    localStorage.setItem('auth', JSON.stringify(data));\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('auth');\r\n}\r\n\r\nexport function getToken(): AuthenticationModel | null {\r\n    const val = localStorage.getItem('auth');\r\n    return val ? JSON.parse(val) as AuthenticationModel : null;\r\n}\r\n\r\nexport async function getUserData() {\r\n    return await authGet(`${config.httpServer}/auth`) as PlayerInfo;\r\n}\r\n\r\nexport async function loadStats() {\r\n    const stats = await authGet(`${config.httpServer}/stats`) as PlayerStats;\r\n    if (stats) {\r\n        Dialog.notify({\r\n            id: DialogIds.PlayerStats,\r\n            title: 'Stats',\r\n            text: [\r\n                    `Wins: ${stats.wins} - ${stats.winPercent.toFixed(2)}%`,\r\n                    `Losses: ${stats.losses} - ${stats.lossPercent.toFixed(2)}%`\r\n                ]\r\n        });\r\n    }\r\n}\r\n\r\nexport function initGoogleSSO(showLoginLogout: Function) {\r\n    window.google.accounts.id.initialize({\r\n        client_id: '966331594657-sjtp3m7ooigjma726j7aa4kcf5qdu2v7.apps.googleusercontent.com',\r\n        callback: (response: any) => {\r\n            handleGoogleSignon(response);\r\n            showLoginLogout();\r\n        }\r\n    });\r\n    window.google.accounts.id.prompt();\r\n}\r\n\r\nexport async function updateSettings(dimensions: BoardDimensions) {\r\n    const params = {\r\n        dimensions\r\n    };\r\n    await authPost(`${config.httpServer}/settings`, params, () => {\r\n        Dialog.notify({\r\n            title: 'Settings',\r\n            text: ['Error saving settings!'],\r\n            id: DialogIds.ServerError\r\n        })\r\n    });\r\n}\r\n\r\nexport async function getSettings(): Promise<PlayerSettings> {\r\n    return await authGet(`${config.httpServer}/settings`);\r\n}\r\n\r\nasync function authGet(url: string): Promise<any> {\r\n    const {token, service} = getToken();\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Authorization': token,\r\n            'Service': service\r\n        }\r\n    });\r\n    const data = (res.status === 200 ? await res.json() : null);\r\n    return data;\r\n}\r\n\r\nasync function authPost(url: string, data: any, handleError: Function) {\r\n    const {token, service} = getToken();\r\n    const res = await fetch(url, {\r\n        method: 'post',\r\n        headers: {\r\n            'Authorization': token,\r\n            'Service': service,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    });\r\n    if ((res.status < 200 || res.status >= 300) && handleError) {\r\n        handleError();\r\n    }\r\n}","import Utils from \"./utils\";\r\n\r\nconst config = Utils.isLocal() ? {\r\n    httpServer: 'http://localhost:3000',\r\n    wsServer: 'ws://localhost:3000'\r\n} : {\r\n    httpServer: 'https://daniels-connect4-server.adaptable.app',\r\n    wsServer: 'wss://daniels-connect4-server.adaptable.app'\r\n};\r\n\r\nexport default config;","import ConfirmationDialogOptions from \"./confirmation-dialog-options\";\r\nimport DialogOptions from \"./dialog-options\";\r\nimport { DialogType } from \"./enums/dialog-type\";\r\nimport PromptDialogOptions from \"./prompt-dialog-options\";\r\nimport PromptInput, { PromptSelect } from \"./prompt-input\";\r\n\r\nexport default class Dialog {\r\n    \r\n    private static modal(type: DialogType, options: DialogOptions) {\r\n        if (!document.getElementById(options.id)) {\r\n            const modal = document.createElement('div') as HTMLDivElement;\r\n            modal.tabIndex = 1;\r\n            modal.id = options.id;\r\n            modal.classList.add('dialog');\r\n\r\n            if (options.title) {\r\n                const h1 = document.createElement('h1') as HTMLHeadingElement;\r\n                h1.innerText = options.title;\r\n                h1.classList.add('dialog-title');\r\n                modal.appendChild(h1);\r\n                modal.appendChild(document.createElement('hr'));\r\n            }\r\n\r\n            const textContainer = document.createElement('div') as HTMLDivElement;\r\n            this.appendText(options.text, textContainer);\r\n            modal.appendChild(textContainer);\r\n\r\n            switch (type) {\r\n                case DialogType.Confirmation: {\r\n                    const o = options as ConfirmationDialogOptions;\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'Yes', () => {\r\n                        o.yesCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.yesColor, 'button');\r\n                    this.appendBtn(btnContainer, 'No', () => {\r\n                        o.noCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.noColor, 'button');\r\n                    break;\r\n                }\r\n                case DialogType.Notification: {\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'OK', () => {\r\n                        this.closeModal(modal);\r\n                    }, 'green', 'button');\r\n\r\n                    modal.addEventListener('keydown', (event: KeyboardEvent) => {\r\n                        if (event.key === 'Escape' || event.key === 'Enter') {\r\n                            this.closeModal(modal);\r\n                        }\r\n                    });\r\n\r\n                    break;\r\n                }\r\n                case DialogType.Prompt: {\r\n                    const o = options as PromptDialogOptions;\r\n                    this.appendForm(modal, o);\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            document.body.appendChild(modal);\r\n        }\r\n    }\r\n\r\n    private static appendBtn(container: HTMLDivElement | HTMLFormElement,\r\n                text: string,\r\n                callback: any,\r\n                bgColor: string,\r\n                btnType: 'submit' | 'button' | 'reset') {\r\n        const btn = document.createElement('button') as HTMLButtonElement;\r\n        btn.type = btnType;\r\n        btn.innerText = text;\r\n        btn.classList.add('text');\r\n        btn.classList.add('dialog-btn');\r\n        btn.classList.add(`dialog-btn-${bgColor}`);\r\n        if (btnType === 'button') {\r\n            btn.addEventListener('click', callback);\r\n        }\r\n        container.appendChild(btn);\r\n    }\r\n\r\n    private static appendForm(modal: HTMLDivElement, options: PromptDialogOptions) {\r\n        const inputContainer = document.createElement('div') as HTMLDivElement;\r\n        inputContainer.classList.add('dialog-input-container');\r\n        modal.appendChild(inputContainer);\r\n\r\n        const form = document.createElement('form') as HTMLFormElement;\r\n        inputContainer.appendChild(form);\r\n        form.addEventListener('submit', (event: SubmitEvent) => {\r\n            event.preventDefault();\r\n            if (options.onOK) {\r\n                options.onOK();\r\n            }\r\n            this.closeModal(modal);\r\n        });\r\n\r\n        this.appendInputs(form, options.inputs);\r\n        this.appendSelects(form, options.selects);\r\n\r\n        const btnContainer = document.createElement('div') as HTMLDivElement;\r\n        btnContainer.classList.add('dialog-btn-container');\r\n        form.appendChild(btnContainer);\r\n\r\n        this.appendBtn(btnContainer, 'OK', null, 'green', 'submit');\r\n        this.appendBtn(btnContainer, 'Cancel', () => {\r\n            if (options.onCancel) {\r\n                options.onCancel();\r\n            }\r\n            this.closeModal(modal);\r\n        }, 'red', 'button');\r\n    }\r\n\r\n    private static appendInputs(form: HTMLFormElement, inputs: Array<PromptInput>) {\r\n        for (let i: number = 0; i < inputs.length; i++) {\r\n            const input = document.createElement('input');\r\n            input.type = inputs[i].type;\r\n            input.id = `dialog-input-${inputs[i].name}`;\r\n            input.name = `dialog-input-${inputs[i].name}`;\r\n            input.ariaPlaceholder = `Enter ${inputs[i].label}`;\r\n            input.placeholder = `Enter ${inputs[i].label}`;\r\n            input.maxLength = inputs[i].limit;\r\n            input.classList.add('dialog-input');\r\n            input.classList.add('text');\r\n            input.required = inputs[i].required;\r\n            input.ariaRequired = inputs[i].required.toString();\r\n            form.appendChild(input);\r\n\r\n            this.appendBrElement(form);\r\n            this.appendBrElement(form);\r\n        }\r\n    }\r\n\r\n    private static appendSelects(form: HTMLFormElement, selects: Array<PromptSelect>) {\r\n        for (let i: number = 0; i < selects.length; i++) {\r\n            const select = document.createElement('select');\r\n            select.id = `dialog-select-${selects[i].name}`;\r\n            select.name = `dialog-select-${selects[i].name}`;\r\n            select.ariaPlaceholder = selects[i].label;\r\n            select.classList.add('dialog-input');\r\n            select.required = selects[i].required;\r\n            select.ariaRequired = selects[i].required.toString();\r\n            form.appendChild(select);\r\n\r\n            for (let j = 0; j < selects[i].options.length; j++) {\r\n                const option = document.createElement('option');\r\n                option.innerText = selects[i].options[j].text;\r\n                option.value = selects[i].options[j].value;\r\n                if (selects[i].default === parseInt(selects[i].options[j].value)) {\r\n                    option.selected = true;\r\n                    option.ariaSelected = \"true\";\r\n                }\r\n                select.appendChild(option);\r\n            }\r\n\r\n            const handleChange = selects[i].onChange;\r\n            if (handleChange) {\r\n                handleChange(select.selectedOptions[0].value);\r\n                select.addEventListener('change', () => handleChange(select.selectedOptions[0].value));\r\n            }\r\n\r\n            this.appendBrElement(form);\r\n            this.appendBrElement(form);\r\n        }\r\n    }\r\n\r\n    private static appendBrElement(container: HTMLDivElement | HTMLFormElement) {\r\n        const br = document.createElement('br') as HTMLBRElement;\r\n        container.appendChild(br);\r\n    }\r\n\r\n    private static appendText(text: Array<string>, container: HTMLDivElement) {\r\n        container.classList.add('text');\r\n        container.classList.add('dialog-text');\r\n        for (let i: number = 0; i < text.length; i++) {\r\n            const p = document.createElement('p') as HTMLParagraphElement;\r\n            p.innerText = text[i];\r\n            container.appendChild(p);\r\n        }\r\n    }\r\n\r\n    private static closeModal(modal: HTMLDivElement) {\r\n        if (document.body.contains(modal)) {\r\n            document.body.removeChild(modal);\r\n        }\r\n    }\r\n\r\n    public static confirm(options: ConfirmationDialogOptions) {\r\n        Dialog.modal(DialogType.Confirmation, options);\r\n    }\r\n\r\n    public static notify(options: DialogOptions) {\r\n        Dialog.modal(DialogType.Notification, options);\r\n    }\r\n\r\n    public static prompt(options: PromptDialogOptions) {\r\n        Dialog.modal(DialogType.Prompt, options);\r\n    }\r\n\r\n    public static closeAllOpenDialogs() {\r\n        const dialogs = document.getElementsByClassName('dialog') as HTMLCollectionOf<HTMLDivElement>;\r\n        for (let i: number = 0; i < dialogs.length; i++) {\r\n            this.closeModal(dialogs[i]);\r\n        }\r\n    }\r\n\r\n}","export enum DialogType {\r\n    Confirmation = 0,\r\n    Notification = 1,\r\n    Prompt = 2\r\n}","import { BoardDimensions } from \"@danieldesira/daniels-connect4-common\";\r\nimport { PromptSelect } from \"./dialog/prompt-input\";\r\n\r\nconst dimensionsSelectData: PromptSelect = {\r\n    name: 'dimensions',\r\n    label: 'Dimensions',\r\n    required: true,\r\n    options: [\r\n        {\r\n            text: 'Small (6x5)',\r\n            value: BoardDimensions.Small.toString()\r\n        },\r\n        {\r\n            text: 'Medium (7x6)',\r\n            value: BoardDimensions.Medium.toString()\r\n        },\r\n        {\r\n            text: 'Large (9x8)',\r\n            value: BoardDimensions.Large.toString()\r\n        }\r\n    ],\r\n    default: 3,\r\n    onChange: () => {}\r\n};\r\n\r\nexport default dimensionsSelectData;","export enum DialogIds {\r\n    PlayerNames = 'player-input-dialog',\r\n    ServerError = 'server-error-dialog',\r\n    Instructions = 'instructions-dialog',\r\n    GameEnd = 'game-end-dialog',\r\n    ExitGame = 'exit-game-dialog',\r\n    ContinueGame = 'continue-game-dialog',\r\n    Saved = 'saved-notification-dialog',\r\n    PlayerStats = 'player-stats-dialog',\r\n    Settings = 'settings-dialog',\r\n}","export enum GameMode {\r\n    SamePC = 1,\r\n    Network = 2\r\n}","export enum Sound {\r\n    LandCoin = './sounds/land-coin.m4a',\r\n    Win = './sounds/win.m4a',\r\n    Lose = './sounds/lose.m4a'\r\n}","import Position from './position';\r\nimport PlayerNameSection from './player-name-section';\r\nimport GameOptions from './game-options';\r\nimport BoardLogic, { Coin, switchTurn } from '@danieldesira/daniels-connect4-common';\r\n\r\nexport default abstract class Game {\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    protected context: CanvasRenderingContext2D;\r\n    protected board: BoardLogic;\r\n\r\n    private exitBtn: HTMLButtonElement;\r\n    protected playerNameSection: PlayerNameSection;\r\n    private gameIndicatorsContainer: HTMLDivElement;\r\n    private gameMenu: HTMLDivElement;\r\n    protected timerSpan: HTMLSpanElement;\r\n    protected countdownSpan: HTMLSpanElement;\r\n\r\n    protected turn: Coin = Coin.Red;\r\n\r\n    private coinRadius: number;\r\n    private rowGap: number;\r\n    private colGap: number;\r\n    private colOffset: number;\r\n    private static verticalOffset: number = 70;\r\n\r\n    protected currentCoinColumn: number = 4;\r\n    protected static moveLeftKeys: Array<string> = ['a', 'A', 'ArrowLeft'];\r\n    protected static moveRightKeys: Array<string> = ['d', 'D', 'ArrowRight'];\r\n\r\n    protected constructor(options: GameOptions) {\r\n        this.canvas = document.getElementById(options.canvasId) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (options.exitBtnId) {\r\n            this.exitBtn = document.getElementById(options.exitBtnId) as HTMLButtonElement;\r\n        }\r\n\r\n        if (options.playerRedId && options.playerGreenId) {\r\n            this.playerNameSection = new PlayerNameSection(options.playerRedId, options.playerGreenId);\r\n        }\r\n\r\n        if (options.gameIndicatorsId) {\r\n            this.gameIndicatorsContainer = document.getElementById(options.gameIndicatorsId) as HTMLDivElement;\r\n        }\r\n\r\n        if (options.menuId) {\r\n            this.gameMenu = document.getElementById(options.menuId) as HTMLDivElement;\r\n        }\r\n\r\n        if (options.timerId) {\r\n            this.timerSpan = document.getElementById(options.timerId) as HTMLSpanElement;\r\n        }\r\n\r\n        if (options.countdownId) {\r\n            this.countdownSpan = document.getElementById(options.countdownId) as HTMLSpanElement;\r\n        }\r\n    }\r\n\r\n    protected start() {\r\n        this.showGame();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.initPlayerNames();\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n\r\n        this.resizeCanvas();\r\n        this.setGameEvents();\r\n    }\r\n\r\n    private paintBoard() {\r\n        const boardGradient = this.context.createLinearGradient(0, 0, this.canvas.width, 0);\r\n        boardGradient.addColorStop(0, 'blue');\r\n        boardGradient.addColorStop(1, 'aqua');\r\n        this.context.fillStyle = boardGradient;\r\n        this.context.fillRect(0, Game.verticalOffset, this.canvas.width, this.canvas.height);\r\n\r\n        for (let col = this.board.getColumns() - 1; col >= 0; col--) {\r\n            for (let row = this.board.getRows() - 1; row >= 0; row--) {\r\n                this.context.fillStyle = Game.getColor(this.board.getBoard()[col][row]);\r\n                this.drawCoin(col, row);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        this.canvas.addEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.addEventListener('click', this.canvasClick, false);\r\n        window.addEventListener('beforeunload', this.beforeUnload);\r\n        window.addEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.addEventListener('click', this.exit);\r\n        document.body.addEventListener('keydown', this.handleKeyDown);\r\n        this.canvas.addEventListener('touchmove', this.canvasTouchmove);\r\n    }\r\n\r\n    protected abstract canvasMousemove(event: MouseEvent): void;\r\n    protected abstract canvasClick(event: MouseEvent): void;\r\n    protected abstract handleKeyDown(event: KeyboardEvent): void;\r\n    protected abstract canvasTouchmove(event: TouchEvent): void;\r\n\r\n    protected getColumnFromCursorPosition(event: MouseEvent | Touch): number {\r\n        const position = Position.getCursorPosition(event, this.canvas);\r\n        const column = Math.round((position.x - this.colOffset) / this.colGap);\r\n        return column;\r\n    }\r\n\r\n    protected switchTurn() {\r\n        this.turn = switchTurn(this.turn);\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n    }\r\n\r\n    protected moveCoin() {\r\n        this.clearUpper();\r\n        this.context.fillStyle = Game.getColor(this.turn);\r\n        this.paintCoinToDrop(this.currentCoinColumn);\r\n    }\r\n\r\n    protected landCoin(): number {\r\n        if (this.board.getBoard()[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = this.board.putCoin(this.turn, this.currentCoinColumn);\r\n            \r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.drawCoin(this.currentCoinColumn, row);\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected abstract showWinDialog(winner: string, currentTurn: Coin);\r\n\r\n    protected closeGameAfterWinning() {\r\n        this.cleanUpEvents();\r\n\r\n        if (this.exitBtn) {\r\n            this.exitBtn.classList.add('hide');\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            this.resetValues();\r\n            this.hideGame();\r\n\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.clear();\r\n            }\r\n        }, 3000);\r\n    }\r\n\r\n    protected paintCoinToDrop(column: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, this.coinRadius, this.coinRadius, 0, 2 * Math.PI);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected abstract beforeUnload(event: Event);\r\n\r\n    private clearUpper() {\r\n        this.context.clearRect(0, 0, this.canvas.width, Game.verticalOffset);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        this.canvas.removeEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.removeEventListener('click', this.canvasClick, false);\r\n        window.removeEventListener('beforeunload', this.beforeUnload);\r\n        window.removeEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.removeEventListener('click', this.exit);\r\n        document.body.removeEventListener('keydown', this.handleKeyDown);\r\n        this.canvas.removeEventListener('touchmove', this.canvasTouchmove);\r\n    }\r\n\r\n    protected exit() {\r\n        this.cleanUpEvents();\r\n        this.hideGame();\r\n        this.resetValues();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.clear();\r\n        }\r\n    }\r\n\r\n    protected resizeCanvas = () => {\r\n        const topHeight = 100;\r\n\r\n        this.canvas.height = window.innerHeight - topHeight;\r\n        this.canvas.width = window.innerWidth;\r\n\r\n        if (this.canvas.width < 1000) {\r\n            this.coinRadius = 20; // Mobile/tablet\r\n        } else {\r\n            this.coinRadius = 30; // Desktop\r\n        }\r\n\r\n        if (this.board) {\r\n            this.colGap = this.canvas.width / this.board.getColumns();\r\n            this.rowGap = (this.canvas.height - topHeight) / this.board.getRows();\r\n            this.colOffset = this.colGap / 2;\r\n            this.paintBoard();\r\n        }\r\n    };\r\n\r\n    protected resetValues() {\r\n        this.turn = Coin.Red;\r\n        this.board.resetBoard();\r\n        \r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.reset();\r\n        }\r\n    }\r\n\r\n    private drawCoin(column: number, row: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, Game.verticalOffset * 2 + row * this.rowGap, this.coinRadius, 0, Math.PI * 2);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected areBothPlayersConnected(): boolean {\r\n        return this.playerNameSection && this.playerNameSection.areBothPlayersConnected();\r\n    }\r\n\r\n    private showGame() {\r\n        this.canvas.classList.remove('hide');\r\n        this.exitBtn.classList.remove('hide');\r\n        this.gameIndicatorsContainer.classList.remove('hide');\r\n        this.gameMenu.classList.add('hide');\r\n    }\r\n\r\n    private hideGame() {\r\n        this.canvas.classList.add('hide');\r\n        this.exitBtn.classList.add('hide');\r\n        this.gameIndicatorsContainer.classList.add('hide');\r\n        this.gameMenu.classList.remove('hide');\r\n    }\r\n\r\n    protected static getColor(color: Coin): string {\r\n        let value: string = '';\r\n        switch (color) {\r\n            case Coin.Empty:\r\n                value = 'lightyellow';\r\n                break;\r\n            case Coin.Red:\r\n                value = 'red';\r\n                break;\r\n            case Coin.Green:\r\n                value = 'greenyellow';\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common/lib/enums/coin\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport Socket from \"./socket\";\r\nimport Utils from \"./utils\";\r\nimport { ActionMessage, BoardDimensions, CurrentTurnMessage, ErrorMessage, GameMessage, InitialMessage, SkipTurnMessage, WinnerMessage, skipTurnMaxWait } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport { getToken } from \"./authentication\";\r\nimport { AuthenticationModel } from \"./models/authentication-model\";\r\nimport { BoardLogic } from \"@danieldesira/daniels-connect4-common/lib/board-logic\";\r\n\r\nexport default class NetworkGame extends Game {\r\n\r\n    private static instance: NetworkGame;\r\n\r\n    private socket: Socket;\r\n    private turnCountDown: number;\r\n    private turnCountDownInterval: number;\r\n    private logoutBtn: HTMLButtonElement;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n        this.logoutBtn = document.getElementById(options.logoutBtnId) as HTMLButtonElement;\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): NetworkGame {\r\n        if (!NetworkGame.instance) {\r\n            NetworkGame.instance = new NetworkGame(options);\r\n        }\r\n        return NetworkGame.instance;\r\n    }\r\n\r\n    public start() {\r\n        this.board = new BoardLogic(BoardDimensions.Large);\r\n        const auth = getToken();\r\n        if (auth) {\r\n            this.defineSocket(auth);\r\n            this.startCountdown();\r\n            super.start();\r\n            document.body.classList.add('waiting');\r\n            this.disableLogoutBtn();\r\n            if (this.timerSpan) {\r\n                this.timerSpan.classList.add('hide');\r\n            }\r\n            if (this.countdownSpan) {\r\n                this.countdownSpan.classList.remove('hide');\r\n            }\r\n        } else {\r\n            Dialog.notify({\r\n                title: 'Error',\r\n                text: ['User not logged in!'],\r\n                id: DialogIds.ServerError\r\n            });\r\n        }\r\n    }\r\n\r\n    private defineSocket(auth: AuthenticationModel) {\r\n        this.socket = new Socket(auth);\r\n        this.socket.onMessageCallback = this.onSocketMessage;\r\n        this.socket.onErrorCallback = this.onSocketError;\r\n        this.socket.onGameCancel = this.confirmExit;\r\n    }\r\n\r\n    private onSocketMessage = (messageData: GameMessage) => {\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n            if (this.socket && this.playerNameSection) {\r\n                if (data.opponentName) {\r\n                    this.toggleWaitingClass();\r\n                    if (this.socket.getPlayerColor() === Coin.Red) {\r\n                        this.playerNameSection.setPlayerGreen(data.opponentName);\r\n                    } else if (this.socket.getPlayerColor() === Coin.Green) {\r\n                        this.playerNameSection.setPlayerRed(data.opponentName);\r\n                    }\r\n                }\r\n    \r\n                if (data.playerName) {\r\n                    if (this.socket.getPlayerColor() === Coin.Red) {\r\n                        this.playerNameSection.setPlayerRed(data.playerName);\r\n                    } else if (this.socket.getPlayerColor() === Coin.Green) {\r\n                        this.playerNameSection.setPlayerGreen(data.playerName);\r\n                    }\r\n                }\r\n        \r\n                if (data.color) {\r\n                    if (data.color === Coin.Red) {\r\n                        this.playerNameSection.setPlayerRed(this.socket.getPlayerName());\r\n                    } else {\r\n                        this.playerNameSection.setPlayerGreen(this.socket.getPlayerName());\r\n                    }\r\n                }\r\n\r\n                if (data.dimensions) {\r\n                    this.board = new BoardLogic(data.dimensions);\r\n                    this.resizeCanvas();\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isActionMessage(messageData)) {\r\n            const data = messageData as ActionMessage;\r\n            if (data.action === 'mousemove') {\r\n                this.currentCoinColumn = data.column;\r\n                this.moveCoin();\r\n            }\r\n    \r\n            if (data.action === 'click') {\r\n                this.turn = data.color;\r\n                this.currentCoinColumn = data.column;\r\n                this.landCoin();\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isSkipTurnMessage(messageData)) {\r\n            const data = messageData as SkipTurnMessage;\r\n            if (data.skipTurn && data.currentTurn) {\r\n                this.turn = data.currentTurn;\r\n                this.turnCountDown = skipTurnMaxWait;\r\n                this.toggleWaitingClass();\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isWinnerMessage(messageData)) {\r\n            const data = messageData as WinnerMessage;\r\n            let winner: string = null;\r\n            if (this.playerNameSection) {\r\n                if (data.winner === Coin.Red) {\r\n                    winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                } else {\r\n                    winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n            }\r\n            this.showWinDialog(winner, data.winner);\r\n\r\n            this.closeGameAfterWinning();\r\n            document.body.classList.remove('waiting');\r\n            this.enableLogoutBtn();\r\n        }\r\n\r\n        if (GameMessage.isTieMessage(messageData)) {\r\n            Dialog.notify({\r\n                id: DialogIds.GameEnd,\r\n                text: ['Game resulted in tie!'],\r\n                title: null\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.enableLogoutBtn();\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isCurrentTurnMessage(messageData)) {\r\n            const data = messageData as CurrentTurnMessage;\r\n            this.turn = data.currentTurn;\r\n            this.toggleWaitingClass();\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.indicateTurn(this.turn);\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isDisconnectMessage(messageData)) {\r\n            Dialog.notify({\r\n                id: DialogIds.GameEnd,\r\n                text: ['Your opponent disconnected. You win!'],\r\n                title: 'We have a winner!'\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.enableLogoutBtn();\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isErrorMessage(messageData)) {\r\n            const data = messageData as ErrorMessage;\r\n            Dialog.closeAllOpenDialogs();\r\n            Dialog.notify({\r\n                id: DialogIds.ServerError,\r\n                text: [data.error],\r\n                title: 'Error'\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.enableLogoutBtn();\r\n            this.closeGameAfterWinning();\r\n        }\r\n    };\r\n\r\n    private onSocketError = () => {\r\n        super.exit();\r\n        this.enableLogoutBtn();\r\n    };\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n        this.stopCountdown();\r\n\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin();\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n            this.socket.send(data);\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'click', this.turn);\r\n            this.socket.send(data);\r\n            \r\n            this.landCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasTouchmove = (event: TouchEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            const firstTouch = event.changedTouches[0];\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(firstTouch);\r\n            this.moveCoin();\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n            this.socket.send(data);\r\n        }\r\n    };\r\n\r\n    protected landCoin(): number {\r\n        if (this.board.getBoard()[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = super.landCoin();\r\n            \r\n            // Assume the game is still going on\r\n            this.switchTurn();\r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.paintCoinToDrop(this.currentCoinColumn);\r\n            Utils.playSound(Sound.LandCoin);\r\n            this.toggleWaitingClass();\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    private toggleWaitingClass() {\r\n        if (this.socket.getPlayerColor() === this.turn) {\r\n            document.body.classList.remove('waiting');\r\n        } else {\r\n            document.body.classList.add('waiting');\r\n        }\r\n    }\r\n\r\n    public exit = () => {\r\n        Dialog.confirm({\r\n            id: DialogIds.ExitGame,\r\n            title: null,\r\n            text: ['Network game in progress. Are you sure you want to quit?'],\r\n            yesCallback: this.confirmExit,\r\n            noCallback: () => {},\r\n            yesColor: 'red',\r\n            noColor: 'green'\r\n        });\r\n    };\r\n\r\n    private confirmExit = () => {\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n        Dialog.closeAllOpenDialogs();\r\n        document.body.classList.remove('waiting');\r\n        this.enableLogoutBtn();\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = (event: Event) => {\r\n        // Display default dialog before closing\r\n        event.preventDefault();\r\n        event.returnValue = false; // Required by Chrome\r\n    };\r\n\r\n    protected showWinDialog(winner: string, currentTurn: Coin) {\r\n        const winMsg: Array<string> = [];\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.socket && this.socket.getPlayerColor() === currentTurn) {\r\n            winMsg.push('You win!');\r\n            Utils.playSound(Sound.Win);\r\n        } else {\r\n            winMsg.push('You lose!');\r\n            Utils.playSound(Sound.Lose);\r\n        }\r\n        Dialog.notify({\r\n            id: DialogIds.GameEnd,\r\n            text: winMsg,\r\n            title: 'Game Ends'\r\n        });\r\n    }\r\n\r\n    protected switchTurn() {\r\n        super.switchTurn();\r\n        this.resetCountdown();\r\n    }\r\n\r\n    private turnCountDownCallback = () => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.turnCountDown--;\r\n            this.countdownSpan.innerText = this.turnCountDown.toString();\r\n            this.adaptCountDownColor();\r\n        }\r\n    };\r\n\r\n    private adaptCountDownColor() {\r\n        if (this.turnCountDown > skipTurnMaxWait / 2) {\r\n            this.countdownSpan.classList.add('green-text');\r\n            this.countdownSpan.classList.remove('red-text');\r\n        } else {\r\n            this.countdownSpan.classList.remove('green-text');\r\n            this.countdownSpan.classList.add('red-text');\r\n        }\r\n    }\r\n\r\n    private startCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n        this.turnCountDownInterval = window.setInterval(this.turnCountDownCallback, 1000);\r\n    }\r\n\r\n    private stopCountdown() {\r\n        clearInterval(this.turnCountDownInterval);\r\n        this.countdownSpan.innerText = '';\r\n    }\r\n\r\n    private resetCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n    }\r\n\r\n    protected handleKeyDown = (event: KeyboardEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            let data: GameMessage;\r\n\r\n            if (Game.moveLeftKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn > 0) {\r\n                    this.currentCoinColumn--;\r\n\r\n                    data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n                    this.socket.send(data);\r\n\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (Game.moveRightKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn < this.board.getColumns() - 1) {\r\n                    this.currentCoinColumn++;\r\n\r\n                    data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n                    this.socket.send(data);\r\n\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (event.key === ' ') {\r\n                data = new ActionMessage(this.currentCoinColumn, 'click', this.turn);\r\n                this.socket.send(data);\r\n\r\n                this.landCoin();\r\n            }\r\n        }\r\n\r\n        if (event.key === 'Escape') {\r\n            this.exit();\r\n        }\r\n    };\r\n\r\n    private disableLogoutBtn() {\r\n        this.logoutBtn.disabled = true;\r\n        this.logoutBtn.ariaDisabled = 'true';\r\n    }\r\n\r\n    private enableLogoutBtn() {\r\n        this.logoutBtn.disabled = false;\r\n        this.logoutBtn.ariaDisabled = 'false';\r\n    }\r\n    \r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common\";\r\n\r\nexport default class PlayerNameSection {\r\n    private playerRedSpan: HTMLSpanElement;\r\n    private playerGreenSpan: HTMLSpanElement;\r\n    private playerRed: string;\r\n    private playerGreen: string;\r\n\r\n    public constructor(playerRedId: string, playerGreenId: string) {\r\n        if (playerRedId) {\r\n            this.playerRedSpan = document.getElementById(playerRedId);\r\n        }\r\n\r\n        if (playerGreenId) {\r\n            this.playerGreenSpan = document.getElementById(playerGreenId);\r\n        }\r\n    }\r\n\r\n    public initPlayerNames() {\r\n        const waiting = 'Waiting to connect...';\r\n        if (this.playerGreenSpan && !this.playerGreen) {\r\n            this.playerGreenSpan.innerText = waiting;\r\n        }\r\n        if (this.playerRedSpan && !this.playerRed) {\r\n            this.playerRedSpan.innerText = waiting;\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = '';\r\n        }\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = '';\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.playerRed = null;\r\n        this.playerGreen = null;\r\n    }\r\n\r\n    public getPlayerRed = (): string => this.playerRed;\r\n    public getPlayerGreen = (): string => this.playerGreen;\r\n    public areBothPlayersConnected = (): boolean => !!this.playerRed && !!this.playerGreen;\r\n\r\n    public setPlayerRed(playerName: string) {\r\n        this.playerRed = playerName;\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = this.playerRed;\r\n        }\r\n    }\r\n\r\n    public setPlayerGreen(playerName: string) {\r\n        this.playerGreen = playerName;\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = this.playerGreen;\r\n        }\r\n    }\r\n\r\n    public indicateTurn(turn: Coin) {\r\n        if (turn === Coin.Red) {\r\n            this.playerRedSpan.classList.add('currentTurn');\r\n            this.playerGreenSpan.classList.remove('currentTurn');\r\n        } else {\r\n            this.playerGreenSpan.classList.add('currentTurn');\r\n            this.playerRedSpan.classList.remove('currentTurn');\r\n        }\r\n    }\r\n\r\n}","export default class Position {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public static getCursorPosition(event: MouseEvent | Touch, canvas: HTMLCanvasElement): Position {\r\n        let x: number;\r\n        let y: number;\r\n        if (event.pageX !== undefined || event.pageY !== undefined) {\r\n            x = event.pageX;\r\n            y = event.pageY;\r\n        }\r\n        else {\r\n            x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n        }\r\n        x -= canvas.offsetLeft;\r\n        y -= canvas.offsetTop;\r\n        return new Position(x, y);\r\n    }\r\n}","import Dialog from \"./dialog/dialog\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Utils from \"./utils\";\r\nimport Timer from \"./timer\";\r\nimport { BoardDimensions, Coin, randomiseColor } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport PreviousGameData from \"./models/previous-game-data\";\r\nimport { BoardLogic } from \"@danieldesira/daniels-connect4-common/lib/board-logic\";\r\nimport dimensionsSelectData from \"./dimensions-select\";\r\n\r\nexport default class SameDeviceGame extends Game {\r\n\r\n    private static instance: SameDeviceGame;\r\n    private timer: Timer;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n        \r\n        if (options.timerId) {\r\n            this.timer = new Timer(options.timerId);\r\n        }\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): SameDeviceGame {\r\n        if (!SameDeviceGame.instance) {\r\n            SameDeviceGame.instance = new SameDeviceGame(options);\r\n        }\r\n        return SameDeviceGame.instance;\r\n    }\r\n\r\n    private setTimer = () => {\r\n        if (this.timer) {\r\n            this.timer.set();\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        this.checkGameData();\r\n        if (this.timerSpan) {\r\n            this.timerSpan.classList.remove('hide');\r\n        }\r\n        if (this.countdownSpan) {\r\n            this.countdownSpan.classList.add('hide');\r\n        }\r\n    }\r\n\r\n    private onGameDataCheck() {\r\n        this.setUpPlayerNames();\r\n        \r\n        if (this.areBothPlayersConnected()) {\r\n            this.setTimer();\r\n        }\r\n\r\n        super.start();\r\n    }\r\n\r\n    private setUpPlayerNames() {\r\n        const gameData = JSON.parse(localStorage.getItem('gameData')) as PreviousGameData;\r\n\r\n        const onPromptOK = () => {\r\n            const redInput = document.getElementById('dialog-input-red') as HTMLInputElement;\r\n            const greenInput = document.getElementById('dialog-input-green') as HTMLInputElement;\r\n            if (redInput.value && greenInput.value && redInput.value.trim()\r\n                    && greenInput.value.trim() && this.playerNameSection) {\r\n                this.playerNameSection.setPlayerRed(redInput.value);\r\n                this.playerNameSection.setPlayerGreen(greenInput.value);\r\n                this.setTimer();\r\n            }\r\n\r\n            const dimensionsSelect = document.getElementById('dialog-select-dimensions') as HTMLSelectElement;\r\n            const dimensions = parseInt(dimensionsSelect.value) as BoardDimensions;\r\n            this.board = new BoardLogic(dimensions);\r\n        };\r\n\r\n        if (!gameData) {\r\n            dimensionsSelectData.onChange = (value: string) => {\r\n                const dimensions = parseInt(value);\r\n                this.board = new BoardLogic(dimensions);\r\n                this.resizeCanvas();\r\n            };\r\n            Dialog.prompt({\r\n                id: DialogIds.PlayerNames,\r\n                title: 'Input Players',\r\n                text: ['Please enter player names! (10 characters or less.)'],\r\n                onOK: () => onPromptOK(),\r\n                onCancel: this.exit,\r\n                inputs: [\r\n                    {\r\n                        label: 'Player Red',\r\n                        name: 'red',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    },\r\n                    {\r\n                        label: 'Player Green',\r\n                        name: 'green',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    }\r\n                ],\r\n                selects: [dimensionsSelectData]\r\n            });\r\n        }\r\n    }\r\n\r\n    private checkGameData() {\r\n        const gameData = JSON.parse(localStorage.getItem('gameData')) as PreviousGameData;\r\n        \r\n        if (gameData) {\r\n            Dialog.confirm({\r\n                id: DialogIds.ContinueGame,\r\n                title: null,\r\n                text: ['Do you want to continue playing the previous game?'],\r\n                yesCallback: this.continuePreviousGame,\r\n                noCallback: this.cancelPreviousGame,\r\n                yesColor: 'green',\r\n                noColor: 'red'\r\n            });\r\n        } else {\r\n            this.turn = randomiseColor();\r\n            this.onGameDataCheck();\r\n        }\r\n    }\r\n\r\n    private continuePreviousGame = () => {\r\n        this.restoreLastGame();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private cancelPreviousGame = () => {\r\n        this.clearGameData();\r\n        this.turn = randomiseColor();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private restoreLastGame() {\r\n        const gameData = JSON.parse(localStorage.getItem('gameData')) as PreviousGameData;\r\n        \r\n        this.turn = gameData.nextTurn;\r\n        this.board = new BoardLogic(gameData.dimensions);\r\n        this.board.setBoard(gameData.board);\r\n\r\n        if (this.timer) {\r\n            this.timer.setSecondsRunning(gameData.secondsRunning);\r\n        }\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.setPlayerGreen(gameData.playerGreen);\r\n            this.playerNameSection.setPlayerRed(gameData.playerRed);\r\n        }\r\n    }\r\n\r\n    private saveGame() {\r\n        if (this.areBothPlayersConnected()) {\r\n            const gameData: PreviousGameData = {\r\n                nextTurn: this.turn,\r\n                board: this.board.getBoard(),\r\n                secondsRunning: this.timer?.getSecondsRunning(),\r\n                playerRed: this.playerNameSection?.getPlayerRed(),\r\n                playerGreen: this.playerNameSection?.getPlayerGreen(),\r\n                dimensions: this.board.getDimensions()\r\n            };\r\n            localStorage.setItem('gameData', JSON.stringify(gameData));\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.landCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasTouchmove = (event: TouchEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            const firstTouch = event.changedTouches[0];\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(firstTouch);\r\n            this.moveCoin();\r\n        }\r\n    };\r\n\r\n    public exit = () => {\r\n        this.saveGame();\r\n        Dialog.closeAllOpenDialogs();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = () => {\r\n        this.saveGame();\r\n    }\r\n\r\n    private pageVisibilityChange = () => {\r\n        if (this.timer) {\r\n            this.timer.pauseWhenDocumentHidden();\r\n        }\r\n    };\r\n\r\n    protected closeGameAfterWinning() {\r\n        this.clearGameData();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.closeGameAfterWinning();\r\n    }\r\n\r\n    protected landCoin(): number {\r\n        if (this.board.getBoard()[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = super.landCoin();\r\n            \r\n            const coinCount = this.board.countConsecutiveCoins(this.currentCoinColumn, row, this.turn);\r\n\r\n            if (coinCount >= 4) {\r\n                let winner: string = '';\r\n\r\n                if (this.playerNameSection) {\r\n                    if (this.turn === Coin.Red) {\r\n                        winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                    } else if (this.turn === Coin.Green) {\r\n                        winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                    }\r\n                }\r\n\r\n                this.showWinDialog(winner, this.turn);\r\n                this.closeGameAfterWinning();\r\n            } else if (this.board.isBoardFull()) {\r\n                let message: string = '';\r\n                if (this.playerNameSection) {\r\n                    message += `${this.playerNameSection.getPlayerRed()} (Red) and ${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n                message += ' are tied!';\r\n                Dialog.notify({\r\n                    id: DialogIds.GameEnd,\r\n                    title: 'Tie',\r\n                    text: [message]\r\n                });\r\n                this.closeGameAfterWinning();\r\n            } else { // If game is still going on\r\n                this.switchTurn();\r\n                this.context.fillStyle = Game.getColor(this.turn);\r\n                this.paintCoinToDrop(this.currentCoinColumn);\r\n                Utils.playSound(Sound.LandCoin);\r\n            }\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        super.setGameEvents();\r\n        document.addEventListener('visibilitychange', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        super.cleanUpEvents();\r\n        document.removeEventListener('changevisibility', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected showWinDialog(winner: string, _: Coin) {\r\n        const winMsg: Array<string> = new Array();\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.timer) {\r\n            winMsg.push(`Time taken: ${this.timer.getTimeInStringFormat()}`);\r\n        }\r\n        Utils.playSound(Sound.Win);\r\n        Dialog.notify({\r\n            id: DialogIds.GameEnd,\r\n            text: winMsg,\r\n            title: 'We have a winner!'\r\n        });\r\n    }\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n\r\n        if (this.timer) {\r\n            this.timer.reset();\r\n        }\r\n    }\r\n\r\n    protected handleKeyDown = (event: KeyboardEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            if (Game.moveLeftKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn > 0) {\r\n                    this.currentCoinColumn--;\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (Game.moveRightKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn < this.board.getColumns() - 1) {\r\n                    this.currentCoinColumn++;\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (event.key === ' ') {\r\n                this.landCoin();\r\n            }\r\n        }\r\n\r\n        if (event.key === 'Escape') {\r\n            this.exit();\r\n        }\r\n    };\r\n\r\n    private clearGameData() {\r\n        localStorage.removeItem('gameData');\r\n    }\r\n\r\n}","import { getToken } from \"./authentication\";\r\nimport config from \"./config\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport { AuthenticationModel } from \"./models/authentication-model\";\r\nimport { Coin, GameMessage, InitialMessage } from \"@danieldesira/daniels-connect4-common\";\r\n\r\nexport default class Socket {\r\n    private webSocket: WebSocket;\r\n    private playerColor: Coin;\r\n    private playerName: string;\r\n    private gameId: number;\r\n    public onMessageCallback: Function;\r\n    public onErrorCallback: Function;\r\n    public onGameCancel: Function;\r\n\r\n    public constructor(auth: AuthenticationModel) {\r\n        this.connect(auth);\r\n    }\r\n\r\n    private connect(auth: AuthenticationModel) {\r\n        let url: string = `${config.wsServer}?token=${auth.token}&service=${auth.service}`;\r\n\r\n        if (this.playerColor && !isNaN(this.gameId)) {\r\n            url += `&playerColor=${this.playerColor}&gameId=${this.gameId}`;\r\n        }\r\n\r\n        this.webSocket = new WebSocket(url);\r\n\r\n        this.webSocket.onmessage = this.onMessage;\r\n        this.webSocket.onerror = this.onError;\r\n        this.webSocket.onclose = this.onClose;\r\n    }\r\n\r\n    public send = (data: GameMessage) => this.webSocket.send(JSON.stringify(data));\r\n\r\n    public close() {\r\n        this.webSocket.onclose = null;\r\n        this.webSocket.onmessage = null;\r\n        this.webSocket.onerror = null;\r\n        this.webSocket.close();\r\n    }\r\n\r\n    public getPlayerColor = (): Coin => this.playerColor;\r\n    public getPlayerName = (): string => this.playerName;\r\n\r\n    private onMessage = (event: MessageEvent) => {\r\n        const messageData: GameMessage = JSON.parse(event.data);\r\n\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n\r\n            if (!this.gameId) {\r\n                this.gameId = data.gameId;\r\n            }\r\n\r\n            if (!this.playerName) {\r\n                this.playerName = data.playerName;\r\n            }\r\n            \r\n            if (!this.playerColor) {\r\n                this.playerColor = data.color;\r\n            }\r\n        }\r\n\r\n        if (this.onMessageCallback) {\r\n            this.onMessageCallback(messageData);\r\n        }\r\n    };\r\n\r\n    private onError = () => {\r\n        this.onErrorCallback();\r\n        Dialog.closeAllOpenDialogs();\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            text: ['Problem connecting to server!'],\r\n            title: 'Error'\r\n        });\r\n\r\n        document.body.classList.remove('waiting');\r\n    };\r\n\r\n    private onClose = () => {\r\n        const auth = getToken();\r\n        if (auth) {\r\n            this.connect(auth);\r\n        }\r\n    };\r\n}","export default class Timer {\r\n\r\n    private secondsRunning: number;\r\n    private interval: number;\r\n    private timerSpan: HTMLSpanElement;\r\n\r\n    public constructor(timerId: string) {\r\n        this.timerSpan = document.getElementById(timerId) as HTMLSpanElement;\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n    private timerCallback = () => {\r\n        this.secondsRunning++;\r\n        const minutes: number = Math.floor(this.secondsRunning / 60);\r\n        const seconds: number = this.secondsRunning % 60;\r\n        this.timerSpan.innerText = `${minutes}:${(seconds < 10 ? '0' : '')}${seconds}`;\r\n        \r\n        if (this.timerSpan.classList.contains('hide')) {\r\n            clearInterval(this.interval);\r\n        }\r\n    };\r\n\r\n    public set() {\r\n        if (this.timerSpan) {\r\n            this.timerSpan.classList.remove('hide');\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public stop() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.timerSpan.innerText = '';\r\n            this.timerSpan.classList.add('hide');\r\n        }\r\n    }\r\n\r\n    public pauseWhenDocumentHidden() {\r\n        if (document.hidden) {\r\n            clearInterval(this.interval);\r\n        } else {\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public getTimeInStringFormat(): string {\r\n        if (this.timerSpan) {\r\n            return this.timerSpan.innerText;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    \r\n    public setSecondsRunning(secondsRunning: number) {\r\n        this.secondsRunning = secondsRunning;\r\n    }\r\n\r\n    public getSecondsRunning = () => this.secondsRunning;   \r\n\r\n    public reset() {\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n}","export default class Utils {\r\n    public static isLocal(): boolean {\r\n        return location.protocol === 'file:'\r\n            || location.hostname === 'localhost';\r\n    }\r\n\r\n    public static playSound(path: string) {\r\n        const audio = new Audio(path);\r\n        audio.play();\r\n    }\r\n}","import { BoardDimensions } from \"@danieldesira/daniels-connect4-common\";\r\nimport { getSettings, getUserData, initGoogleSSO, loadStats, logout, updateSettings } from \"./lib/authentication\";\r\nimport Dialog from \"./lib/dialog/dialog\";\r\nimport { DialogIds } from \"./lib/enums/dialog-ids\";\r\nimport { GameMode } from \"./lib/enums/game-mode\";\r\nimport GameOptions from \"./lib/game-options\";\r\nimport NetworkGame from \"./lib/network-game\";\r\nimport SameDeviceGame from \"./lib/same-device-game\";\r\nimport dimensionsSelect from \"./lib/dimensions-select\";\r\n\r\nconst samePCBtn = document.getElementById('samePC') as HTMLButtonElement;\r\nconst networkBtn = document.getElementById('network') as HTMLButtonElement;\r\nconst instructionsBtn = document.getElementById('instructions') as HTMLButtonElement;\r\n\r\nsamePCBtn.addEventListener('click', () => {\r\n    initGame(GameMode.SamePC);\r\n}, false);\r\n\r\nnetworkBtn.addEventListener('click', () => {\r\n    initGame(GameMode.Network);\r\n}, false);\r\n\r\nfunction initGame(mode: GameMode) {\r\n    try {\r\n        const options: GameOptions = {\r\n            canvasId: 'board',\r\n            exitBtnId: 'exitBtn',\r\n            timerId: 'timer',\r\n            countdownId: 'countdown',\r\n            playerRedId: 'playerRed',\r\n            playerGreenId: 'playerGreen',\r\n            menuId: 'menu',\r\n            gameIndicatorsId: 'gameIndicators',\r\n            logoutBtnId: 'logout'\r\n        };\r\n        if (mode === GameMode.Network) {\r\n            const connect4 = NetworkGame.getInstance(options);\r\n            connect4.start();\r\n        } else {\r\n            const connect4 = SameDeviceGame.getInstance(options);\r\n            connect4.start();\r\n        }\r\n    } catch (ex) {\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            title: 'Error',\r\n            text: ['Problem encountered!']\r\n        });\r\n        console.error(ex);\r\n    }\r\n}\r\n\r\ninstructionsBtn.addEventListener('click', () => {\r\n    const text = [\r\n        'The principle behind Connect4 is simple:',\r\n        'The player who first places 4 coins next to each other, wins. You may ' +\r\n            'match horizontally, vertically or diagonally.',\r\n        'Furthermore, in Network Play, you must place your coin within 60 seconds. ' +\r\n            'If you fail to do so, you pass the turn to your opponent.',\r\n        'Further note that exiting in Same Device Play, saves game progress. You ' +\r\n            'will be presented with the option to continue the same game the next ' +\r\n            'time. This does not work for Network Play because your opponent might ' +\r\n            'not be available the next time and you might not even know him/her/them.',\r\n        'Good luck and have fun playing!'\r\n    ];\r\n    Dialog.notify({\r\n        id: DialogIds.Instructions,\r\n        text,\r\n        title: 'Instructions'\r\n    });\r\n}, false);\r\n\r\nconst shareBtn = document.getElementById('shareBtn') as HTMLAnchorElement;\r\nshareBtn.addEventListener('click', (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    if (navigator.canShare) {\r\n        const shareData = {\r\n            url: location.href,\r\n            title: `Daniel's Connect4`\r\n        };\r\n        navigator.share(shareData)\r\n            .catch((err) => console.error(`Problem while sharing: ${err}`));\r\n    } else {\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            title: 'Error',\r\n            text: ['Problem opening share menu!']\r\n        });\r\n    }\r\n});\r\n\r\nconst googleSignonBtn = document.getElementById('googleSignon') as HTMLButtonElement;\r\ngoogleSignonBtn.addEventListener('click', () => {\r\n    initGoogleSSO(showLoginLogout);\r\n});\r\n\r\nshowLoginLogout();\r\n\r\nconst logoutBtn = document.getElementById('logout') as HTMLButtonElement;\r\nlogoutBtn.addEventListener('click', () => {\r\n    logout();\r\n    showLoginLogout();\r\n});\r\n\r\nconst statsBtn = document.getElementById('stats') as HTMLButtonElement;\r\nstatsBtn.addEventListener('click', async () => {\r\n    await loadStats();\r\n});\r\n\r\nconst settingsBtn = document.getElementById('settings') as HTMLButtonElement;\r\nsettingsBtn.addEventListener('click', async () => {\r\n    dimensionsSelect.onChange = null;\r\n    const settings = await getSettings();\r\n    dimensionsSelect.default = settings.dimensions;\r\n    Dialog.prompt({\r\n        id: DialogIds.Settings,\r\n        title: 'Settings',\r\n        text: [],\r\n        inputs: [],\r\n        selects: [dimensionsSelect],\r\n        onOK: async () => {\r\n            const dimensionsSelect = document.getElementById('dialog-select-dimensions') as HTMLSelectElement;\r\n            const dimensions = parseInt(dimensionsSelect.value) as BoardDimensions;\r\n            await updateSettings(dimensions);\r\n        },\r\n        onCancel: null\r\n    });\r\n});\r\n\r\nasync function showLoginLogout() {\r\n    const loginBtns = document.getElementById('login-btns') as HTMLDivElement;\r\n    const loggedInArea = document.getElementById('slidebar') as HTMLDivElement;\r\n    if (localStorage.getItem('auth')) {\r\n        loginBtns.classList.add('hide');\r\n        loggedInArea.classList.remove('hide');\r\n        await loadUserData();\r\n    } else {\r\n        loginBtns.classList.remove('hide');\r\n        loggedInArea.classList.add('hide');\r\n    }\r\n}\r\n\r\nasync function loadUserData() {\r\n    const user = await getUserData();\r\n    if (user) {\r\n        const userName = document.getElementById('authPlayerName') as HTMLButtonElement;\r\n        userName.innerText = user.user;\r\n        const authPlayerPicture = document.getElementById('authPlayerPicture') as HTMLImageElement;\r\n        authPlayerPicture.src = user.picUrl;\r\n    } else {\r\n        logout();\r\n        showLoginLogout();\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(519);\n"],"names":["Object","defineProperty","exports","value","BoardLogic","constants_1","coin_1","dimensions_1","dim","_this","this","board","getColumns","columns","getRows","rows","getDimensions","dimensions","getBoard","resetBoard","initBoard","BoardDimensions","Small","small","Medium","medium","Large","large","prototype","Array","col","row","Coin","Empty","countConsecutiveCoins","column","currentTurn","count","coinCount","rowCount","colCount","isBoardFull","full","putCoin","color","setBoard","setBoardItem","coin","skipTurnMaxWait","switchTurn","randomiseColor","WinnerMessage","TieMessage","SkipTurnMessage","InitialMessage","GameMessage","ErrorMessage","DisconnectMessage","CurrentTurnMessage","ActionMessage","board_logic_1","enumerable","get","action_message_1","current_turn_message_1","disconnect_message_1","error_message_1","game_message_1","initial_message_1","skip_turn_message_1","tie_message_1","winner_message_1","player_turn_1","extendStatics","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","TypeError","String","__","constructor","create","_super","action","hardDisconnect","error","isInitialMessage","msg","isNaN","isInactivityMessage","isActionMessage","isSkipTurnMessage","isWinnerMessage","isTieMessage","isCurrentTurnMessage","isDisconnectMessage","isErrorMessage","gameId","playerName","opponentName","skipTurn","tie","winner","Math","floor","random","Red","Green","handleGoogleSignon","response","data","token","service","localStorage","setItem","JSON","stringify","getToken","val","getItem","parse","authGet","url","fetch","headers","res","status","json","authPost","handleError","method","body","removeItem","httpServer","stats","notify","id","DialogIds","PlayerStats","title","text","wins","winPercent","toFixed","losses","lossPercent","showLoginLogout","window","google","accounts","initialize","client_id","callback","prompt","params","ServerError","config","isLocal","wsServer","modal","type","options","document","getElementById","createElement","tabIndex","classList","add","h1","innerText","appendChild","textContainer","appendText","DialogType","Confirmation","btnContainer","appendBtn","yesCallback","closeModal","yesColor","noCallback","noColor","Notification","addEventListener","event","key","Prompt","o","appendForm","container","bgColor","btnType","btn","inputContainer","form","preventDefault","onOK","appendInputs","inputs","appendSelects","selects","onCancel","i","length","input","name","ariaPlaceholder","label","placeholder","maxLength","limit","required","ariaRequired","toString","appendBrElement","select","j","option","default","parseInt","selected","ariaSelected","handleChange","onChange","selectedOptions","br","contains","removeChild","confirm","Dialog","closeAllOpenDialogs","dialogs","getElementsByClassName","dimensionsSelectData","GameMode","Sound","turn","currentCoinColumn","resizeCanvas","canvas","height","innerHeight","width","innerWidth","coinRadius","colGap","rowGap","colOffset","paintBoard","canvasId","context","getContext","exitBtnId","exitBtn","playerRedId","playerGreenId","playerNameSection","gameIndicatorsId","gameIndicatorsContainer","menuId","gameMenu","timerId","timerSpan","countdownId","countdownSpan","start","showGame","initPlayerNames","indicateTurn","setGameEvents","boardGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Game","verticalOffset","getColor","drawCoin","canvasMousemove","canvasClick","beforeUnload","exit","handleKeyDown","canvasTouchmove","getColumnFromCursorPosition","position","getCursorPosition","round","x","moveCoin","clearUpper","paintCoinToDrop","landCoin","closeGameAfterWinning","cleanUpEvents","setTimeout","resetValues","hideGame","clear","beginPath","arc","PI","closePath","fill","clearRect","removeEventListener","reset","areBothPlayersConnected","remove","moveLeftKeys","moveRightKeys","onSocketMessage","messageData","socket","toggleWaitingClass","getPlayerColor","setPlayerGreen","setPlayerRed","getPlayerName","turnCountDown","getPlayerRed","getPlayerGreen","showWinDialog","enableLogoutBtn","GameEnd","onSocketError","send","firstTouch","changedTouches","ExitGame","confirmExit","close","returnValue","turnCountDownCallback","adaptCountDownColor","includes","logoutBtn","logoutBtnId","getInstance","NetworkGame","instance","auth","defineSocket","startCountdown","disableLogoutBtn","onMessageCallback","onErrorCallback","onGameCancel","stopCountdown","playSound","LandCoin","winMsg","push","Win","Lose","resetCountdown","turnCountDownInterval","setInterval","clearInterval","disabled","ariaDisabled","playerRed","playerGreen","playerRedSpan","playerGreenSpan","waiting","y","undefined","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","Position","offsetLeft","offsetTop","setTimer","timer","set","continuePreviousGame","restoreLastGame","onGameDataCheck","cancelPreviousGame","clearGameData","saveGame","stop","pageVisibilityChange","pauseWhenDocumentHidden","SameDeviceGame","checkGameData","setUpPlayerNames","PlayerNames","redInput","greenInput","trim","dimensionsSelect","onPromptOK","ContinueGame","gameData","nextTurn","setSecondsRunning","secondsRunning","getSecondsRunning","message","_","getTimeInStringFormat","webSocket","playerColor","onMessage","onError","onClose","connect","WebSocket","onmessage","onerror","onclose","timerCallback","minutes","seconds","interval","hidden","location","protocol","hostname","path","Audio","play","samePCBtn","networkBtn","instructionsBtn","initGame","mode","Network","ex","console","loginBtns","loggedInArea","loadUserData","getUserData","user","src","picUrl","logout","SamePC","Instructions","navigator","canShare","shareData","href","share","catch","err","initGoogleSSO","loadStats","getSettings","settings","Settings","updateSettings","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__"],"sourceRoot":""}