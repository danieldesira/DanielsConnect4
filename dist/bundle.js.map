{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/board-logic.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/constants.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/enums/coin.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/index.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/action-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/current-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/disconnect-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/error-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/game-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/initial-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/player-name-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/skip-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/tie-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/winner-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/player-turn.js","webpack:///./src/lib/dialog/dialog.ts","webpack:///./src/lib/dialog/enums/dialog-type.ts","webpack:///./src/lib/enums/dialog-ids.ts","webpack:///./src/lib/enums/game-mode.ts","webpack:///./src/lib/enums/sound.ts","webpack:///./src/lib/game.ts","webpack:///./src/lib/network-game.ts","webpack:///./src/lib/player-name-section.ts","webpack:///./src/lib/position.ts","webpack:///./src/lib/same-device-game.ts","webpack:///./src/lib/socket.ts","webpack:///./src/lib/timer.ts","webpack:///./src/lib/utils.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoardLogic = void 0;\nvar coin_1 = require(\"./enums/coin\");\nvar BoardLogic = exports.BoardLogic = /** @class */ (function () {\n    function BoardLogic() {\n    }\n    BoardLogic.initBoard = function (board) {\n        for (var col = 0; col < BoardLogic.columns; col++) {\n            board[col] = new Array(BoardLogic.rows);\n            for (var row = 0; row < BoardLogic.rows; row++) {\n                board[col][row] = coin_1.Coin.Empty;\n            }\n        }\n    };\n    BoardLogic.countConsecutiveCoins = function (board, column, row, currentTurn) {\n        var count = row;\n        var coinCount = 0;\n        // Vertical check\n        while (coinCount < 4 && count < BoardLogic.rows && board[column][count] === currentTurn) {\n            coinCount++;\n            count++;\n        }\n        if (coinCount < 4) {\n            // Horizontal check\n            coinCount = 0;\n            count = column;\n            while (count < BoardLogic.columns && board[count][row] === currentTurn) {\n                coinCount++;\n                count++;\n            }\n            count = column - 1;\n            while (count > -1 && board[count][row] === currentTurn) {\n                coinCount++;\n                count--;\n            }\n            // Diagonal checks\n            if (coinCount < 4) {\n                coinCount = 0;\n                var rowCount = row - 1;\n                var colCount = column + 1;\n                while (coinCount < 4 && rowCount > -1 && colCount < BoardLogic.columns && board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount++; //right columns\n                    rowCount--; //upper rows\n                }\n                colCount = column;\n                rowCount = row;\n                while (coinCount < 4 && rowCount < BoardLogic.rows && colCount > -1 && board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount--; // left columns\n                    rowCount++; // lower rows\n                }\n                if (coinCount < 4) {\n                    coinCount = 0;\n                    rowCount = row - 1;\n                    colCount = column - 1;\n                    while (coinCount < 4 && rowCount > -1 && colCount > -1 && board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount--; // left columns\n                        rowCount--; // upper rows\n                    }\n                    colCount = column;\n                    rowCount = row;\n                    while (coinCount < 4 && rowCount < BoardLogic.rows && colCount < BoardLogic.columns && board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount++; // right columns\n                        rowCount++; // lower rows\n                    }\n                }\n            }\n        }\n        return coinCount;\n    };\n    BoardLogic.isBoardFull = function (board) {\n        var full = true;\n        for (var col = 0; col < BoardLogic.columns; col++) {\n            // Check upper row in every column\n            if (board[col][0] === coin_1.Coin.Empty) {\n                full = false;\n                break;\n            }\n        }\n        return full;\n    };\n    BoardLogic.putCoin = function (board, color, column) {\n        for (var row = BoardLogic.rows - 1; row >= 0; row--) {\n            if (board[column][row] === coin_1.Coin.Empty) {\n                board[column][row] = color;\n                return row;\n            }\n        }\n        return -1;\n    };\n    BoardLogic.columns = 9;\n    BoardLogic.rows = 8;\n    return BoardLogic;\n}());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.skipTurnMaxWait = void 0;\nexports.skipTurnMaxWait = 60;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Coin = void 0;\nvar Coin;\n(function (Coin) {\n    Coin[Coin[\"Empty\"] = 0] = \"Empty\";\n    Coin[Coin[\"Red\"] = 1] = \"Red\";\n    Coin[Coin[\"Green\"] = 2] = \"Green\";\n})(Coin || (exports.Coin = Coin = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.skipTurnMaxWait = exports.switchTurn = exports.randomiseColor = exports.WinnerMessage = exports.TieMessage = exports.SkipTurnMessage = exports.PlayerNameMessage = exports.InitialMessage = exports.GameMessage = exports.ErrorMessage = exports.DisconnectMessage = exports.CurrentTurnMessage = exports.ActionMessage = exports.Coin = exports.default = void 0;\nvar board_logic_1 = require(\"./board-logic\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return board_logic_1.BoardLogic; } });\nvar coin_1 = require(\"./enums/coin\");\nObject.defineProperty(exports, \"Coin\", { enumerable: true, get: function () { return coin_1.Coin; } });\nvar action_message_1 = require(\"./models/action-message\");\nObject.defineProperty(exports, \"ActionMessage\", { enumerable: true, get: function () { return action_message_1.ActionMessage; } });\nvar current_turn_message_1 = require(\"./models/current-turn-message\");\nObject.defineProperty(exports, \"CurrentTurnMessage\", { enumerable: true, get: function () { return current_turn_message_1.CurrentTurnMessage; } });\nvar disconnect_message_1 = require(\"./models/disconnect-message\");\nObject.defineProperty(exports, \"DisconnectMessage\", { enumerable: true, get: function () { return disconnect_message_1.DisconnectMessage; } });\nvar error_message_1 = require(\"./models/error-message\");\nObject.defineProperty(exports, \"ErrorMessage\", { enumerable: true, get: function () { return error_message_1.ErrorMessage; } });\nvar game_message_1 = require(\"./models/game-message\");\nObject.defineProperty(exports, \"GameMessage\", { enumerable: true, get: function () { return game_message_1.GameMessage; } });\nvar initial_message_1 = require(\"./models/initial-message\");\nObject.defineProperty(exports, \"InitialMessage\", { enumerable: true, get: function () { return initial_message_1.InitialMessage; } });\nvar player_name_message_1 = require(\"./models/player-name-message\");\nObject.defineProperty(exports, \"PlayerNameMessage\", { enumerable: true, get: function () { return player_name_message_1.PlayerNameMessage; } });\nvar skip_turn_message_1 = require(\"./models/skip-turn-message\");\nObject.defineProperty(exports, \"SkipTurnMessage\", { enumerable: true, get: function () { return skip_turn_message_1.SkipTurnMessage; } });\nvar tie_message_1 = require(\"./models/tie-message\");\nObject.defineProperty(exports, \"TieMessage\", { enumerable: true, get: function () { return tie_message_1.TieMessage; } });\nvar winner_message_1 = require(\"./models/winner-message\");\nObject.defineProperty(exports, \"WinnerMessage\", { enumerable: true, get: function () { return winner_message_1.WinnerMessage; } });\nvar player_turn_1 = require(\"./player-turn\");\nObject.defineProperty(exports, \"randomiseColor\", { enumerable: true, get: function () { return player_turn_1.randomiseColor; } });\nObject.defineProperty(exports, \"switchTurn\", { enumerable: true, get: function () { return player_turn_1.switchTurn; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"skipTurnMaxWait\", { enumerable: true, get: function () { return constants_1.skipTurnMaxWait; } });\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActionMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ActionMessage = /** @class */ (function (_super) {\n    __extends(ActionMessage, _super);\n    function ActionMessage(column, action, color) {\n        var _this = _super.call(this) || this;\n        _this.column = column;\n        _this.action = action;\n        _this.color = color;\n        return _this;\n    }\n    return ActionMessage;\n}(game_message_1.GameMessage));\nexports.ActionMessage = ActionMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CurrentTurnMessage = void 0;\nvar coin_1 = require(\"../enums/coin\");\nvar game_message_1 = require(\"./game-message\");\nvar CurrentTurnMessage = /** @class */ (function (_super) {\n    __extends(CurrentTurnMessage, _super);\n    function CurrentTurnMessage() {\n        var _this = _super.call(this) || this;\n        _this.currentTurn = coin_1.Coin.Empty;\n        return _this;\n    }\n    return CurrentTurnMessage;\n}(game_message_1.GameMessage));\nexports.CurrentTurnMessage = CurrentTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DisconnectMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar DisconnectMessage = /** @class */ (function (_super) {\n    __extends(DisconnectMessage, _super);\n    function DisconnectMessage() {\n        var _this = _super.call(this) || this;\n        _this.hardDisconnect = true;\n        return _this;\n    }\n    return DisconnectMessage;\n}(game_message_1.GameMessage));\nexports.DisconnectMessage = DisconnectMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ErrorMessage = /** @class */ (function (_super) {\n    __extends(ErrorMessage, _super);\n    function ErrorMessage(error) {\n        var _this = _super.call(this) || this;\n        _this.error = error;\n        return _this;\n    }\n    return ErrorMessage;\n}(game_message_1.GameMessage));\nexports.ErrorMessage = ErrorMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameMessage = void 0;\nvar GameMessage = /** @class */ (function () {\n    function GameMessage() {\n    }\n    GameMessage.isInitialMessage = function (msg) {\n        return (!isNaN(msg['gameId']) && msg['color']) || msg['opponentName'];\n    };\n    GameMessage.isInactivityMessage = function (msg) {\n        return msg['endGameDueToInactivity'] && msg['currentTurn'];\n    };\n    GameMessage.isActionMessage = function (msg) {\n        return msg['action'] && !isNaN(msg['column']) && msg['color'];\n    };\n    GameMessage.isSkipTurnMessage = function (msg) {\n        return msg['skipTurn'] && msg['currentTurn'];\n    };\n    GameMessage.isWinnerMessage = function (msg) {\n        return msg['winner'];\n    };\n    GameMessage.isTieMessage = function (msg) {\n        return msg['tie'];\n    };\n    GameMessage.isCurrentTurnMessage = function (msg) {\n        return msg['currentTurn'];\n    };\n    GameMessage.isDisconnectMessage = function (msg) {\n        return msg['hardDisconnect'];\n    };\n    GameMessage.isErrorMessage = function (msg) {\n        return msg['error'];\n    };\n    return GameMessage;\n}());\nexports.GameMessage = GameMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InitialMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar InitialMessage = /** @class */ (function (_super) {\n    __extends(InitialMessage, _super);\n    function InitialMessage(gameId, opponentName, color) {\n        var _this = _super.call(this) || this;\n        _this.gameId = gameId;\n        _this.opponentName = opponentName;\n        _this.color = color;\n        return _this;\n    }\n    return InitialMessage;\n}(game_message_1.GameMessage));\nexports.InitialMessage = InitialMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlayerNameMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar PlayerNameMessage = /** @class */ (function (_super) {\n    __extends(PlayerNameMessage, _super);\n    function PlayerNameMessage(name) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        return _this;\n    }\n    return PlayerNameMessage;\n}(game_message_1.GameMessage));\nexports.PlayerNameMessage = PlayerNameMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SkipTurnMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar SkipTurnMessage = /** @class */ (function (_super) {\n    __extends(SkipTurnMessage, _super);\n    function SkipTurnMessage(skipTurn, currentTurn) {\n        var _this = _super.call(this) || this;\n        _this.skipTurn = skipTurn;\n        _this.currentTurn = currentTurn;\n        return _this;\n    }\n    return SkipTurnMessage;\n}(game_message_1.GameMessage));\nexports.SkipTurnMessage = SkipTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TieMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar TieMessage = /** @class */ (function (_super) {\n    __extends(TieMessage, _super);\n    function TieMessage(tie) {\n        if (tie === void 0) { tie = true; }\n        var _this = _super.call(this) || this;\n        _this.tie = tie;\n        return _this;\n    }\n    return TieMessage;\n}(game_message_1.GameMessage));\nexports.TieMessage = TieMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WinnerMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar WinnerMessage = /** @class */ (function (_super) {\n    __extends(WinnerMessage, _super);\n    function WinnerMessage(winner) {\n        var _this = _super.call(this) || this;\n        _this.winner = winner;\n        return _this;\n    }\n    return WinnerMessage;\n}(game_message_1.GameMessage));\nexports.WinnerMessage = WinnerMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.switchTurn = exports.randomiseColor = void 0;\nvar coin_1 = require(\"./enums/coin\");\nfunction randomiseColor() {\n    return Math.floor(Math.random() * 2) + 1;\n}\nexports.randomiseColor = randomiseColor;\nfunction switchTurn(currentTurn) {\n    return currentTurn === coin_1.Coin.Red ? coin_1.Coin.Green : coin_1.Coin.Red;\n}\nexports.switchTurn = switchTurn;\n","import ConfirmationDialogOptions from \"./confirmation-dialog-options\";\r\nimport DialogOptions from \"./dialog-options\";\r\nimport { DialogType } from \"./enums/dialog-type\";\r\nimport PromptDialogOptions from \"./prompt-dialog-options\";\r\nimport PromptInput from \"./prompt-input\";\r\n\r\nexport default class Dialog {\r\n    \r\n    private static modal(id: string, text: Array<string>, type: DialogType, options: DialogOptions = null) {\r\n        if (!document.getElementById(id)) {\r\n            const modal = document.createElement('div') as HTMLDivElement;\r\n            modal.id = id;\r\n            modal.classList.add('dialog');\r\n\r\n            const textContainer = document.createElement('div') as HTMLDivElement;\r\n            this.appendText(text, textContainer);\r\n            modal.appendChild(textContainer);\r\n\r\n            switch (type) {\r\n                case DialogType.Confirmation: {\r\n                    const o = options as ConfirmationDialogOptions;\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'Yes', () => {\r\n                        o.yesCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.yesColor, 'button');\r\n                    this.appendBtn(btnContainer, 'No', () => {\r\n                        o.noCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.noColor, 'button');\r\n                    break;\r\n                }\r\n                case DialogType.Notification: {\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'OK', () => {\r\n                        this.closeModal(modal);\r\n                    }, 'green', 'button');\r\n                    break;\r\n                }\r\n                case DialogType.Prompt: {\r\n                    const o = options as PromptDialogOptions;\r\n                    this.appendForm(modal, o);\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            document.body.appendChild(modal);\r\n        }\r\n    }\r\n\r\n    private static appendBtn(container: HTMLDivElement | HTMLFormElement,\r\n                text: string,\r\n                callback: any,\r\n                bgColor: string,\r\n                btnType: 'submit' | 'button' | 'reset') {\r\n        const btn = document.createElement('button') as HTMLButtonElement;\r\n        btn.type = btnType;\r\n        btn.innerText = text;\r\n        btn.classList.add('text');\r\n        btn.classList.add('dialog-btn');\r\n        btn.classList.add(`dialog-btn-${bgColor}`);\r\n        if (btnType === 'button') {\r\n            btn.addEventListener('click', callback);\r\n        }\r\n        container.appendChild(btn);\r\n    }\r\n\r\n    private static appendForm(modal: HTMLDivElement, options: PromptDialogOptions) {\r\n        const inputContainer = document.createElement('div') as HTMLDivElement;\r\n        inputContainer.classList.add('dialog-input-container');\r\n        modal.appendChild(inputContainer);\r\n\r\n        const form = document.createElement('form') as HTMLFormElement;\r\n        inputContainer.appendChild(form);\r\n        form.addEventListener('submit', () => {\r\n            const error: string = options.onOK();\r\n            if (error) {\r\n                this.appendError(modal, error);\r\n            } else {\r\n                this.closeModal(modal);\r\n            }\r\n        });\r\n\r\n        this.appendInputs(form, options.inputs);\r\n\r\n        const btnContainer = document.createElement('div') as HTMLDivElement;\r\n        btnContainer.classList.add('dialog-btn-container');\r\n        form.appendChild(btnContainer);\r\n\r\n        this.appendBtn(btnContainer, 'OK', null, 'green', 'submit');\r\n        this.appendBtn(btnContainer, 'Cancel', () => {\r\n            options.onCancel();\r\n            this.closeModal(modal);\r\n        }, 'red', 'button');\r\n    }\r\n\r\n    private static appendInputs(form: HTMLFormElement, inputs: Array<PromptInput>) {\r\n        for (let i: number = 0; i < inputs.length; i++) {\r\n            const input = document.createElement('input') as HTMLInputElement;\r\n            input.type = inputs[i].type;\r\n            input.id = `dialog-input-${inputs[i].name}`;\r\n            input.name = `dialog-input-${inputs[i].name}`;\r\n            input.placeholder = `Enter ${inputs[i].label}`;\r\n            input.maxLength = inputs[i].limit;\r\n            input.classList.add('dialog-input');\r\n            input.classList.add('text');\r\n            input.required = inputs[i].required;\r\n            input.ariaRequired = inputs[i].required.toString();\r\n            form.appendChild(input);\r\n\r\n            this.appendBrElement(form);\r\n            this.appendBrElement(form);\r\n        }\r\n    }\r\n\r\n    private static appendBrElement(container: HTMLDivElement | HTMLFormElement) {\r\n        const br = document.createElement('br') as HTMLBRElement;\r\n        container.appendChild(br);\r\n    }\r\n\r\n    private static appendError(container: HTMLDivElement, text: string) {\r\n        let errorDiv = document.getElementById('dialogError') as HTMLDivElement;\r\n        if (!errorDiv) {\r\n            errorDiv = document.createElement('div');\r\n            errorDiv.id = 'dialogError';\r\n            errorDiv.classList.add('red-text');\r\n            errorDiv.classList.add('text');\r\n            errorDiv.classList.add('dialog-error');\r\n            container.appendChild(errorDiv);\r\n        }\r\n        errorDiv.innerText = text;\r\n    }\r\n\r\n    private static appendText(text: Array<string>, container: HTMLDivElement) {\r\n        container.classList.add('text');\r\n        container.classList.add('dialog-text');\r\n        for (let i: number = 0; i < text.length; i++) {\r\n            const p = document.createElement('p') as HTMLParagraphElement;\r\n            p.innerText = text[i];\r\n            container.appendChild(p);\r\n        }\r\n    }\r\n\r\n    private static closeModal(modal: HTMLDivElement) {\r\n        if (document.body.contains(modal)) {\r\n            document.body.removeChild(modal);\r\n        }\r\n    }\r\n\r\n    public static confirm(id: string, text: Array<string>, options: ConfirmationDialogOptions) {\r\n        Dialog.modal(id, text, DialogType.Confirmation, options);\r\n    }\r\n\r\n    public static notify(id: string, text: Array<string>) {\r\n        Dialog.modal(id, text, DialogType.Notification);\r\n    }\r\n\r\n    public static prompt(id: string, text: Array<string>, options: PromptDialogOptions) {\r\n        Dialog.modal(id, text, DialogType.Prompt, options);\r\n    }\r\n\r\n    public static closeAllOpenDialogs() {\r\n        const dialogs = document.getElementsByClassName('dialog') as HTMLCollectionOf<HTMLDivElement>;\r\n        for (let i: number = 0; i < dialogs.length; i++) {\r\n            this.closeModal(dialogs[i]);\r\n        }\r\n    }\r\n\r\n}","export enum DialogType {\r\n    Confirmation = 0,\r\n    Notification = 1,\r\n    Prompt = 2\r\n}","export enum DialogIds {\r\n    PlayerNames = 'player-input-dialog',\r\n    ServerError = 'server-error-dialog',\r\n    Instructions = 'instructions-dialog',\r\n    GameEnd = 'game-end-dialog',\r\n    ExitGame = 'exit-game-dialog',\r\n    ContinueGame = 'continue-game-dialog',\r\n}","export enum GameMode {\r\n    SamePC = 1,\r\n    Network = 2\r\n}","export enum Sound {\r\n    LandCoin = './sounds/land-coin.m4a',\r\n    Win = './sounds/win.m4a',\r\n    Lose = './sounds/lose.m4a'\r\n}","import Position from './position';\r\nimport PlayerNameSection from './player-name-section';\r\nimport GameOptions from './game-options';\r\nimport BoardLogic, { Coin, switchTurn } from '@danieldesira/daniels-connect4-common';\r\n\r\nexport default abstract class Game {\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    protected context: CanvasRenderingContext2D;\r\n    protected board: Array<Array<Coin>> = new Array(BoardLogic.columns);\r\n\r\n    private exitBtn: HTMLButtonElement;\r\n    protected playerNameSection: PlayerNameSection;\r\n    private gameIndicatorsContainer: HTMLDivElement;\r\n    private gameMenu: HTMLDivElement;\r\n\r\n    protected turn: Coin = Coin.Red;\r\n\r\n    private circleRadius: number;\r\n    private rowGap: number;\r\n    private colGap: number;\r\n    private colOffset: number;\r\n    private static verticalOffset: number = 70;\r\n\r\n    protected constructor(options: GameOptions) {\r\n        this.canvas = document.getElementById(options.canvasId) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        BoardLogic.initBoard(this.board);\r\n\r\n        if (options.exitBtnId) {\r\n            this.exitBtn = document.getElementById(options.exitBtnId) as HTMLButtonElement;\r\n        }\r\n\r\n        if (options.playerRedId && options.playerGreenId) {\r\n            this.playerNameSection = new PlayerNameSection(options.playerRedId, options.playerGreenId);\r\n        }\r\n\r\n        if (options.gameIndicatorsId) {\r\n            this.gameIndicatorsContainer = document.getElementById(options.gameIndicatorsId) as HTMLDivElement;\r\n        }\r\n\r\n        if (options.menuId) {\r\n            this.gameMenu = document.getElementById(options.menuId) as HTMLDivElement;\r\n        }\r\n    }\r\n\r\n    protected start() {\r\n        this.showGame();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.printPlayerNames();\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n\r\n        this.resizeCanvas();\r\n        this.setGameEvents();\r\n    }\r\n\r\n    private paintBoard() {\r\n        let boardGradient = this.context.createLinearGradient(0, 0, this.canvas.width, 0);\r\n        boardGradient.addColorStop(0, 'blue');\r\n        boardGradient.addColorStop(1, 'aqua');\r\n        this.context.fillStyle = boardGradient;\r\n        this.context.fillRect(0, Game.verticalOffset, this.canvas.width, this.canvas.height);\r\n\r\n        for (let col = BoardLogic.columns - 1; col >= 0; col--) {\r\n            for (let row = BoardLogic.rows - 1; row >= 0; row--) {\r\n                this.context.fillStyle = Game.getColor(this.board[col][row]);\r\n                this.drawCircle(col, row);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        this.canvas.addEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.addEventListener('click', this.canvasClick, false);\r\n        window.addEventListener('beforeunload', this.beforeUnload);\r\n        window.addEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.addEventListener('click', this.exit);\r\n    }\r\n\r\n    protected abstract canvasMousemove(event: MouseEvent): void;\r\n    protected abstract canvasClick(event: MouseEvent): void;\r\n\r\n    protected getColumnFromCursorPosition(event: MouseEvent): number {\r\n        let position = Position.getCursorPosition(event, this.canvas);\r\n        let column = Math.round((position.x - this.colOffset) / this.colGap);\r\n        return column;\r\n    }\r\n\r\n    protected switchTurn() {\r\n        this.turn = switchTurn(this.turn);\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n    }\r\n\r\n    protected moveCoin(column: number) {\r\n        this.clearUpper();\r\n        this.context.fillStyle = Game.getColor(this.turn);\r\n        this.paintCoinToDrop(column);\r\n    }\r\n\r\n    protected landCoin(column: number): number {\r\n        if (this.board[column][0] === Coin.Empty) {\r\n            let row = BoardLogic.putCoin(this.board, this.turn, column);\r\n            \r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.drawCircle(column, row);\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected abstract showWinDialog(winner: string, currentTurn: Coin);\r\n\r\n    protected closeGameAfterWinning() {\r\n        this.cleanUpEvents();\r\n\r\n        if (this.exitBtn) {\r\n            this.exitBtn.classList.add('hide');\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            this.resetValues();\r\n            this.hideGame();\r\n\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.clear();\r\n            }\r\n        }, 3000);\r\n    }\r\n\r\n    protected paintCoinToDrop(column: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, this.circleRadius, this.circleRadius, 0, 2 * Math.PI);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected abstract beforeUnload(event: Event);\r\n\r\n    private clearUpper() {\r\n        this.context.clearRect(0, 0, this.canvas.width, Game.verticalOffset);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        this.canvas.removeEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.removeEventListener('click', this.canvasClick, false);\r\n        window.removeEventListener('beforeunload', this.beforeUnload);\r\n        window.removeEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.removeEventListener('click', this.exit);\r\n    }\r\n\r\n    protected exit() {\r\n        this.cleanUpEvents();\r\n        this.hideGame();\r\n        this.resetValues();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.clear();\r\n        }\r\n    }\r\n\r\n    private resizeCanvas = () => {\r\n        this.canvas.height = window.innerHeight - 100;\r\n        this.canvas.width = window.innerWidth;\r\n\r\n        if (this.canvas.width < 1000) {\r\n            this.circleRadius = 20; // Mobile/tablet\r\n        } else {\r\n            this.circleRadius = 30; // Desktop\r\n        }\r\n\r\n        if (this.canvas.height > this.canvas.width) {\r\n            this.colGap = this.canvas.width / BoardLogic.columns;\r\n            this.rowGap = (this.canvas.height / BoardLogic.rows) - this.circleRadius;\r\n        } else {\r\n            this.colGap = this.canvas.width / BoardLogic.columns;\r\n            this.rowGap = 65;\r\n        }\r\n\r\n        this.colOffset = this.colGap / 2;\r\n\r\n        this.paintBoard();\r\n    };\r\n\r\n    protected resetValues() {\r\n        this.turn = Coin.Red;\r\n        BoardLogic.initBoard(this.board);\r\n        \r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.reset();\r\n        }\r\n    }\r\n\r\n    private drawCircle(column: number, row: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, Game.verticalOffset * 2 + row * this.rowGap, this.circleRadius, 0, Math.PI * 2);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected areBothPlayersConnected(): boolean {\r\n        return this.playerNameSection && this.playerNameSection.areBothPlayersConnected();\r\n    }\r\n\r\n    private showGame() {\r\n        this.canvas.classList.remove('hide');\r\n        this.exitBtn.classList.remove('hide');\r\n        this.gameIndicatorsContainer.classList.remove('hide');\r\n        this.gameMenu.classList.add('hide');\r\n    }\r\n\r\n    private hideGame() {\r\n        this.canvas.classList.add('hide');\r\n        this.exitBtn.classList.add('hide');\r\n        this.gameIndicatorsContainer.classList.add('hide');\r\n        this.gameMenu.classList.remove('hide');\r\n    }\r\n\r\n    protected static getColor(color: Coin): string {\r\n        let value: string = '';\r\n        switch (color) {\r\n            case Coin.Empty:\r\n                value = 'lightyellow';\r\n                break;\r\n            case Coin.Red:\r\n                value = 'red';\r\n                break;\r\n            case Coin.Green:\r\n                value = 'greenyellow';\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common/lib/enums/coin\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport Socket from \"./socket\";\r\nimport Utils from \"./utils\";\r\nimport { ActionMessage, CurrentTurnMessage, ErrorMessage, GameMessage, InitialMessage, SkipTurnMessage, WinnerMessage, skipTurnMaxWait } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\n\r\nexport default class NetworkGame extends Game {\r\n\r\n    private static instance: NetworkGame;\r\n\r\n    private socket: Socket;\r\n    private turnCountDown: number;\r\n    private turnCountDownInterval: number;\r\n    private countdownSpan: HTMLSpanElement;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n\r\n        if (options.timerCountdownId) {\r\n            this.countdownSpan = document.getElementById(options.timerCountdownId) as HTMLSpanElement;\r\n        }\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): NetworkGame {\r\n        if (!NetworkGame.instance) {\r\n            NetworkGame.instance = new NetworkGame(options);\r\n        }\r\n        return NetworkGame.instance;\r\n    }\r\n\r\n    public start() {\r\n        this.defineSocket();\r\n        this.startCountdown();\r\n        super.start();\r\n    }\r\n\r\n    private defineSocket() {\r\n        this.socket = new Socket();\r\n        this.socket.onMessageCallback = this.onSocketMessage;\r\n        this.socket.onErrorCallback = this.onSocketError;\r\n        this.socket.onInputPlayerNameInDialog = this.onInputPlayerNameInDialog;\r\n        this.socket.onGameCancel = this.confirmExit;\r\n    }\r\n\r\n    private onSocketMessage = (messageData: GameMessage) => {\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n            if (data.opponentName && this.socket && this.playerNameSection) {\r\n                if (this.socket.getPlayerColor() === Coin.Red) {\r\n                    this.playerNameSection.setPlayerGreen(data.opponentName);\r\n                } else if (this.socket.getPlayerColor() === Coin.Green) {\r\n                    this.playerNameSection.setPlayerRed(data.opponentName);\r\n                }\r\n            }\r\n    \r\n            if (data.color && this.socket && this.playerNameSection) {\r\n                if (data.color === Coin.Red) {\r\n                    this.playerNameSection.setPlayerRed(this.socket.getPlayerName());\r\n                } else {\r\n                    this.playerNameSection.setPlayerGreen(this.socket.getPlayerName());\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isActionMessage(messageData)) {\r\n            const data = messageData as ActionMessage;\r\n            if (data.action === 'mousemove') {\r\n                this.moveCoin(data.column);\r\n            }\r\n    \r\n            if (data.action === 'click') {\r\n                this.turn = data.color;\r\n                this.landCoin(data.column);\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isSkipTurnMessage(messageData)) {\r\n            const data = messageData as SkipTurnMessage;\r\n            if (data.skipTurn && data.currentTurn) {\r\n                this.turn = data.currentTurn;\r\n                this.turnCountDown = skipTurnMaxWait;\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isWinnerMessage(messageData)) {\r\n            const data = messageData as WinnerMessage;\r\n            let winner: string = null;\r\n            if (this.playerNameSection) {\r\n                if (data.winner === Coin.Red) {\r\n                    winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                } else {\r\n                    winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n            }\r\n            this.showWinDialog(winner, data.winner);\r\n\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isTieMessage(messageData)) {\r\n            Dialog.notify(DialogIds.GameEnd, ['Game resulted in tie!']);\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isCurrentTurnMessage(messageData)) {\r\n            const data = messageData as CurrentTurnMessage;\r\n            this.turn = data.currentTurn;\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.indicateTurn(this.turn);\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isDisconnectMessage(messageData)) {\r\n            Dialog.notify(DialogIds.GameEnd, ['Your opponent disconnected. You win!']);\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isErrorMessage(messageData)) {\r\n            const data = messageData as ErrorMessage;\r\n            Dialog.closeAllOpenDialogs();\r\n            Dialog.notify(DialogIds.ServerError, [data.error]);\r\n            this.closeGameAfterWinning();\r\n        }\r\n    };\r\n\r\n    private onSocketError = () => {\r\n        super.exit();\r\n    };\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n        this.stopCountdown();\r\n\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            const column = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin(column);\r\n\r\n            const data = new ActionMessage(column, 'mousemove', this.turn);\r\n            this.socket.send(data);\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            const column = this.getColumnFromCursorPosition(event);\r\n\r\n            const data = new ActionMessage(column, 'click', this.turn);\r\n            this.socket.send(data);\r\n            \r\n            this.landCoin(column);\r\n        }\r\n    };\r\n\r\n    protected landCoin(column: number): number {\r\n        if (this.board[column][0] === Coin.Empty) {\r\n            let row = super.landCoin(column);\r\n            \r\n            // Assume the game is still going on\r\n            this.switchTurn();\r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.paintCoinToDrop(column);\r\n            Utils.playSound(Sound.LandCoin);\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    public exit = () => {\r\n        Dialog.confirm(DialogIds.ExitGame, ['Network game in progress. Are you sure you want to quit?'], {\r\n            yesCallback: this.confirmExit,\r\n            noCallback: () => {},\r\n            yesColor: 'red',\r\n            noColor: 'green'\r\n        });\r\n    };\r\n\r\n    private confirmExit = () => {\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n        Dialog.closeAllOpenDialogs();\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = (event: Event) => {\r\n        // Display default dialog before closing\r\n        event.preventDefault();\r\n        event.returnValue = false; // Required by Chrome\r\n    };\r\n\r\n    protected showWinDialog(winner: string, currentTurn: Coin) {\r\n        let winMsg: Array<string> = new Array();\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.socket && this.socket.getPlayerColor() === currentTurn) {\r\n            winMsg.push('You win!');\r\n            Utils.playSound(Sound.Win);\r\n        } else {\r\n            winMsg.push('You lose!');\r\n            Utils.playSound(Sound.Lose);\r\n        }\r\n        Dialog.notify(DialogIds.GameEnd, winMsg);\r\n    }\r\n\r\n    protected switchTurn() {\r\n        super.switchTurn();\r\n        this.resetCountdown();\r\n    }\r\n\r\n    private turnCountDownCallback = () => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.turnCountDown--;\r\n            this.countdownSpan.innerText = this.turnCountDown.toString();\r\n            this.adaptCountDownColor();\r\n        }\r\n    };\r\n\r\n    private adaptCountDownColor() {\r\n        if (this.turnCountDown > skipTurnMaxWait / 2) {\r\n            this.countdownSpan.classList.add('green-text');\r\n            this.countdownSpan.classList.remove('red-text');\r\n        } else {\r\n            this.countdownSpan.classList.remove('green-text');\r\n            this.countdownSpan.classList.add('red-text');\r\n        }\r\n    }\r\n\r\n    private startCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n        this.turnCountDownInterval = window.setInterval(this.turnCountDownCallback, 1000);\r\n    }\r\n\r\n    private stopCountdown() {\r\n        clearInterval(this.turnCountDownInterval);\r\n        this.countdownSpan.innerText = '';\r\n    }\r\n\r\n    private resetCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n    }\r\n\r\n    private onInputPlayerNameInDialog = (playerName: string) => {\r\n        if (this.socket) {\r\n            if (this.socket.getPlayerColor() === Coin.Red) {\r\n                this.playerNameSection.setPlayerRed(playerName);\r\n            } else {\r\n                this.playerNameSection.setPlayerGreen(playerName);\r\n            }\r\n        }\r\n    };\r\n    \r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\n\r\nexport default class PlayerNameSection {\r\n    private playerRedSpan: HTMLSpanElement;\r\n    private playerGreenSpan: HTMLSpanElement;\r\n    private playerRed: string;\r\n    private playerGreen: string;\r\n\r\n    public constructor(playerRedId: string, playerGreenId: string) {\r\n        if (playerRedId) {\r\n            this.playerRedSpan = document.getElementById(playerRedId);\r\n        }\r\n\r\n        if (playerGreenId) {\r\n            this.playerGreenSpan = document.getElementById(playerGreenId);\r\n        }\r\n    }\r\n\r\n    public setUpPlayerNames(okAction: Function, cancelAction: Function) {\r\n        if (!localStorage.getItem('playerRed') || !localStorage.getItem('playerGreen')) {\r\n            Dialog.prompt(DialogIds.PlayerNames, ['Please enter player names! (10 characters or less.)'], {\r\n                onOK: () => this.onPromptOK(okAction),\r\n                onCancel: () => this.onPromptCancel(cancelAction),\r\n                inputs: [\r\n                    {\r\n                        label: 'Player Red',\r\n                        name: 'red',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    },\r\n                    {\r\n                        label: 'Player Green',\r\n                        name: 'green',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }\r\n\r\n    private onPromptOK = (action: Function): string => {\r\n        const redInput = document.getElementById('dialog-input-red') as HTMLInputElement;\r\n        const greenInput = document.getElementById('dialog-input-green') as HTMLInputElement;\r\n        if (redInput.value && greenInput.value && redInput.value.trim() && greenInput.value.trim()) {\r\n            this.playerRed = redInput.value;\r\n            this.playerGreen = greenInput.value;\r\n            this.printPlayerNames();\r\n            action();\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onPromptCancel = (action: Function) => {\r\n        action();\r\n    };\r\n\r\n    public printPlayerNames() {\r\n        const waiting = 'Waiting to connect...';\r\n        if (this.playerGreenSpan) {\r\n            if (!this.playerGreen) {\r\n                this.playerGreenSpan.innerText = waiting;\r\n            } else {\r\n                this.playerGreenSpan.innerText = this.playerGreen;\r\n            }\r\n        }\r\n        if (this.playerRedSpan) {\r\n            if (!this.playerRed) {\r\n                this.playerRedSpan.innerText = waiting;\r\n            } else {\r\n                this.playerRedSpan.innerText = this.playerRed;\r\n            }\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = '';\r\n        }\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = '';\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.playerRed = null;\r\n        this.playerGreen = null;\r\n    }\r\n\r\n    public getPlayerRed(): string {\r\n        return this.playerRed;\r\n    }\r\n\r\n    public getPlayerGreen(): string {\r\n        return this.playerGreen;\r\n    }\r\n\r\n    public areBothPlayersConnected(): boolean {\r\n        return !!this.playerRed && !!this.playerGreen;\r\n    }\r\n\r\n    public saveIntoLocalStorage() {\r\n        localStorage.setItem('playerRed', this.playerRed);\r\n        localStorage.setItem('playerGreen', this.playerGreen);\r\n    }\r\n\r\n    public setFromLocalStorage() {\r\n        this.playerRed = localStorage.getItem('playerRed');\r\n        this.playerGreen = localStorage.getItem('playerGreen');\r\n    }\r\n\r\n    public setPlayerRed(playerName: string) {\r\n        this.playerRed = playerName;\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = this.playerRed;\r\n        }\r\n    }\r\n\r\n    public setPlayerGreen(playerName: string) {\r\n        this.playerGreen = playerName;\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = this.playerGreen;\r\n        }\r\n    }\r\n\r\n    public indicateTurn(turn: Coin) {\r\n        if (turn === Coin.Red) {\r\n            this.playerRedSpan.classList.add('currentTurn');\r\n            this.playerGreenSpan.classList.remove('currentTurn');\r\n        } else {\r\n            this.playerGreenSpan.classList.add('currentTurn');\r\n            this.playerRedSpan.classList.remove('currentTurn');\r\n        }\r\n    }\r\n\r\n}","export default class Position {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public static getCursorPosition(event, canvas): Position {\r\n        let x: number;\r\n        let y: number;\r\n        if (event.pageX !== undefined || event.pageY !== undefined) {\r\n            x = event.pageX;\r\n            y = event.pageY;\r\n        }\r\n        else {\r\n            x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n        }\r\n        x -= canvas.offsetLeft;\r\n        y -= canvas.offsetTop;\r\n        return new Position(x, y);\r\n    }\r\n}","import Dialog from \"./dialog/dialog\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Utils from \"./utils\";\r\nimport Timer from \"./timer\";\r\nimport BoardLogic, { Coin, randomiseColor } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\n\r\nexport default class SameDeviceGame extends Game {\r\n\r\n    private static instance: SameDeviceGame;\r\n    private timer: Timer;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n\r\n        if (options.timerCountdownId) {\r\n            this.timer = new Timer(options.timerCountdownId);\r\n        }\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): SameDeviceGame {\r\n        if (!SameDeviceGame.instance) {\r\n            SameDeviceGame.instance = new SameDeviceGame(options);\r\n        }\r\n        return SameDeviceGame.instance;\r\n    }\r\n\r\n    private setTimer = () => {\r\n        if (this.timer) {\r\n            this.timer.set();\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        this.checkGameData();\r\n    }\r\n\r\n    private onGameDataCheck() {\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.setUpPlayerNames(this.setTimer, this.exit);\r\n        }\r\n\r\n        if (this.areBothPlayersConnected()) {\r\n            this.setTimer();\r\n        }\r\n\r\n        super.start();\r\n    }\r\n\r\n    private checkGameData() {\r\n        let board = localStorage.getItem('board');\r\n        let nextTurn = localStorage.getItem('nextTurn');\r\n        \r\n        if (board && nextTurn) {\r\n            Dialog.confirm(DialogIds.ContinueGame, ['Do you want to continue playing the previous game?'], {\r\n                yesCallback: this.continuePreviousGame,\r\n                noCallback: this.cancelPreviousGame,\r\n                yesColor: 'green',\r\n                noColor: 'red'\r\n            });\r\n        } else {\r\n            this.turn = randomiseColor();\r\n            this.onGameDataCheck();\r\n        }\r\n    }\r\n\r\n    private continuePreviousGame = () => {\r\n        this.restoreLastGame();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private cancelPreviousGame = () => {\r\n        localStorage.clear();\r\n        this.turn = randomiseColor();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private restoreLastGame() {\r\n        this.turn = parseInt(localStorage.getItem('nextTurn'));\r\n        this.board = JSON.parse(localStorage.getItem('board'));\r\n\r\n        if (this.timer) {\r\n            this.timer.setSecondsRunningFromLocalStorage();\r\n        }\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.setFromLocalStorage();\r\n        }\r\n    }\r\n\r\n    private saveGame() {\r\n        if (this.areBothPlayersConnected()) {\r\n            localStorage.setItem('nextTurn', this.turn.toString());\r\n            localStorage.setItem('board', JSON.stringify(this.board));\r\n\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.saveIntoLocalStorage();\r\n            }\r\n\r\n            if (this.timer) {\r\n                this.timer.saveSecondsRunningToLocalStorage();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            const column = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin(column);\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            const column = this.getColumnFromCursorPosition(event);\r\n            this.landCoin(column);\r\n        }\r\n    };\r\n\r\n    public exit = () => {\r\n        this.saveGame();\r\n        Dialog.closeAllOpenDialogs();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = () => {\r\n        this.saveGame();\r\n    }\r\n\r\n    private pageVisibilityChange = () => {\r\n        if (this.timer) {\r\n            this.timer.pauseWhenDocumentHidden();\r\n        }\r\n    };\r\n\r\n    protected closeGameAfterWinning() {\r\n        // Clear game data\r\n        localStorage.clear();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.closeGameAfterWinning();\r\n    }\r\n\r\n    protected landCoin(column: number): number {\r\n        if (this.board[column][0] === Coin.Empty) {\r\n            let row = super.landCoin(column);\r\n            \r\n            let coinCount = BoardLogic.countConsecutiveCoins(this.board, column, row, this.turn);\r\n\r\n            if (coinCount >= 4) {\r\n                let winner: string = '';\r\n\r\n                if (this.playerNameSection) {\r\n                    if (this.turn === Coin.Red) {\r\n                        winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                    } else if (this.turn === Coin.Green) {\r\n                        winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                    }\r\n                }\r\n\r\n                this.showWinDialog(winner, this.turn);\r\n                this.closeGameAfterWinning();\r\n            } else if (BoardLogic.isBoardFull(this.board)) {\r\n                let message: string = '';\r\n                if (this.playerNameSection) {\r\n                    message += `${this.playerNameSection.getPlayerRed()} (Red) and ${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n                message += ' are tied!';\r\n                Dialog.notify(DialogIds.GameEnd, [message]);\r\n                this.closeGameAfterWinning();\r\n            } else { // If game is still going on\r\n                this.switchTurn();\r\n                this.context.fillStyle = Game.getColor(this.turn);\r\n                this.paintCoinToDrop(column);\r\n                Utils.playSound(Sound.LandCoin);\r\n            }\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        super.setGameEvents();\r\n        document.addEventListener('visibilitychange', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        super.cleanUpEvents();\r\n        document.removeEventListener('changevisibility', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected showWinDialog(winner: string, currentTurn: Coin) {\r\n        let winMsg: Array<string> = new Array();\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.timer) {\r\n            winMsg.push(`Time taken: ${this.timer.getTimeInStringFormat()}`);\r\n        }\r\n        Utils.playSound(Sound.Win);\r\n        Dialog.notify(DialogIds.GameEnd, winMsg);\r\n    }\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n\r\n        if (this.timer) {\r\n            this.timer.reset();\r\n        }\r\n    }\r\n\r\n}","import Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport Utils from \"./utils\";\r\nimport { Coin, GameMessage, InitialMessage, PlayerNameMessage } from \"@danieldesira/daniels-connect4-common\";\r\n\r\nexport default class Socket {\r\n    private webSocket: WebSocket;\r\n    private playerColor: Coin;\r\n    private playerName: string;\r\n    private gameId: number;\r\n    public onMessageCallback: Function;\r\n    public onErrorCallback: Function;\r\n    public onInputPlayerNameInDialog: Function;\r\n    public onGameCancel: Function;\r\n\r\n    public constructor() {\r\n        this.connect();\r\n    }\r\n\r\n    private connect() {\r\n        let url: string;\r\n        if (Utils.isLocal()) {\r\n            url = 'ws://localhost:3000/';\r\n        } else {\r\n            url = 'wss://daniels-connect4-server.adaptable.app/';\r\n        }\r\n\r\n        if (this.playerColor && !isNaN(this.gameId)) {\r\n            url += `?playerColor=${this.playerColor}&gameId=${this.gameId}&playerName=${this.playerName}`;\r\n        }\r\n\r\n        this.webSocket = new WebSocket(url);\r\n\r\n        this.webSocket.onmessage = this.onMessage;\r\n        this.webSocket.onerror = this.onError;\r\n        this.webSocket.onclose = this.onClose;\r\n    }\r\n\r\n    public send(data: GameMessage) {\r\n        this.webSocket.send(JSON.stringify(data));\r\n    }\r\n\r\n    public close() {\r\n        this.webSocket.onclose = null;\r\n        this.webSocket.onmessage = null;\r\n        this.webSocket.onerror = null;\r\n        this.webSocket.close();\r\n    }\r\n\r\n    public getPlayerColor(): Coin {\r\n        return this.playerColor;\r\n    }\r\n\r\n    public getPlayerName(): string {\r\n        return this.playerName;\r\n    }\r\n\r\n    private onMessage = (event: MessageEvent) => {\r\n        const messageData: GameMessage = JSON.parse(event.data);\r\n\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n\r\n            if (!this.gameId) {\r\n                this.gameId = data.gameId;\r\n            }\r\n            \r\n            if (!this.playerColor) {\r\n                this.playerColor = data.color;\r\n    \r\n                let color: string;\r\n                if (this.playerColor === Coin.Red) {\r\n                    color = 'red';\r\n                } else {\r\n                    color = 'green';\r\n                }\r\n    \r\n                Dialog.prompt(DialogIds.PlayerNames, [`You are ${color}. Please enter your name. (10 characters or less.)`], {\r\n                    onOK: () => this.onPlayerNameInput(color),\r\n                    onCancel: () => this.onGameCancel(),\r\n                    inputs: [{\r\n                        label: `Player ${color[0].toUpperCase()}${color.substring(1)}`,\r\n                        name: color,\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    }]\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.onMessageCallback) {\r\n            this.onMessageCallback(messageData);\r\n        }\r\n    };\r\n\r\n    private onPlayerNameInput = (color: string): string => {\r\n        const playerNameField = document.getElementById(`dialog-input-${color}`) as HTMLInputElement;\r\n\r\n        if (playerNameField) {\r\n            if (playerNameField.value && playerNameField.value.trim()) {\r\n                this.playerName = playerNameField.value;\r\n                this.onInputPlayerNameInDialog(this.playerName);\r\n                const data = new PlayerNameMessage(this.playerName);\r\n                this.send(data);\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    private onError = () => {\r\n        this.onErrorCallback();\r\n        Dialog.closeAllOpenDialogs();\r\n        Dialog.notify(DialogIds.ServerError, ['Problem connecting to server!']);\r\n    };\r\n\r\n    private onClose = () => {\r\n        this.connect();\r\n    };\r\n}","export default class Timer {\r\n\r\n    private secondsRunning: number;\r\n    private interval: number;\r\n    private timerSpan: HTMLSpanElement;\r\n\r\n    public constructor(timerId: string) {\r\n        this.timerSpan = document.getElementById(timerId) as HTMLSpanElement;\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n    private timerCallback = () => {\r\n        this.secondsRunning++;\r\n        const minutes: number = Math.floor(this.secondsRunning / 60);\r\n        const seconds: number = this.secondsRunning % 60;\r\n        this.timerSpan.innerText = `${minutes}:${(seconds < 10 ? '0' : '')}${seconds}`;\r\n        \r\n        if (this.timerSpan.classList.contains('hide')) {\r\n            clearInterval(this.interval);\r\n        }\r\n    };\r\n\r\n    public set() {\r\n        if (this.timerSpan) {\r\n            this.timerSpan.classList.remove('hide');\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public stop() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.timerSpan.innerText = '';\r\n            this.timerSpan.classList.add('hide');\r\n        }\r\n    }\r\n\r\n    public pauseWhenDocumentHidden() {\r\n        if (document.hidden) {\r\n            clearInterval(this.interval);\r\n        } else {\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public getTimeInStringFormat(): string {\r\n        if (this.timerSpan) {\r\n            return this.timerSpan.innerText;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    public saveSecondsRunningToLocalStorage() {\r\n        localStorage.setItem('secondsRunning', this.secondsRunning.toString());\r\n    }\r\n\r\n    public setSecondsRunningFromLocalStorage() {\r\n        this.secondsRunning = parseInt(localStorage.getItem('secondsRunning'));\r\n    }\r\n\r\n    public reset() {\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n}","export default class Utils {\r\n    public static isLocal(): boolean {\r\n        return location.protocol === 'file:'\r\n            || location.hostname === 'localhost';\r\n    }\r\n\r\n    public static playSound(path: string) {\r\n        let audio = new Audio(path);\r\n        audio.play();\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import Dialog from \"./lib/dialog/dialog\";\r\nimport { DialogIds } from \"./lib/enums/dialog-ids\";\r\nimport { GameMode } from \"./lib/enums/game-mode\";\r\nimport GameOptions from \"./lib/game-options\";\r\nimport NetworkGame from \"./lib/network-game\";\r\nimport SameDeviceGame from \"./lib/same-device-game\";\r\n\r\nconst samePCBtn = document.getElementById('samePC') as HTMLButtonElement;\r\nconst networkBtn = document.getElementById('network') as HTMLButtonElement;\r\nconst instructionsBtn = document.getElementById('instructions') as HTMLButtonElement;\r\n\r\nsamePCBtn.addEventListener('click', () => {\r\n    initGame(GameMode.SamePC);\r\n}, false);\r\n\r\nnetworkBtn.addEventListener('click', () => {\r\n    initGame(GameMode.Network);\r\n}, false);\r\n\r\nfunction initGame(mode: GameMode) {\r\n    clearError();\r\n\r\n    try {\r\n        const options: GameOptions = {\r\n            canvasId: 'board',\r\n            exitBtnId: 'exitBtn',\r\n            timerCountdownId: 'timer',\r\n            playerRedId: 'playerRed',\r\n            playerGreenId: 'playerGreen',\r\n            menuId: 'menu',\r\n            gameIndicatorsId: 'gameIndicators'\r\n        };\r\n        if (mode === GameMode.Network) {\r\n            const connect4 = NetworkGame.getInstance(options);\r\n            connect4.start();\r\n        } else {\r\n            const connect4 = SameDeviceGame.getInstance(options);\r\n            connect4.start();\r\n        }\r\n    } catch (ex) {\r\n        showError('Problem encountered!');\r\n        // To-do: include logging\r\n    }\r\n}\r\n\r\nfunction showError(message: string) {\r\n    const errorMessageDiv = document.getElementById('errorMessage') as HTMLDivElement;\r\n    if (errorMessageDiv) {\r\n        errorMessageDiv.classList.remove('hide');\r\n        errorMessageDiv.innerText = message;\r\n    }\r\n}\r\n\r\nfunction clearError() {\r\n    const errorMessageDiv = document.getElementById('errorMessage') as HTMLDivElement;\r\n    if (errorMessageDiv) {\r\n        errorMessageDiv.classList.add('hide');\r\n    }\r\n}\r\n\r\ninstructionsBtn.addEventListener('click', () => {\r\n    const text = [\r\n        'The principle behind Connect4 is simple:',\r\n        `The player who first places 4 coins next to each other, wins. These may be \r\n            horizontal, vertical or diagonal.`,\r\n        `Furthermore, in network play, you must place your coin within 60 seconds.\r\n            If you fail to do so, you pass the turn to your opponent.`,\r\n        'Good luck and have fun playing!'\r\n    ];\r\n    Dialog.notify(DialogIds.Instructions, text);\r\n}, false);"],"names":["Object","defineProperty","exports","value","BoardLogic","coin_1","initBoard","board","col","columns","Array","rows","row","Coin","Empty","countConsecutiveCoins","column","currentTurn","count","coinCount","rowCount","colCount","isBoardFull","full","putCoin","color","skipTurnMaxWait","switchTurn","randomiseColor","WinnerMessage","TieMessage","SkipTurnMessage","PlayerNameMessage","InitialMessage","GameMessage","ErrorMessage","DisconnectMessage","CurrentTurnMessage","ActionMessage","board_logic_1","enumerable","get","action_message_1","current_turn_message_1","disconnect_message_1","error_message_1","game_message_1","initial_message_1","player_name_message_1","skip_turn_message_1","tie_message_1","winner_message_1","player_turn_1","constants_1","extendStatics","__extends","this","d","b","setPrototypeOf","__proto__","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","_super","action","_this","hardDisconnect","error","isInitialMessage","msg","isNaN","isInactivityMessage","isActionMessage","isSkipTurnMessage","isWinnerMessage","isTieMessage","isCurrentTurnMessage","isDisconnectMessage","isErrorMessage","gameId","opponentName","name","skipTurn","tie","winner","Math","floor","random","Red","Green","modal","id","text","type","options","document","getElementById","createElement","classList","add","textContainer","appendText","appendChild","DialogType","Confirmation","btnContainer","appendBtn","yesCallback","closeModal","yesColor","noCallback","noColor","Notification","Prompt","o","appendForm","body","container","callback","bgColor","btnType","btn","innerText","addEventListener","inputContainer","form","onOK","appendError","appendInputs","inputs","onCancel","i","length","input","placeholder","label","maxLength","limit","required","ariaRequired","toString","appendBrElement","br","errorDiv","contains","removeChild","confirm","Dialog","notify","prompt","closeAllOpenDialogs","dialogs","getElementsByClassName","DialogIds","GameMode","Sound","turn","resizeCanvas","canvas","height","window","innerHeight","width","innerWidth","circleRadius","colGap","rowGap","colOffset","paintBoard","canvasId","context","getContext","exitBtnId","exitBtn","playerRedId","playerGreenId","playerNameSection","gameIndicatorsId","gameIndicatorsContainer","menuId","gameMenu","start","showGame","printPlayerNames","indicateTurn","setGameEvents","boardGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Game","verticalOffset","getColor","drawCircle","canvasMousemove","canvasClick","beforeUnload","exit","getColumnFromCursorPosition","event","position","getCursorPosition","round","x","moveCoin","clearUpper","paintCoinToDrop","landCoin","closeGameAfterWinning","cleanUpEvents","setTimeout","resetValues","hideGame","clear","beginPath","arc","PI","closePath","fill","clearRect","removeEventListener","reset","areBothPlayersConnected","remove","onSocketMessage","messageData","data","socket","getPlayerColor","setPlayerGreen","setPlayerRed","getPlayerName","turnCountDown","getPlayerRed","getPlayerGreen","showWinDialog","GameEnd","ServerError","onSocketError","send","ExitGame","confirmExit","close","preventDefault","returnValue","turnCountDownCallback","countdownSpan","adaptCountDownColor","onInputPlayerNameInDialog","playerName","timerCountdownId","getInstance","NetworkGame","instance","defineSocket","startCountdown","onMessageCallback","onErrorCallback","onGameCancel","stopCountdown","playSound","LandCoin","winMsg","push","Win","Lose","resetCountdown","turnCountDownInterval","setInterval","clearInterval","onPromptOK","redInput","greenInput","trim","playerRed","playerGreen","onPromptCancel","playerRedSpan","playerGreenSpan","setUpPlayerNames","okAction","cancelAction","localStorage","getItem","PlayerNames","waiting","saveIntoLocalStorage","setItem","setFromLocalStorage","y","undefined","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","Position","offsetLeft","offsetTop","setTimer","timer","set","continuePreviousGame","restoreLastGame","onGameDataCheck","cancelPreviousGame","saveGame","stop","pageVisibilityChange","pauseWhenDocumentHidden","SameDeviceGame","checkGameData","nextTurn","ContinueGame","parseInt","JSON","parse","setSecondsRunningFromLocalStorage","stringify","saveSecondsRunningToLocalStorage","message","getTimeInStringFormat","onMessage","playerColor","onPlayerNameInput","toUpperCase","substring","playerNameField","onError","onClose","connect","url","isLocal","webSocket","WebSocket","onmessage","onerror","onclose","timerId","timerCallback","secondsRunning","minutes","seconds","timerSpan","interval","hidden","location","protocol","hostname","path","Audio","play","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","samePCBtn","networkBtn","instructionsBtn","initGame","mode","errorMessageDiv","Network","ex","showError","SamePC","Instructions"],"sourceRoot":""}