{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/board-logic.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/constants.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/enums/coin.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/enums/dimensions.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/index.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/action-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/current-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/disconnect-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/error-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/game-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/initial-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/skip-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/tie-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/winner-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/player-turn.js","webpack:///./src/lib/authentication.ts","webpack:///./src/lib/config.ts","webpack:///./src/lib/dialog/dialog.ts","webpack:///./src/lib/dialog/enums/dialog-type.ts","webpack:///./src/lib/enums/dialog-ids.ts","webpack:///./src/lib/enums/game-mode.ts","webpack:///./src/lib/enums/sound.ts","webpack:///./src/lib/game.ts","webpack:///./src/lib/network-game.ts","webpack:///./src/lib/player-name-section.ts","webpack:///./src/lib/position.ts","webpack:///./src/lib/same-device-game.ts","webpack:///./src/lib/socket.ts","webpack:///./src/lib/timer.ts","webpack:///./src/lib/utils.ts","webpack:///./src/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoardLogic = void 0;\nvar constants_1 = require(\"./constants\");\nvar coin_1 = require(\"./enums/coin\");\nvar dimensions_1 = require(\"./enums/dimensions\");\nvar BoardLogic = /** @class */ (function () {\n    /**\n     * Initialises the board matrix given the board dimensions\n     * @param dim The board dimensions type\n     */\n    function BoardLogic(dim) {\n        var _this = this;\n        this.board = [];\n        /**\n         * Getter for the number of columns\n         * @returns The number of columns\n         */\n        this.getColumns = function () { return _this.columns; };\n        /**\n         * Getter for the number of rows\n         * @returns The number of rows\n         */\n        this.getRows = function () { return _this.rows; };\n        /**\n         * Getter for the board matrix\n         * @returns The board matrix\n         */\n        this.getBoard = function () { return _this.board; };\n        /**\n         * Resets the board matrix retaining the given dimensions\n         */\n        this.resetBoard = function () { return _this.initBoard(); };\n        switch (dim) {\n            case dimensions_1.BoardDimensions.Small:\n                this.columns = constants_1.dimensions.small.columns;\n                this.rows = constants_1.dimensions.small.rows;\n                break;\n            case dimensions_1.BoardDimensions.Medium:\n                this.columns = constants_1.dimensions.medium.columns;\n                this.rows = constants_1.dimensions.medium.rows;\n                break;\n            case dimensions_1.BoardDimensions.Large:\n                this.columns = constants_1.dimensions.large.columns;\n                this.rows = constants_1.dimensions.large.rows;\n                break;\n        }\n        this.initBoard();\n    }\n    /**\n     * Initialises board matrix\n     */\n    BoardLogic.prototype.initBoard = function () {\n        this.board = new Array(this.columns);\n        for (var col = 0; col < this.columns; col++) {\n            this.board[col] = new Array(this.rows);\n            for (var row = 0; row < this.rows; row++) {\n                this.board[col][row] = coin_1.Coin.Empty;\n            }\n        }\n    };\n    /**\n     * Counts and checks the coin placeholders adjecent to the specified point (column x row). Matches may occurr,\n     * vertically, horizontally or diagonally.\n     * @param column - The column number of the starting point\n     * @param row - The row number of the starting point\n     * @param currentTurn - Coin color to be checked\n     * @returns Count of adjecent coins with the same color\n     */\n    BoardLogic.prototype.countConsecutiveCoins = function (column, row, currentTurn) {\n        var count = row;\n        var coinCount = 0;\n        // Vertical check\n        while (coinCount < 4 && count < this.rows && this.board[column][count] === currentTurn) {\n            coinCount++;\n            count++;\n        }\n        if (coinCount < 4) {\n            // Horizontal check\n            coinCount = 0;\n            count = column;\n            while (count < this.columns && this.board[count][row] === currentTurn) {\n                coinCount++;\n                count++;\n            }\n            count = column - 1;\n            while (count > -1 && this.board[count][row] === currentTurn) {\n                coinCount++;\n                count--;\n            }\n            // Diagonal checks\n            if (coinCount < 4) {\n                coinCount = 0;\n                var rowCount = row - 1;\n                var colCount = column + 1;\n                while (coinCount < 4 && rowCount > -1 && colCount < this.columns && this.board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount++; //right columns\n                    rowCount--; //upper rows\n                }\n                colCount = column;\n                rowCount = row;\n                while (coinCount < 4 && rowCount < this.rows && colCount > -1 && this.board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount--; // left columns\n                    rowCount++; // lower rows\n                }\n                if (coinCount < 4) {\n                    coinCount = 0;\n                    rowCount = row - 1;\n                    colCount = column - 1;\n                    while (coinCount < 4 && rowCount > -1 && colCount > -1 && this.board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount--; // left columns\n                        rowCount--; // upper rows\n                    }\n                    colCount = column;\n                    rowCount = row;\n                    while (coinCount < 4 && rowCount < this.rows && colCount < this.columns && this.board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount++; // right columns\n                        rowCount++; // lower rows\n                    }\n                }\n            }\n        }\n        return coinCount;\n    };\n    /**\n     * Checks if the board matrix is full\n     * @returns True if full, false if not\n     */\n    BoardLogic.prototype.isBoardFull = function () {\n        var full = true;\n        for (var col = 0; col < this.columns; col++) {\n            // Check upper row in every column\n            if (this.board[col][0] === coin_1.Coin.Empty) {\n                full = false;\n                break;\n            }\n        }\n        return full;\n    };\n    /**\n     * Places coin in a specific column\n     * @param color The color of the coin\n     * @param column The specified column number\n     * @returns Row number where the coin was placed. -1 if column is full.\n     */\n    BoardLogic.prototype.putCoin = function (color, column) {\n        for (var row = this.rows - 1; row >= 0; row--) {\n            if (this.board[column][row] === coin_1.Coin.Empty) {\n                this.board[column][row] = color;\n                return row;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Board matrix setter\n     * @param board The new board matrix\n     */\n    BoardLogic.prototype.setBoard = function (board) {\n        this.board = board;\n    };\n    /**\n     * Sets a single board matrix item, at the specified row and column\n     * @param coin The coin color\n     * @param col The column number\n     * @param row The row number\n     */\n    BoardLogic.prototype.setBoardItem = function (coin, col, row) {\n        this.board[col][row] = coin;\n    };\n    return BoardLogic;\n}());\nexports.BoardLogic = BoardLogic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dimensions = exports.skipTurnMaxWait = void 0;\n/**\n * @constant {number} skipTurnMaxWait - The maximum number of seconds that are allowed before skipping turn.\n */\nexports.skipTurnMaxWait = 60;\n/**\n * @constant dimensions - The column & row board dimensions available.\n */\nexports.dimensions = {\n    small: {\n        columns: 6,\n        rows: 5\n    },\n    medium: {\n        columns: 7,\n        rows: 6\n    },\n    large: {\n        columns: 9,\n        rows: 8\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Coin = void 0;\nvar Coin;\n(function (Coin) {\n    Coin[Coin[\"Empty\"] = 0] = \"Empty\";\n    Coin[Coin[\"Red\"] = 1] = \"Red\";\n    Coin[Coin[\"Green\"] = 2] = \"Green\";\n})(Coin || (exports.Coin = Coin = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoardDimensions = void 0;\nvar BoardDimensions;\n(function (BoardDimensions) {\n    BoardDimensions[BoardDimensions[\"Small\"] = 1] = \"Small\";\n    BoardDimensions[BoardDimensions[\"Medium\"] = 2] = \"Medium\";\n    BoardDimensions[BoardDimensions[\"Large\"] = 3] = \"Large\";\n})(BoardDimensions || (exports.BoardDimensions = BoardDimensions = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoardDimensions = exports.dimensions = exports.skipTurnMaxWait = exports.switchTurn = exports.randomiseColor = exports.WinnerMessage = exports.TieMessage = exports.SkipTurnMessage = exports.InitialMessage = exports.GameMessage = exports.ErrorMessage = exports.DisconnectMessage = exports.CurrentTurnMessage = exports.ActionMessage = exports.Coin = exports.default = void 0;\nvar board_logic_1 = require(\"./board-logic\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return board_logic_1.BoardLogic; } });\nvar coin_1 = require(\"./enums/coin\");\nObject.defineProperty(exports, \"Coin\", { enumerable: true, get: function () { return coin_1.Coin; } });\nvar action_message_1 = require(\"./models/action-message\");\nObject.defineProperty(exports, \"ActionMessage\", { enumerable: true, get: function () { return action_message_1.ActionMessage; } });\nvar current_turn_message_1 = require(\"./models/current-turn-message\");\nObject.defineProperty(exports, \"CurrentTurnMessage\", { enumerable: true, get: function () { return current_turn_message_1.CurrentTurnMessage; } });\nvar disconnect_message_1 = require(\"./models/disconnect-message\");\nObject.defineProperty(exports, \"DisconnectMessage\", { enumerable: true, get: function () { return disconnect_message_1.DisconnectMessage; } });\nvar error_message_1 = require(\"./models/error-message\");\nObject.defineProperty(exports, \"ErrorMessage\", { enumerable: true, get: function () { return error_message_1.ErrorMessage; } });\nvar game_message_1 = require(\"./models/game-message\");\nObject.defineProperty(exports, \"GameMessage\", { enumerable: true, get: function () { return game_message_1.GameMessage; } });\nvar initial_message_1 = require(\"./models/initial-message\");\nObject.defineProperty(exports, \"InitialMessage\", { enumerable: true, get: function () { return initial_message_1.InitialMessage; } });\nvar skip_turn_message_1 = require(\"./models/skip-turn-message\");\nObject.defineProperty(exports, \"SkipTurnMessage\", { enumerable: true, get: function () { return skip_turn_message_1.SkipTurnMessage; } });\nvar tie_message_1 = require(\"./models/tie-message\");\nObject.defineProperty(exports, \"TieMessage\", { enumerable: true, get: function () { return tie_message_1.TieMessage; } });\nvar winner_message_1 = require(\"./models/winner-message\");\nObject.defineProperty(exports, \"WinnerMessage\", { enumerable: true, get: function () { return winner_message_1.WinnerMessage; } });\nvar player_turn_1 = require(\"./player-turn\");\nObject.defineProperty(exports, \"randomiseColor\", { enumerable: true, get: function () { return player_turn_1.randomiseColor; } });\nObject.defineProperty(exports, \"switchTurn\", { enumerable: true, get: function () { return player_turn_1.switchTurn; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"skipTurnMaxWait\", { enumerable: true, get: function () { return constants_1.skipTurnMaxWait; } });\nObject.defineProperty(exports, \"dimensions\", { enumerable: true, get: function () { return constants_1.dimensions; } });\nvar dimensions_1 = require(\"./enums/dimensions\");\nObject.defineProperty(exports, \"BoardDimensions\", { enumerable: true, get: function () { return dimensions_1.BoardDimensions; } });\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActionMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ActionMessage = /** @class */ (function (_super) {\n    __extends(ActionMessage, _super);\n    /**\n     * @param {number} column - The column number\n     * @param {string} action - The type of action\n     * @param {Coin} color - The coin color\n     */\n    function ActionMessage(column, action, color) {\n        var _this = _super.call(this) || this;\n        _this.column = column;\n        _this.action = action;\n        _this.color = color;\n        return _this;\n    }\n    return ActionMessage;\n}(game_message_1.GameMessage));\nexports.ActionMessage = ActionMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CurrentTurnMessage = void 0;\nvar coin_1 = require(\"../enums/coin\");\nvar game_message_1 = require(\"./game-message\");\nvar CurrentTurnMessage = /** @class */ (function (_super) {\n    __extends(CurrentTurnMessage, _super);\n    function CurrentTurnMessage() {\n        var _this = _super.call(this) || this;\n        _this.currentTurn = coin_1.Coin.Empty;\n        return _this;\n    }\n    return CurrentTurnMessage;\n}(game_message_1.GameMessage));\nexports.CurrentTurnMessage = CurrentTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DisconnectMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar DisconnectMessage = /** @class */ (function (_super) {\n    __extends(DisconnectMessage, _super);\n    function DisconnectMessage() {\n        var _this = _super.call(this) || this;\n        _this.hardDisconnect = true;\n        return _this;\n    }\n    return DisconnectMessage;\n}(game_message_1.GameMessage));\nexports.DisconnectMessage = DisconnectMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ErrorMessage = /** @class */ (function (_super) {\n    __extends(ErrorMessage, _super);\n    /**\n     * @param {string} error The error message\n     */\n    function ErrorMessage(error) {\n        var _this = _super.call(this) || this;\n        _this.error = error;\n        return _this;\n    }\n    return ErrorMessage;\n}(game_message_1.GameMessage));\nexports.ErrorMessage = ErrorMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameMessage = void 0;\nvar GameMessage = /** @class */ (function () {\n    function GameMessage() {\n    }\n    /**\n     * Tests if message is an initial message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message is initial\n     * @public\n     * @static\n     */\n    GameMessage.isInitialMessage = function (msg) {\n        return (!isNaN(msg['gameId']) && msg['color']) || msg['opponentName'];\n    };\n    /**\n     * Tests if message is an inactivity message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents inactivity\n     * @public\n     * @static\n     */\n    GameMessage.isInactivityMessage = function (msg) {\n        return msg['endGameDueToInactivity'] && msg['currentTurn'];\n    };\n    /**\n     * Tests if message is an action message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents an action\n     * @public\n     * @static\n     */\n    GameMessage.isActionMessage = function (msg) {\n        return msg['action'] && !isNaN(msg['column']) && msg['color'];\n    };\n    /**\n     * Tests if message is a skip turn message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message is a skip turn\n     * @public\n     * @static\n     */\n    GameMessage.isSkipTurnMessage = function (msg) {\n        return msg['skipTurn'] && msg['currentTurn'];\n    };\n    /**\n     * Tests if message is a winner message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents win\n     * @public\n     * @static\n     */\n    GameMessage.isWinnerMessage = function (msg) {\n        return msg['winner'];\n    };\n    /**\n     * Tests if message is a tie message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents tie\n     * @public\n     * @static\n     */\n    GameMessage.isTieMessage = function (msg) {\n        return msg['tie'];\n    };\n    /**\n     * Tests if message is a current turn message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents current turn\n     * @public\n     * @static\n     */\n    GameMessage.isCurrentTurnMessage = function (msg) {\n        return msg['currentTurn'];\n    };\n    /**\n     * Tests if message is a disconnect message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represent a disconnection\n     * @public\n     * @static\n     */\n    GameMessage.isDisconnectMessage = function (msg) {\n        return msg['hardDisconnect'];\n    };\n    /**\n     * Tests if message is an error message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message is an error\n     * @public\n     * @static\n     */\n    GameMessage.isErrorMessage = function (msg) {\n        return msg['error'];\n    };\n    return GameMessage;\n}());\nexports.GameMessage = GameMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InitialMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar InitialMessage = /** @class */ (function (_super) {\n    __extends(InitialMessage, _super);\n    /**\n     * @param {number} gameId - The ID of the game\n     * @param {string} playerName - The name of the player\n     * @param {string} opponentName - The name of the opponent\n     * @param {Coin} color - The coin color chosen\n     */\n    function InitialMessage(gameId, playerName, opponentName, color) {\n        var _this = _super.call(this) || this;\n        _this.gameId = gameId;\n        _this.playerName = playerName;\n        _this.opponentName = opponentName;\n        _this.color = color;\n        return _this;\n    }\n    return InitialMessage;\n}(game_message_1.GameMessage));\nexports.InitialMessage = InitialMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SkipTurnMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar SkipTurnMessage = /** @class */ (function (_super) {\n    __extends(SkipTurnMessage, _super);\n    /**\n     * @param {boolean} skipTurn - Whether to skip the current turn\n     * @param {Coin} currentTurn - Coin color to be the new turn\n     */\n    function SkipTurnMessage(skipTurn, currentTurn) {\n        var _this = _super.call(this) || this;\n        _this.skipTurn = skipTurn;\n        _this.currentTurn = currentTurn;\n        return _this;\n    }\n    return SkipTurnMessage;\n}(game_message_1.GameMessage));\nexports.SkipTurnMessage = SkipTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TieMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar TieMessage = /** @class */ (function (_super) {\n    __extends(TieMessage, _super);\n    /**\n     * @param {boolean} tie - Optional boolean parameter to determine if tie. True by default.\n     */\n    function TieMessage(tie) {\n        if (tie === void 0) { tie = true; }\n        var _this = _super.call(this) || this;\n        _this.tie = tie;\n        return _this;\n    }\n    return TieMessage;\n}(game_message_1.GameMessage));\nexports.TieMessage = TieMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WinnerMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\n/**\n * @class WinnerMessage model\n */\nvar WinnerMessage = /** @class */ (function (_super) {\n    __extends(WinnerMessage, _super);\n    /**\n     * @param {Coin} winner - The coin color of the winner\n     */\n    function WinnerMessage(winner) {\n        var _this = _super.call(this) || this;\n        _this.winner = winner;\n        return _this;\n    }\n    return WinnerMessage;\n}(game_message_1.GameMessage));\nexports.WinnerMessage = WinnerMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.switchTurn = exports.randomiseColor = void 0;\nvar coin_1 = require(\"./enums/coin\");\n/**\n * Randomises color\n * @returns {Coin} Random coin color\n */\nfunction randomiseColor() {\n    return Math.floor(Math.random() * 2) + 1;\n}\nexports.randomiseColor = randomiseColor;\n/**\n * Switches turn depending on input\n * @param {Coin} currentTurn - The current coin color\n * @returns {Coin} The opposing coin color\n */\nfunction switchTurn(currentTurn) {\n    return currentTurn === coin_1.Coin.Red ? coin_1.Coin.Green : coin_1.Coin.Red;\n}\nexports.switchTurn = switchTurn;\n","import { BoardDimensions, PlayerInfo, PlayerStats } from \"@danieldesira/daniels-connect4-common\";\r\nimport config from \"./config\";\r\nimport { AuthenticationModel } from \"./models/authentication-model\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        google: any;\r\n    }\r\n}\r\n\r\nexport async function handleGoogleSignon(response: any) {\r\n    const {credential} = response;\r\n    storeGoogleToken(credential);\r\n    await showLoginLogout();\r\n}\r\n\r\nfunction storeGoogleToken(token: string) {\r\n    const data = {\r\n        token,\r\n        service: 'google'\r\n    } as AuthenticationModel;\r\n    localStorage.setItem('auth', JSON.stringify(data));\r\n}\r\n\r\nexport async function showLoginLogout() {\r\n    const loginBtns = document.getElementById('login-btns') as HTMLDivElement;\r\n    const loggedInArea = document.getElementById('authPlayerArea') as HTMLDivElement;\r\n    if (localStorage.getItem('auth')) {\r\n        loginBtns.classList.add('hide');\r\n        loggedInArea.classList.remove('hide');\r\n        await loadUserData();\r\n    } else {\r\n        loginBtns.classList.remove('hide');\r\n        loggedInArea.classList.add('hide');\r\n        const statsContainer = document.getElementById('statsContainer') as HTMLDivElement;\r\n        statsContainer.innerText = '';\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('auth');\r\n    showLoginLogout();\r\n}\r\n\r\nexport function getToken(): AuthenticationModel | null {\r\n    const val = localStorage.getItem('auth');\r\n    return val ? JSON.parse(val) as AuthenticationModel : null;\r\n}\r\n\r\nasync function loadUserData() {\r\n    const auth = getToken();\r\n    const response = await fetch(`${config.httpServer}/auth?token=${auth.token}&service=${auth.service}`);\r\n    const data = await response.json() as PlayerInfo;\r\n    if (data.isTokenValid) {\r\n        const userName = document.getElementById('authPlayerName') as HTMLButtonElement;\r\n        userName.innerText = data.user;\r\n        const authPlayerPicture = document.getElementById('authPlayerPicture') as HTMLImageElement;\r\n        authPlayerPicture.src = data.picUrl;\r\n        const dimensionOption = document.querySelector(`#dimensions option[value='${data.dimensions}']`) as HTMLOptionElement;\r\n        dimensionOption.ariaSelected = 'true';\r\n        dimensionOption.selected = true;\r\n    } else {\r\n        logout();\r\n    }\r\n}\r\n\r\nexport async function loadStats() {\r\n    const auth = getToken();\r\n    const response = await fetch(`${config.httpServer}/stats?token=${auth.token}&service=${auth.service}`);\r\n    const data = await response.json() as PlayerStats;\r\n    const statsContainer = document.getElementById('statsContainer') as HTMLDivElement;\r\n    statsContainer.innerText = `Wins: ${data.wins} - ${data.winPercent.toFixed(2)}%\\nLosses: ${data.losses} - ${data.lossPercent.toFixed(2)}%`;\r\n}\r\n\r\nexport function initGoogleSSO() {\r\n    window.google.accounts.id.initialize({\r\n        client_id: '966331594657-sjtp3m7ooigjma726j7aa4kcf5qdu2v7.apps.googleusercontent.com',\r\n        callback: handleGoogleSignon\r\n    });\r\n    window.google.accounts.id.prompt();\r\n}\r\n\r\nexport async function updatePlayerDimensions(dimensions: BoardDimensions) {\r\n    const {token, service} = getToken();\r\n    const params = {\r\n        token,\r\n        service,\r\n        dimensions\r\n    };\r\n    const response = await fetch(`${config.httpServer}/update-dimensions`, {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(params)\r\n    });\r\n    if (response.status === 200) {\r\n        Dialog.notify({\r\n            title: 'Dimensions',\r\n            text: ['Dimensions updated successfully!'],\r\n            id: DialogIds.Saved\r\n        });\r\n    }\r\n}","import Utils from \"./utils\";\r\n\r\nconst config = Utils.isLocal() ? {\r\n    httpServer: 'http://localhost:3000',\r\n    wsServer: 'ws://localhost:3000'\r\n} : {\r\n    httpServer: 'https://daniels-connect4-server.adaptable.app',\r\n    wsServer: 'wss://daniels-connect4-server.adaptable.app'\r\n};\r\n\r\nexport default config;","import ConfirmationDialogOptions from \"./confirmation-dialog-options\";\r\nimport DialogOptions from \"./dialog-options\";\r\nimport { DialogType } from \"./enums/dialog-type\";\r\nimport PromptDialogOptions from \"./prompt-dialog-options\";\r\nimport PromptInput from \"./prompt-input\";\r\n\r\nexport default class Dialog {\r\n    \r\n    private static modal(type: DialogType, options: DialogOptions) {\r\n        if (!document.getElementById(options.id)) {\r\n            const modal = document.createElement('div') as HTMLDivElement;\r\n            modal.tabIndex = 1;\r\n            modal.id = options.id;\r\n            modal.classList.add('dialog');\r\n\r\n            if (options.title) {\r\n                const h1 = document.createElement('h1') as HTMLHeadingElement;\r\n                h1.innerText = options.title;\r\n                h1.classList.add('dialog-title');\r\n                modal.appendChild(h1);\r\n                modal.appendChild(document.createElement('hr'));\r\n            }\r\n\r\n            const textContainer = document.createElement('div') as HTMLDivElement;\r\n            this.appendText(options.text, textContainer);\r\n            modal.appendChild(textContainer);\r\n\r\n            switch (type) {\r\n                case DialogType.Confirmation: {\r\n                    const o = options as ConfirmationDialogOptions;\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'Yes', () => {\r\n                        o.yesCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.yesColor, 'button');\r\n                    this.appendBtn(btnContainer, 'No', () => {\r\n                        o.noCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.noColor, 'button');\r\n                    break;\r\n                }\r\n                case DialogType.Notification: {\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'OK', () => {\r\n                        this.closeModal(modal);\r\n                    }, 'green', 'button');\r\n\r\n                    modal.addEventListener('keydown', (event: KeyboardEvent) => {\r\n                        if (event.key === 'Escape' || event.key === 'Enter') {\r\n                            this.closeModal(modal);\r\n                        }\r\n                    });\r\n\r\n                    break;\r\n                }\r\n                case DialogType.Prompt: {\r\n                    const o = options as PromptDialogOptions;\r\n                    this.appendForm(modal, o);\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            document.body.appendChild(modal);\r\n        }\r\n    }\r\n\r\n    private static appendBtn(container: HTMLDivElement | HTMLFormElement,\r\n                text: string,\r\n                callback: any,\r\n                bgColor: string,\r\n                btnType: 'submit' | 'button' | 'reset') {\r\n        const btn = document.createElement('button') as HTMLButtonElement;\r\n        btn.type = btnType;\r\n        btn.innerText = text;\r\n        btn.classList.add('text');\r\n        btn.classList.add('dialog-btn');\r\n        btn.classList.add(`dialog-btn-${bgColor}`);\r\n        if (btnType === 'button') {\r\n            btn.addEventListener('click', callback);\r\n        }\r\n        container.appendChild(btn);\r\n    }\r\n\r\n    private static appendForm(modal: HTMLDivElement, options: PromptDialogOptions) {\r\n        const inputContainer = document.createElement('div') as HTMLDivElement;\r\n        inputContainer.classList.add('dialog-input-container');\r\n        modal.appendChild(inputContainer);\r\n\r\n        const form = document.createElement('form') as HTMLFormElement;\r\n        inputContainer.appendChild(form);\r\n        form.addEventListener('submit', (event: SubmitEvent) => {\r\n            event.preventDefault();\r\n            options.onOK();\r\n            this.closeModal(modal);\r\n        });\r\n\r\n        this.appendInputs(form, options.inputs);\r\n\r\n        const btnContainer = document.createElement('div') as HTMLDivElement;\r\n        btnContainer.classList.add('dialog-btn-container');\r\n        form.appendChild(btnContainer);\r\n\r\n        this.appendBtn(btnContainer, 'OK', null, 'green', 'submit');\r\n        this.appendBtn(btnContainer, 'Cancel', () => {\r\n            options.onCancel();\r\n            this.closeModal(modal);\r\n        }, 'red', 'button');\r\n    }\r\n\r\n    private static appendInputs(form: HTMLFormElement, inputs: Array<PromptInput>) {\r\n        for (let i: number = 0; i < inputs.length; i++) {\r\n            const input = document.createElement('input') as HTMLInputElement;\r\n            input.type = inputs[i].type;\r\n            input.id = `dialog-input-${inputs[i].name}`;\r\n            input.name = `dialog-input-${inputs[i].name}`;\r\n            input.placeholder = `Enter ${inputs[i].label}`;\r\n            input.maxLength = inputs[i].limit;\r\n            input.classList.add('dialog-input');\r\n            input.classList.add('text');\r\n            input.required = inputs[i].required;\r\n            input.ariaRequired = inputs[i].required.toString();\r\n            form.appendChild(input);\r\n\r\n            this.appendBrElement(form);\r\n            this.appendBrElement(form);\r\n        }\r\n    }\r\n\r\n    private static appendBrElement(container: HTMLDivElement | HTMLFormElement) {\r\n        const br = document.createElement('br') as HTMLBRElement;\r\n        container.appendChild(br);\r\n    }\r\n\r\n    private static appendText(text: Array<string>, container: HTMLDivElement) {\r\n        container.classList.add('text');\r\n        container.classList.add('dialog-text');\r\n        for (let i: number = 0; i < text.length; i++) {\r\n            const p = document.createElement('p') as HTMLParagraphElement;\r\n            p.innerText = text[i];\r\n            container.appendChild(p);\r\n        }\r\n    }\r\n\r\n    private static closeModal(modal: HTMLDivElement) {\r\n        if (document.body.contains(modal)) {\r\n            document.body.removeChild(modal);\r\n        }\r\n    }\r\n\r\n    public static confirm(options: ConfirmationDialogOptions) {\r\n        Dialog.modal(DialogType.Confirmation, options);\r\n    }\r\n\r\n    public static notify(options: DialogOptions) {\r\n        Dialog.modal(DialogType.Notification, options);\r\n    }\r\n\r\n    public static prompt(options: PromptDialogOptions) {\r\n        Dialog.modal(DialogType.Prompt, options);\r\n    }\r\n\r\n    public static closeAllOpenDialogs() {\r\n        const dialogs = document.getElementsByClassName('dialog') as HTMLCollectionOf<HTMLDivElement>;\r\n        for (let i: number = 0; i < dialogs.length; i++) {\r\n            this.closeModal(dialogs[i]);\r\n        }\r\n    }\r\n\r\n}","export enum DialogType {\r\n    Confirmation = 0,\r\n    Notification = 1,\r\n    Prompt = 2\r\n}","export enum DialogIds {\r\n    PlayerNames = 'player-input-dialog',\r\n    ServerError = 'server-error-dialog',\r\n    Instructions = 'instructions-dialog',\r\n    GameEnd = 'game-end-dialog',\r\n    ExitGame = 'exit-game-dialog',\r\n    ContinueGame = 'continue-game-dialog',\r\n    Saved = 'saved-notification-dialog',\r\n}","export enum GameMode {\r\n    SamePC = 1,\r\n    Network = 2\r\n}","export enum Sound {\r\n    LandCoin = './sounds/land-coin.m4a',\r\n    Win = './sounds/win.m4a',\r\n    Lose = './sounds/lose.m4a'\r\n}","import Position from './position';\r\nimport PlayerNameSection from './player-name-section';\r\nimport GameOptions from './game-options';\r\nimport BoardLogic, { Coin, switchTurn } from '@danieldesira/daniels-connect4-common';\r\n\r\nexport default abstract class Game {\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    protected context: CanvasRenderingContext2D;\r\n    protected board: BoardLogic;\r\n\r\n    private exitBtn: HTMLButtonElement;\r\n    protected playerNameSection: PlayerNameSection;\r\n    private gameIndicatorsContainer: HTMLDivElement;\r\n    private gameMenu: HTMLDivElement;\r\n\r\n    protected turn: Coin = Coin.Red;\r\n\r\n    private coinRadius: number;\r\n    private rowGap: number;\r\n    private colGap: number;\r\n    private colOffset: number;\r\n    private static verticalOffset: number = 70;\r\n\r\n    protected currentCoinColumn: number = 4;\r\n    protected static moveLeftKeys: Array<string> = ['a', 'A', 'ArrowLeft'];\r\n    protected static moveRightKeys: Array<string> = ['d', 'D', 'ArrowRight'];\r\n\r\n    protected constructor(options: GameOptions) {\r\n        this.canvas = document.getElementById(options.canvasId) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (options.exitBtnId) {\r\n            this.exitBtn = document.getElementById(options.exitBtnId) as HTMLButtonElement;\r\n        }\r\n\r\n        if (options.playerRedId && options.playerGreenId) {\r\n            this.playerNameSection = new PlayerNameSection(options.playerRedId, options.playerGreenId);\r\n        }\r\n\r\n        if (options.gameIndicatorsId) {\r\n            this.gameIndicatorsContainer = document.getElementById(options.gameIndicatorsId) as HTMLDivElement;\r\n        }\r\n\r\n        if (options.menuId) {\r\n            this.gameMenu = document.getElementById(options.menuId) as HTMLDivElement;\r\n        }\r\n    }\r\n\r\n    protected start() {\r\n        this.showGame();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.initPlayerNames();\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n\r\n        this.resizeCanvas();\r\n        this.setGameEvents();\r\n    }\r\n\r\n    private paintBoard() {\r\n        const boardGradient = this.context.createLinearGradient(0, 0, this.canvas.width, 0);\r\n        boardGradient.addColorStop(0, 'blue');\r\n        boardGradient.addColorStop(1, 'aqua');\r\n        this.context.fillStyle = boardGradient;\r\n        this.context.fillRect(0, Game.verticalOffset, this.canvas.width, this.canvas.height);\r\n\r\n        for (let col = this.board.getColumns() - 1; col >= 0; col--) {\r\n            for (let row = this.board.getRows() - 1; row >= 0; row--) {\r\n                this.context.fillStyle = Game.getColor(this.board.getBoard()[col][row]);\r\n                this.drawCoin(col, row);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        this.canvas.addEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.addEventListener('click', this.canvasClick, false);\r\n        window.addEventListener('beforeunload', this.beforeUnload);\r\n        window.addEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.addEventListener('click', this.exit);\r\n        document.body.addEventListener('keydown', this.handleKeyDown);\r\n        this.canvas.addEventListener('touchmove', this.canvasTouchmove);\r\n    }\r\n\r\n    protected abstract canvasMousemove(event: MouseEvent): void;\r\n    protected abstract canvasClick(event: MouseEvent): void;\r\n    protected abstract handleKeyDown(event: KeyboardEvent): void;\r\n    protected abstract canvasTouchmove(event: TouchEvent): void;\r\n\r\n    protected getColumnFromCursorPosition(event: MouseEvent | Touch): number {\r\n        const position = Position.getCursorPosition(event, this.canvas);\r\n        const column = Math.round((position.x - this.colOffset) / this.colGap);\r\n        return column;\r\n    }\r\n\r\n    protected switchTurn() {\r\n        this.turn = switchTurn(this.turn);\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n    }\r\n\r\n    protected moveCoin() {\r\n        this.clearUpper();\r\n        this.context.fillStyle = Game.getColor(this.turn);\r\n        this.paintCoinToDrop(this.currentCoinColumn);\r\n    }\r\n\r\n    protected landCoin(): number {\r\n        if (this.board.getBoard()[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = this.board.putCoin(this.turn, this.currentCoinColumn);\r\n            \r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.drawCoin(this.currentCoinColumn, row);\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected abstract showWinDialog(winner: string, currentTurn: Coin);\r\n\r\n    protected closeGameAfterWinning() {\r\n        this.cleanUpEvents();\r\n\r\n        if (this.exitBtn) {\r\n            this.exitBtn.classList.add('hide');\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            this.resetValues();\r\n            this.hideGame();\r\n\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.clear();\r\n            }\r\n        }, 3000);\r\n    }\r\n\r\n    protected paintCoinToDrop(column: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, this.coinRadius, this.coinRadius, 0, 2 * Math.PI);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected abstract beforeUnload(event: Event);\r\n\r\n    private clearUpper() {\r\n        this.context.clearRect(0, 0, this.canvas.width, Game.verticalOffset);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        this.canvas.removeEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.removeEventListener('click', this.canvasClick, false);\r\n        window.removeEventListener('beforeunload', this.beforeUnload);\r\n        window.removeEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.removeEventListener('click', this.exit);\r\n        document.body.removeEventListener('keydown', this.handleKeyDown);\r\n        this.canvas.removeEventListener('touchmove', this.canvasTouchmove);\r\n    }\r\n\r\n    protected exit() {\r\n        this.cleanUpEvents();\r\n        this.hideGame();\r\n        this.resetValues();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.clear();\r\n        }\r\n    }\r\n\r\n    private resizeCanvas = () => {\r\n        const topHeight = 100;\r\n\r\n        this.canvas.height = window.innerHeight - topHeight;\r\n        this.canvas.width = window.innerWidth;\r\n\r\n        if (this.canvas.width < 1000) {\r\n            this.coinRadius = 20; // Mobile/tablet\r\n        } else {\r\n            this.coinRadius = 30; // Desktop\r\n        }\r\n\r\n        this.colGap = this.canvas.width / this.board.getColumns();\r\n        this.rowGap = (this.canvas.height - topHeight) / this.board.getRows();\r\n\r\n        this.colOffset = this.colGap / 2;\r\n\r\n        this.paintBoard();\r\n    };\r\n\r\n    protected resetValues() {\r\n        this.turn = Coin.Red;\r\n        this.board.resetBoard();\r\n        \r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.reset();\r\n        }\r\n    }\r\n\r\n    private drawCoin(column: number, row: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, Game.verticalOffset * 2 + row * this.rowGap, this.coinRadius, 0, Math.PI * 2);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected areBothPlayersConnected(): boolean {\r\n        return this.playerNameSection && this.playerNameSection.areBothPlayersConnected();\r\n    }\r\n\r\n    private showGame() {\r\n        this.canvas.classList.remove('hide');\r\n        this.exitBtn.classList.remove('hide');\r\n        this.gameIndicatorsContainer.classList.remove('hide');\r\n        this.gameMenu.classList.add('hide');\r\n    }\r\n\r\n    private hideGame() {\r\n        this.canvas.classList.add('hide');\r\n        this.exitBtn.classList.add('hide');\r\n        this.gameIndicatorsContainer.classList.add('hide');\r\n        this.gameMenu.classList.remove('hide');\r\n    }\r\n\r\n    protected static getColor(color: Coin): string {\r\n        let value: string = '';\r\n        switch (color) {\r\n            case Coin.Empty:\r\n                value = 'lightyellow';\r\n                break;\r\n            case Coin.Red:\r\n                value = 'red';\r\n                break;\r\n            case Coin.Green:\r\n                value = 'greenyellow';\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common/lib/enums/coin\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport Socket from \"./socket\";\r\nimport Utils from \"./utils\";\r\nimport { ActionMessage, BoardDimensions, CurrentTurnMessage, ErrorMessage, GameMessage, InitialMessage, SkipTurnMessage, WinnerMessage, skipTurnMaxWait } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport { getToken } from \"./authentication\";\r\nimport { AuthenticationModel } from \"./models/authentication-model\";\r\nimport { BoardLogic } from \"@danieldesira/daniels-connect4-common/lib/board-logic\";\r\n\r\nexport default class NetworkGame extends Game {\r\n\r\n    private static instance: NetworkGame;\r\n\r\n    private socket: Socket;\r\n    private turnCountDown: number;\r\n    private turnCountDownInterval: number;\r\n    private countdownSpan: HTMLSpanElement;\r\n    private logoutBtn: HTMLButtonElement;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n\r\n        if (options.timerCountdownId) {\r\n            this.countdownSpan = document.getElementById(options.timerCountdownId) as HTMLSpanElement;\r\n        }\r\n\r\n        this.logoutBtn = document.getElementById(options.logoutBtnId) as HTMLButtonElement;\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): NetworkGame {\r\n        if (!NetworkGame.instance) {\r\n            NetworkGame.instance = new NetworkGame(options);\r\n        }\r\n        return NetworkGame.instance;\r\n    }\r\n\r\n    public start(dimensions: BoardDimensions = BoardDimensions.Large) {\r\n        this.board = new BoardLogic(dimensions);\r\n        const auth = getToken();\r\n        if (auth) {\r\n            this.defineSocket(auth);\r\n            this.startCountdown();\r\n            super.start();\r\n            document.body.classList.add('waiting');\r\n            this.disableLogoutBtn();\r\n        } else {\r\n            Dialog.notify({\r\n                title: 'Error',\r\n                text: ['User not logged in!'],\r\n                id: DialogIds.ServerError\r\n            });\r\n        }\r\n    }\r\n\r\n    private defineSocket(auth: AuthenticationModel) {\r\n        this.socket = new Socket(auth);\r\n        this.socket.onMessageCallback = this.onSocketMessage;\r\n        this.socket.onErrorCallback = this.onSocketError;\r\n        this.socket.onGameCancel = this.confirmExit;\r\n    }\r\n\r\n    private onSocketMessage = (messageData: GameMessage) => {\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n            if (this.socket && this.playerNameSection) {\r\n                if (data.opponentName) {\r\n                    this.toggleWaitingClass();\r\n                    if (this.socket.getPlayerColor() === Coin.Red) {\r\n                        this.playerNameSection.setPlayerGreen(data.opponentName);\r\n                    } else if (this.socket.getPlayerColor() === Coin.Green) {\r\n                        this.playerNameSection.setPlayerRed(data.opponentName);\r\n                    }\r\n                }\r\n    \r\n                if (data.playerName) {\r\n                    if (this.socket.getPlayerColor() === Coin.Red) {\r\n                        this.playerNameSection.setPlayerRed(data.playerName);\r\n                    } else if (this.socket.getPlayerColor() === Coin.Green) {\r\n                        this.playerNameSection.setPlayerGreen(data.playerName);\r\n                    }\r\n                }\r\n        \r\n                if (data.color) {\r\n                    if (data.color === Coin.Red) {\r\n                        this.playerNameSection.setPlayerRed(this.socket.getPlayerName());\r\n                    } else {\r\n                        this.playerNameSection.setPlayerGreen(this.socket.getPlayerName());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isActionMessage(messageData)) {\r\n            const data = messageData as ActionMessage;\r\n            if (data.action === 'mousemove') {\r\n                this.currentCoinColumn = data.column;\r\n                this.moveCoin();\r\n            }\r\n    \r\n            if (data.action === 'click') {\r\n                this.turn = data.color;\r\n                this.currentCoinColumn = data.column;\r\n                this.landCoin();\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isSkipTurnMessage(messageData)) {\r\n            const data = messageData as SkipTurnMessage;\r\n            if (data.skipTurn && data.currentTurn) {\r\n                this.turn = data.currentTurn;\r\n                this.turnCountDown = skipTurnMaxWait;\r\n                this.toggleWaitingClass();\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isWinnerMessage(messageData)) {\r\n            const data = messageData as WinnerMessage;\r\n            let winner: string = null;\r\n            if (this.playerNameSection) {\r\n                if (data.winner === Coin.Red) {\r\n                    winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                } else {\r\n                    winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n            }\r\n            this.showWinDialog(winner, data.winner);\r\n\r\n            this.closeGameAfterWinning();\r\n            document.body.classList.remove('waiting');\r\n            this.enableLogoutBtn();\r\n        }\r\n\r\n        if (GameMessage.isTieMessage(messageData)) {\r\n            Dialog.notify({\r\n                id: DialogIds.GameEnd,\r\n                text: ['Game resulted in tie!'],\r\n                title: null\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.enableLogoutBtn();\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isCurrentTurnMessage(messageData)) {\r\n            const data = messageData as CurrentTurnMessage;\r\n            this.turn = data.currentTurn;\r\n            this.toggleWaitingClass();\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.indicateTurn(this.turn);\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isDisconnectMessage(messageData)) {\r\n            Dialog.notify({\r\n                id: DialogIds.GameEnd,\r\n                text: ['Your opponent disconnected. You win!'],\r\n                title: 'We have a winner!'\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.enableLogoutBtn();\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isErrorMessage(messageData)) {\r\n            const data = messageData as ErrorMessage;\r\n            Dialog.closeAllOpenDialogs();\r\n            Dialog.notify({\r\n                id: DialogIds.ServerError,\r\n                text: [data.error],\r\n                title: 'Error'\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.enableLogoutBtn();\r\n            this.closeGameAfterWinning();\r\n        }\r\n    };\r\n\r\n    private onSocketError = () => {\r\n        super.exit();\r\n        this.enableLogoutBtn();\r\n    };\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n        this.stopCountdown();\r\n\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin();\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n            this.socket.send(data);\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'click', this.turn);\r\n            this.socket.send(data);\r\n            \r\n            this.landCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasTouchmove = (event: TouchEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            const firstTouch = event.changedTouches[0];\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(firstTouch);\r\n            this.moveCoin();\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n            this.socket.send(data);\r\n        }\r\n    };\r\n\r\n    protected landCoin(): number {\r\n        if (this.board.getBoard()[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = super.landCoin();\r\n            \r\n            // Assume the game is still going on\r\n            this.switchTurn();\r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.paintCoinToDrop(this.currentCoinColumn);\r\n            Utils.playSound(Sound.LandCoin);\r\n            this.toggleWaitingClass();\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    private toggleWaitingClass() {\r\n        if (this.socket.getPlayerColor() === this.turn) {\r\n            document.body.classList.remove('waiting');\r\n        } else {\r\n            document.body.classList.add('waiting');\r\n        }\r\n    }\r\n\r\n    public exit = () => {\r\n        Dialog.confirm({\r\n            id: DialogIds.ExitGame,\r\n            title: null,\r\n            text: ['Network game in progress. Are you sure you want to quit?'],\r\n            yesCallback: this.confirmExit,\r\n            noCallback: () => {},\r\n            yesColor: 'red',\r\n            noColor: 'green'\r\n        });\r\n    };\r\n\r\n    private confirmExit = () => {\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n        Dialog.closeAllOpenDialogs();\r\n        document.body.classList.remove('waiting');\r\n        this.enableLogoutBtn();\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = (event: Event) => {\r\n        // Display default dialog before closing\r\n        event.preventDefault();\r\n        event.returnValue = false; // Required by Chrome\r\n    };\r\n\r\n    protected showWinDialog(winner: string, currentTurn: Coin) {\r\n        const winMsg: Array<string> = [];\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.socket && this.socket.getPlayerColor() === currentTurn) {\r\n            winMsg.push('You win!');\r\n            Utils.playSound(Sound.Win);\r\n        } else {\r\n            winMsg.push('You lose!');\r\n            Utils.playSound(Sound.Lose);\r\n        }\r\n        Dialog.notify({\r\n            id: DialogIds.GameEnd,\r\n            text: winMsg,\r\n            title: 'Game Ends'\r\n        });\r\n    }\r\n\r\n    protected switchTurn() {\r\n        super.switchTurn();\r\n        this.resetCountdown();\r\n    }\r\n\r\n    private turnCountDownCallback = () => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.turnCountDown--;\r\n            this.countdownSpan.innerText = this.turnCountDown.toString();\r\n            this.adaptCountDownColor();\r\n        }\r\n    };\r\n\r\n    private adaptCountDownColor() {\r\n        if (this.turnCountDown > skipTurnMaxWait / 2) {\r\n            this.countdownSpan.classList.add('green-text');\r\n            this.countdownSpan.classList.remove('red-text');\r\n        } else {\r\n            this.countdownSpan.classList.remove('green-text');\r\n            this.countdownSpan.classList.add('red-text');\r\n        }\r\n    }\r\n\r\n    private startCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n        this.turnCountDownInterval = window.setInterval(this.turnCountDownCallback, 1000);\r\n    }\r\n\r\n    private stopCountdown() {\r\n        clearInterval(this.turnCountDownInterval);\r\n        this.countdownSpan.innerText = '';\r\n    }\r\n\r\n    private resetCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n    }\r\n\r\n    protected handleKeyDown = (event: KeyboardEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            let data: GameMessage;\r\n\r\n            if (Game.moveLeftKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn > 0) {\r\n                    this.currentCoinColumn--;\r\n\r\n                    data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n                    this.socket.send(data);\r\n\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (Game.moveRightKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn < this.board.getColumns() - 1) {\r\n                    this.currentCoinColumn++;\r\n\r\n                    data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n                    this.socket.send(data);\r\n\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (event.key === ' ') {\r\n                data = new ActionMessage(this.currentCoinColumn, 'click', this.turn);\r\n                this.socket.send(data);\r\n\r\n                this.landCoin();\r\n            }\r\n        }\r\n\r\n        if (event.key === 'Escape') {\r\n            this.exit();\r\n        }\r\n    };\r\n\r\n    private disableLogoutBtn() {\r\n        this.logoutBtn.disabled = true;\r\n        this.logoutBtn.ariaDisabled = 'true';\r\n    }\r\n\r\n    private enableLogoutBtn() {\r\n        this.logoutBtn.disabled = false;\r\n        this.logoutBtn.ariaDisabled = 'false';\r\n    }\r\n    \r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common\";\r\n\r\nexport default class PlayerNameSection {\r\n    private playerRedSpan: HTMLSpanElement;\r\n    private playerGreenSpan: HTMLSpanElement;\r\n    private playerRed: string;\r\n    private playerGreen: string;\r\n\r\n    public constructor(playerRedId: string, playerGreenId: string) {\r\n        if (playerRedId) {\r\n            this.playerRedSpan = document.getElementById(playerRedId);\r\n        }\r\n\r\n        if (playerGreenId) {\r\n            this.playerGreenSpan = document.getElementById(playerGreenId);\r\n        }\r\n    }\r\n\r\n    public initPlayerNames() {\r\n        const waiting = 'Waiting to connect...';\r\n        if (this.playerGreenSpan && !this.playerGreen) {\r\n            this.playerGreenSpan.innerText = waiting;\r\n        }\r\n        if (this.playerRedSpan && !this.playerRed) {\r\n            this.playerRedSpan.innerText = waiting;\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = '';\r\n        }\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = '';\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.playerRed = null;\r\n        this.playerGreen = null;\r\n    }\r\n\r\n    public getPlayerRed = (): string => this.playerRed;\r\n    public getPlayerGreen = (): string => this.playerGreen;\r\n    public areBothPlayersConnected = (): boolean => !!this.playerRed && !!this.playerGreen;\r\n\r\n    public setPlayerRed(playerName: string) {\r\n        this.playerRed = playerName;\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = this.playerRed;\r\n        }\r\n    }\r\n\r\n    public setPlayerGreen(playerName: string) {\r\n        this.playerGreen = playerName;\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = this.playerGreen;\r\n        }\r\n    }\r\n\r\n    public indicateTurn(turn: Coin) {\r\n        if (turn === Coin.Red) {\r\n            this.playerRedSpan.classList.add('currentTurn');\r\n            this.playerGreenSpan.classList.remove('currentTurn');\r\n        } else {\r\n            this.playerGreenSpan.classList.add('currentTurn');\r\n            this.playerRedSpan.classList.remove('currentTurn');\r\n        }\r\n    }\r\n\r\n}","export default class Position {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public static getCursorPosition(event: MouseEvent | Touch, canvas: HTMLCanvasElement): Position {\r\n        let x: number;\r\n        let y: number;\r\n        if (event.pageX !== undefined || event.pageY !== undefined) {\r\n            x = event.pageX;\r\n            y = event.pageY;\r\n        }\r\n        else {\r\n            x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n        }\r\n        x -= canvas.offsetLeft;\r\n        y -= canvas.offsetTop;\r\n        return new Position(x, y);\r\n    }\r\n}","import Dialog from \"./dialog/dialog\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Utils from \"./utils\";\r\nimport Timer from \"./timer\";\r\nimport { BoardDimensions, Coin, randomiseColor } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport PreviousGameData, { MainGameDataModel } from \"./models/previous-game-data\";\r\nimport { BoardLogic } from \"@danieldesira/daniels-connect4-common/lib/board-logic\";\r\n\r\nexport default class SameDeviceGame extends Game {\r\n\r\n    private static instance: SameDeviceGame;\r\n    private timer: Timer;\r\n    private dimensions: BoardDimensions;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n\r\n        if (options.timerCountdownId) {\r\n            this.timer = new Timer(options.timerCountdownId);\r\n        }\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): SameDeviceGame {\r\n        if (!SameDeviceGame.instance) {\r\n            SameDeviceGame.instance = new SameDeviceGame(options);\r\n        }\r\n        return SameDeviceGame.instance;\r\n    }\r\n\r\n    private setTimer = () => {\r\n        if (this.timer) {\r\n            this.timer.set();\r\n        }\r\n    }\r\n\r\n    public start(dimensions: BoardDimensions = BoardDimensions.Large) {\r\n        this.dimensions = dimensions;\r\n        this.board = new BoardLogic(dimensions);\r\n        this.checkGameData();\r\n    }\r\n\r\n    private onGameDataCheck() {\r\n        this.setUpPlayerNames();\r\n        \r\n        if (this.areBothPlayersConnected()) {\r\n            this.setTimer();\r\n        }\r\n\r\n        super.start();\r\n    }\r\n\r\n    private setUpPlayerNames() {\r\n        const gameData = JSON.parse(localStorage.getItem('gameData')) as MainGameDataModel;\r\n        const dimensionData = this.getGameDimensionData(gameData);\r\n\r\n        const onPromptOK = () => {\r\n            const redInput = document.getElementById('dialog-input-red') as HTMLInputElement;\r\n            const greenInput = document.getElementById('dialog-input-green') as HTMLInputElement;\r\n            if (redInput.value && greenInput.value && redInput.value.trim()\r\n                    && greenInput.value.trim() && this.playerNameSection) {\r\n                this.playerNameSection.setPlayerRed(redInput.value);\r\n                this.playerNameSection.setPlayerGreen(greenInput.value);\r\n                this.setTimer();\r\n            }\r\n        };\r\n\r\n        if (!dimensionData) {\r\n            Dialog.prompt({\r\n                id: DialogIds.PlayerNames,\r\n                title: 'Input Players',\r\n                text: ['Please enter player names! (10 characters or less.)'],\r\n                onOK: () => onPromptOK(),\r\n                onCancel: this.exit,\r\n                inputs: [\r\n                    {\r\n                        label: 'Player Red',\r\n                        name: 'red',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    },\r\n                    {\r\n                        label: 'Player Green',\r\n                        name: 'green',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }\r\n\r\n    private checkGameData() {\r\n        const gameData = JSON.parse(localStorage.getItem('gameData')) as MainGameDataModel;\r\n        const dimensionData = this.getGameDimensionData(gameData);\r\n        \r\n        if (dimensionData) {\r\n            Dialog.confirm({\r\n                id: DialogIds.ContinueGame,\r\n                title: null,\r\n                text: ['Do you want to continue playing the previous game?'],\r\n                yesCallback: this.continuePreviousGame,\r\n                noCallback: this.cancelPreviousGame,\r\n                yesColor: 'green',\r\n                noColor: 'red'\r\n            });\r\n        } else {\r\n            this.turn = randomiseColor();\r\n            this.onGameDataCheck();\r\n        }\r\n    }\r\n\r\n    private continuePreviousGame = () => {\r\n        this.restoreLastGame();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private cancelPreviousGame = () => {\r\n        this.clearGameData();\r\n        this.turn = randomiseColor();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private restoreLastGame() {\r\n        const gameData = JSON.parse(localStorage.getItem('gameData')) as MainGameDataModel;\r\n        const dimensionData = this.getGameDimensionData(gameData);\r\n        \r\n        this.turn = dimensionData.nextTurn;\r\n        this.board.setBoard(dimensionData.board);\r\n\r\n        if (this.timer) {\r\n            this.timer.setSecondsRunning(dimensionData.secondsRunning);\r\n        }\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.setPlayerGreen(dimensionData.playerGreen);\r\n            this.playerNameSection.setPlayerRed(dimensionData.playerRed);\r\n        }\r\n    }\r\n\r\n    private saveGame() {\r\n        if (this.areBothPlayersConnected()) {\r\n            let gameData = JSON.parse(localStorage.getItem('gameData')) as MainGameDataModel;\r\n            if (!gameData) {\r\n                gameData = {\r\n                    small: null,\r\n                    medium: null,\r\n                    large: null\r\n                };\r\n            }\r\n            const dimensionData: PreviousGameData = {\r\n                nextTurn: this.turn,\r\n                board: this.board.getBoard(),\r\n                secondsRunning: this.timer?.getSecondsRunning(),\r\n                playerRed: this.playerNameSection?.getPlayerRed(),\r\n                playerGreen: this.playerNameSection?.getPlayerGreen()\r\n            };\r\n            switch (this.dimensions) {\r\n                case BoardDimensions.Small:\r\n                    gameData.small = dimensionData;\r\n                    break;\r\n                case BoardDimensions.Medium:\r\n                    gameData.medium = dimensionData;\r\n                    break;\r\n                case BoardDimensions.Large:\r\n                    gameData.large = dimensionData;\r\n                    break;\r\n            }\r\n            localStorage.setItem('gameData', JSON.stringify(gameData));\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.landCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasTouchmove = (event: TouchEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            const firstTouch = event.changedTouches[0];\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(firstTouch);\r\n            this.moveCoin();\r\n        }\r\n    };\r\n\r\n    public exit = () => {\r\n        this.saveGame();\r\n        Dialog.closeAllOpenDialogs();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = () => {\r\n        this.saveGame();\r\n    }\r\n\r\n    private pageVisibilityChange = () => {\r\n        if (this.timer) {\r\n            this.timer.pauseWhenDocumentHidden();\r\n        }\r\n    };\r\n\r\n    protected closeGameAfterWinning() {\r\n        this.clearGameData();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.closeGameAfterWinning();\r\n    }\r\n\r\n    protected landCoin(): number {\r\n        if (this.board.getBoard()[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = super.landCoin();\r\n            \r\n            const coinCount = this.board.countConsecutiveCoins(this.currentCoinColumn, row, this.turn);\r\n\r\n            if (coinCount >= 4) {\r\n                let winner: string = '';\r\n\r\n                if (this.playerNameSection) {\r\n                    if (this.turn === Coin.Red) {\r\n                        winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                    } else if (this.turn === Coin.Green) {\r\n                        winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                    }\r\n                }\r\n\r\n                this.showWinDialog(winner, this.turn);\r\n                this.closeGameAfterWinning();\r\n            } else if (this.board.isBoardFull()) {\r\n                let message: string = '';\r\n                if (this.playerNameSection) {\r\n                    message += `${this.playerNameSection.getPlayerRed()} (Red) and ${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n                message += ' are tied!';\r\n                Dialog.notify({\r\n                    id: DialogIds.GameEnd,\r\n                    title: 'Tie',\r\n                    text: [message]\r\n                });\r\n                this.closeGameAfterWinning();\r\n            } else { // If game is still going on\r\n                this.switchTurn();\r\n                this.context.fillStyle = Game.getColor(this.turn);\r\n                this.paintCoinToDrop(this.currentCoinColumn);\r\n                Utils.playSound(Sound.LandCoin);\r\n            }\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        super.setGameEvents();\r\n        document.addEventListener('visibilitychange', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        super.cleanUpEvents();\r\n        document.removeEventListener('changevisibility', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected showWinDialog(winner: string, _: Coin) {\r\n        const winMsg: Array<string> = new Array();\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.timer) {\r\n            winMsg.push(`Time taken: ${this.timer.getTimeInStringFormat()}`);\r\n        }\r\n        Utils.playSound(Sound.Win);\r\n        Dialog.notify({\r\n            id: DialogIds.GameEnd,\r\n            text: winMsg,\r\n            title: 'We have a winner!'\r\n        });\r\n    }\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n\r\n        if (this.timer) {\r\n            this.timer.reset();\r\n        }\r\n    }\r\n\r\n    protected handleKeyDown = (event: KeyboardEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            if (Game.moveLeftKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn > 0) {\r\n                    this.currentCoinColumn--;\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (Game.moveRightKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn < this.board.getColumns() - 1) {\r\n                    this.currentCoinColumn++;\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (event.key === ' ') {\r\n                this.landCoin();\r\n            }\r\n        }\r\n\r\n        if (event.key === 'Escape') {\r\n            this.exit();\r\n        }\r\n    };\r\n\r\n    private clearGameData() {\r\n        const gameData = JSON.parse(localStorage.getItem('gameData')) as MainGameDataModel;\r\n        switch (this.dimensions) {\r\n            case BoardDimensions.Small:\r\n                gameData.small = null;\r\n                break;\r\n            case BoardDimensions.Medium:\r\n                gameData.medium = null;\r\n                break;\r\n            case BoardDimensions.Large:\r\n                gameData.large = null;\r\n                break;\r\n        }\r\n        localStorage.setItem('gameData', JSON.stringify(gameData));\r\n    }\r\n\r\n    private getGameDimensionData(gameData: MainGameDataModel): PreviousGameData | null {\r\n        let dimensionData: PreviousGameData = null;\r\n        if (gameData) {\r\n            switch (this.dimensions) {\r\n                case BoardDimensions.Small:\r\n                    dimensionData = gameData.small;\r\n                    break;\r\n                case BoardDimensions.Medium:\r\n                    dimensionData = gameData.medium;\r\n                    break;\r\n                case BoardDimensions.Large:\r\n                    dimensionData = gameData.large;\r\n                    break;\r\n            }\r\n        }\r\n        return dimensionData;\r\n    }\r\n\r\n}","import { getToken } from \"./authentication\";\r\nimport config from \"./config\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport { AuthenticationModel } from \"./models/authentication-model\";\r\nimport { Coin, GameMessage, InitialMessage } from \"@danieldesira/daniels-connect4-common\";\r\n\r\nexport default class Socket {\r\n    private webSocket: WebSocket;\r\n    private playerColor: Coin;\r\n    private playerName: string;\r\n    private gameId: number;\r\n    public onMessageCallback: Function;\r\n    public onErrorCallback: Function;\r\n    public onGameCancel: Function;\r\n\r\n    public constructor(auth: AuthenticationModel) {\r\n        this.connect(auth);\r\n    }\r\n\r\n    private connect(auth: AuthenticationModel) {\r\n        let url: string = `${config.wsServer}?token=${auth.token}&service=${auth.service}`;\r\n\r\n        if (this.playerColor && !isNaN(this.gameId)) {\r\n            url += `&playerColor=${this.playerColor}&gameId=${this.gameId}`;\r\n        }\r\n\r\n        this.webSocket = new WebSocket(url);\r\n\r\n        this.webSocket.onmessage = this.onMessage;\r\n        this.webSocket.onerror = this.onError;\r\n        this.webSocket.onclose = this.onClose;\r\n    }\r\n\r\n    public send = (data: GameMessage) => this.webSocket.send(JSON.stringify(data));\r\n\r\n    public close() {\r\n        this.webSocket.onclose = null;\r\n        this.webSocket.onmessage = null;\r\n        this.webSocket.onerror = null;\r\n        this.webSocket.close();\r\n    }\r\n\r\n    public getPlayerColor = (): Coin => this.playerColor;\r\n    public getPlayerName = (): string => this.playerName;\r\n\r\n    private onMessage = (event: MessageEvent) => {\r\n        const messageData: GameMessage = JSON.parse(event.data);\r\n\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n\r\n            if (!this.gameId) {\r\n                this.gameId = data.gameId;\r\n            }\r\n\r\n            if (!this.playerName) {\r\n                this.playerName = data.playerName;\r\n            }\r\n            \r\n            if (!this.playerColor) {\r\n                this.playerColor = data.color;\r\n            }\r\n        }\r\n\r\n        if (this.onMessageCallback) {\r\n            this.onMessageCallback(messageData);\r\n        }\r\n    };\r\n\r\n    private onError = () => {\r\n        this.onErrorCallback();\r\n        Dialog.closeAllOpenDialogs();\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            text: ['Problem connecting to server!'],\r\n            title: 'Error'\r\n        });\r\n\r\n        document.body.classList.remove('waiting');\r\n    };\r\n\r\n    private onClose = () => {\r\n        const auth = getToken();\r\n        if (auth) {\r\n            this.connect(auth);\r\n        }\r\n    };\r\n}","export default class Timer {\r\n\r\n    private secondsRunning: number;\r\n    private interval: number;\r\n    private timerSpan: HTMLSpanElement;\r\n\r\n    public constructor(timerId: string) {\r\n        this.timerSpan = document.getElementById(timerId) as HTMLSpanElement;\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n    private timerCallback = () => {\r\n        this.secondsRunning++;\r\n        const minutes: number = Math.floor(this.secondsRunning / 60);\r\n        const seconds: number = this.secondsRunning % 60;\r\n        this.timerSpan.innerText = `${minutes}:${(seconds < 10 ? '0' : '')}${seconds}`;\r\n        \r\n        if (this.timerSpan.classList.contains('hide')) {\r\n            clearInterval(this.interval);\r\n        }\r\n    };\r\n\r\n    public set() {\r\n        if (this.timerSpan) {\r\n            this.timerSpan.classList.remove('hide');\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public stop() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.timerSpan.innerText = '';\r\n            this.timerSpan.classList.add('hide');\r\n        }\r\n    }\r\n\r\n    public pauseWhenDocumentHidden() {\r\n        if (document.hidden) {\r\n            clearInterval(this.interval);\r\n        } else {\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public getTimeInStringFormat(): string {\r\n        if (this.timerSpan) {\r\n            return this.timerSpan.innerText;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    \r\n    public setSecondsRunning(secondsRunning: number) {\r\n        this.secondsRunning = secondsRunning;\r\n    }\r\n\r\n    public getSecondsRunning = () => this.secondsRunning;   \r\n\r\n    public reset() {\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n}","export default class Utils {\r\n    public static isLocal(): boolean {\r\n        return location.protocol === 'file:'\r\n            || location.hostname === 'localhost';\r\n    }\r\n\r\n    public static playSound(path: string) {\r\n        let audio = new Audio(path);\r\n        audio.play();\r\n    }\r\n}","import { BoardDimensions } from \"@danieldesira/daniels-connect4-common\";\r\nimport { initGoogleSSO, loadStats, logout, showLoginLogout, updatePlayerDimensions } from \"./lib/authentication\";\r\nimport Dialog from \"./lib/dialog/dialog\";\r\nimport { DialogIds } from \"./lib/enums/dialog-ids\";\r\nimport { GameMode } from \"./lib/enums/game-mode\";\r\nimport GameOptions from \"./lib/game-options\";\r\nimport NetworkGame from \"./lib/network-game\";\r\nimport SameDeviceGame from \"./lib/same-device-game\";\r\n\r\nconst samePCBtn = document.getElementById('samePC') as HTMLButtonElement;\r\nconst networkBtn = document.getElementById('network') as HTMLButtonElement;\r\nconst instructionsBtn = document.getElementById('instructions') as HTMLButtonElement;\r\n\r\nsamePCBtn.addEventListener('click', () => {\r\n    initGame(GameMode.SamePC);\r\n}, false);\r\n\r\nnetworkBtn.addEventListener('click', () => {\r\n    initGame(GameMode.Network);\r\n}, false);\r\n\r\nfunction initGame(mode: GameMode) {\r\n    try {\r\n        const dimensions = parseInt(dimensionsSelect.options[dimensionsSelect.selectedIndex].value) as BoardDimensions;\r\n\r\n        const options: GameOptions = {\r\n            canvasId: 'board',\r\n            exitBtnId: 'exitBtn',\r\n            timerCountdownId: 'timer',\r\n            playerRedId: 'playerRed',\r\n            playerGreenId: 'playerGreen',\r\n            menuId: 'menu',\r\n            gameIndicatorsId: 'gameIndicators',\r\n            logoutBtnId: 'logout'\r\n        };\r\n        if (mode === GameMode.Network) {\r\n            const connect4 = NetworkGame.getInstance(options);\r\n            connect4.start(dimensions);\r\n        } else {\r\n            const connect4 = SameDeviceGame.getInstance(options);\r\n            connect4.start(dimensions);\r\n        }\r\n    } catch (ex) {\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            title: 'Error',\r\n            text: ['Problem encountered!']\r\n        });\r\n        console.error(ex);\r\n    }\r\n}\r\n\r\ninstructionsBtn.addEventListener('click', () => {\r\n    const text = [\r\n        'The principle behind Connect4 is simple:',\r\n        'The player who first places 4 coins next to each other, wins. You may ' +\r\n            'match horizontally, vertically or diagonally.',\r\n        'Furthermore, in Network Play, you must place your coin within 60 seconds. ' +\r\n            'If you fail to do so, you pass the turn to your opponent.',\r\n        'Further note that exiting in Same Device Play, saves game progress. You ' +\r\n            'will be presented with the option to continue the same game the next ' +\r\n            'time. This does not work for Network Play because your opponent might ' +\r\n            'not be available the next time and you might not even know him/her/them.',\r\n        'Good luck and have fun playing!'\r\n    ];\r\n    Dialog.notify({\r\n        id: DialogIds.Instructions,\r\n        text,\r\n        title: 'Instructions'\r\n    });\r\n}, false);\r\n\r\nconst shareBtn = document.getElementById('shareBtn') as HTMLAnchorElement;\r\nshareBtn.addEventListener('click', (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    if (navigator.canShare) {\r\n        const shareData = {\r\n            url: location.href,\r\n            title: `Daniel's Connect4`\r\n        };\r\n        navigator.share(shareData)\r\n            .catch((err) => console.error(`Problem while sharing: ${err}`));\r\n    } else {\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            title: 'Error',\r\n            text: ['Problem opening share menu!']\r\n        });\r\n    }\r\n});\r\n\r\nconst googleSignonBtn = document.getElementById('googleSignon') as HTMLButtonElement;\r\ngoogleSignonBtn.addEventListener('click', initGoogleSSO);\r\n\r\n(async () => {\r\n    await showLoginLogout();\r\n})();\r\n\r\nconst logoutBtn = document.getElementById('logout') as HTMLButtonElement;\r\nlogoutBtn.addEventListener('click', logout);\r\n\r\nconst statsBtn = document.getElementById('stats') as HTMLButtonElement;\r\nstatsBtn.addEventListener('click', async () => {\r\n    await loadStats();\r\n});\r\n\r\nconst dimensionsSelect = document.getElementById('dimensions') as HTMLSelectElement;\r\ndimensionsSelect.addEventListener('change', async () => {\r\n    const dimensions = parseInt(dimensionsSelect.value) as BoardDimensions;\r\n    await updatePlayerDimensions(dimensions);\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(519);\n"],"names":["Object","defineProperty","exports","value","BoardLogic","constants_1","coin_1","dimensions_1","dim","_this","this","board","getColumns","columns","getRows","rows","getBoard","resetBoard","initBoard","BoardDimensions","Small","dimensions","small","Medium","medium","Large","large","prototype","Array","col","row","Coin","Empty","countConsecutiveCoins","column","currentTurn","count","coinCount","rowCount","colCount","isBoardFull","full","putCoin","color","setBoard","setBoardItem","coin","skipTurnMaxWait","switchTurn","randomiseColor","WinnerMessage","TieMessage","SkipTurnMessage","InitialMessage","GameMessage","ErrorMessage","DisconnectMessage","CurrentTurnMessage","ActionMessage","board_logic_1","enumerable","get","action_message_1","current_turn_message_1","disconnect_message_1","error_message_1","game_message_1","initial_message_1","skip_turn_message_1","tie_message_1","winner_message_1","player_turn_1","extendStatics","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","TypeError","String","__","constructor","create","_super","action","hardDisconnect","error","isInitialMessage","msg","isNaN","isInactivityMessage","isActionMessage","isSkipTurnMessage","isWinnerMessage","isTieMessage","isCurrentTurnMessage","isDisconnectMessage","isErrorMessage","gameId","playerName","opponentName","skipTurn","tie","winner","Math","floor","random","Red","Green","handleGoogleSignon","response","data","token","service","localStorage","setItem","JSON","stringify","showLoginLogout","loginBtns","document","getElementById","loggedInArea","getItem","classList","add","remove","loadUserData","innerText","logout","removeItem","getToken","val","parse","auth","fetch","httpServer","json","isTokenValid","user","src","picUrl","dimensionOption","querySelector","ariaSelected","selected","wins","winPercent","toFixed","losses","lossPercent","window","google","accounts","id","initialize","client_id","callback","prompt","params","method","headers","body","status","notify","title","text","DialogIds","Saved","config","isLocal","wsServer","modal","type","options","createElement","tabIndex","h1","appendChild","textContainer","appendText","DialogType","Confirmation","btnContainer","appendBtn","yesCallback","closeModal","yesColor","noCallback","noColor","Notification","addEventListener","event","key","Prompt","o","appendForm","container","bgColor","btnType","btn","inputContainer","form","preventDefault","onOK","appendInputs","inputs","onCancel","i","length","input","name","placeholder","label","maxLength","limit","required","ariaRequired","toString","appendBrElement","br","contains","removeChild","confirm","Dialog","closeAllOpenDialogs","dialogs","getElementsByClassName","GameMode","Sound","turn","currentCoinColumn","resizeCanvas","canvas","height","innerHeight","width","innerWidth","coinRadius","colGap","rowGap","colOffset","paintBoard","canvasId","context","getContext","exitBtnId","exitBtn","playerRedId","playerGreenId","playerNameSection","gameIndicatorsId","gameIndicatorsContainer","menuId","gameMenu","start","showGame","initPlayerNames","indicateTurn","setGameEvents","boardGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Game","verticalOffset","getColor","drawCoin","canvasMousemove","canvasClick","beforeUnload","exit","handleKeyDown","canvasTouchmove","getColumnFromCursorPosition","position","getCursorPosition","round","x","moveCoin","clearUpper","paintCoinToDrop","landCoin","closeGameAfterWinning","cleanUpEvents","setTimeout","resetValues","hideGame","clear","beginPath","arc","PI","closePath","fill","clearRect","removeEventListener","reset","areBothPlayersConnected","moveLeftKeys","moveRightKeys","onSocketMessage","messageData","socket","toggleWaitingClass","getPlayerColor","setPlayerGreen","setPlayerRed","getPlayerName","turnCountDown","getPlayerRed","getPlayerGreen","showWinDialog","enableLogoutBtn","GameEnd","ServerError","onSocketError","send","firstTouch","changedTouches","ExitGame","confirmExit","close","returnValue","turnCountDownCallback","countdownSpan","adaptCountDownColor","includes","timerCountdownId","logoutBtn","logoutBtnId","getInstance","NetworkGame","instance","defineSocket","startCountdown","disableLogoutBtn","onMessageCallback","onErrorCallback","onGameCancel","stopCountdown","playSound","LandCoin","winMsg","push","Win","Lose","resetCountdown","turnCountDownInterval","setInterval","clearInterval","disabled","ariaDisabled","playerRed","playerGreen","playerRedSpan","playerGreenSpan","waiting","y","undefined","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","Position","offsetLeft","offsetTop","setTimer","timer","set","continuePreviousGame","restoreLastGame","onGameDataCheck","cancelPreviousGame","clearGameData","saveGame","stop","pageVisibilityChange","pauseWhenDocumentHidden","SameDeviceGame","checkGameData","setUpPlayerNames","gameData","getGameDimensionData","PlayerNames","redInput","greenInput","trim","ContinueGame","dimensionData","nextTurn","setSecondsRunning","secondsRunning","getSecondsRunning","message","_","getTimeInStringFormat","webSocket","playerColor","onMessage","onError","onClose","connect","url","WebSocket","onmessage","onerror","onclose","timerId","timerCallback","minutes","seconds","timerSpan","interval","hidden","location","protocol","hostname","path","Audio","play","samePCBtn","networkBtn","instructionsBtn","initGame","mode","parseInt","dimensionsSelect","selectedIndex","Network","ex","console","SamePC","Instructions","navigator","canShare","shareData","href","share","catch","err","initGoogleSSO","loadStats","updatePlayerDimensions","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__"],"sourceRoot":""}