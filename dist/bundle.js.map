{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./src/lib/enums/dot.ts","webpack:///./src/lib/enums/game-mode.ts","webpack:///./src/lib/enums/sound.ts","webpack:///./src/lib/game.ts","webpack:///./src/lib/position.ts","webpack:///./src/lib/socket.ts","webpack:///./src/lib/utils.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["export enum Dot {\r\n    Empty = 'black',\r\n    Red = 'red',\r\n    Green = 'greenyellow'\r\n}","export enum GameMode {\r\n    SamePC = 1,\r\n    Network = 2\r\n}","export enum Sound {\r\n    LandDot = './sounds/land-dot.m4a',\r\n    Win = './sounds/win.m4a',\r\n    Lose = './sounds/lose.m4a'\r\n}","import { GameMode } from './enums/game-mode';\r\nimport { Dot } from './enums/dot';\r\nimport { Position } from './position';\r\nimport { Utils } from './utils';\r\nimport { Socket } from './socket';\r\nimport { Sound } from './enums/sound';\r\n\r\nexport class Game {\r\n\r\n    private static instance: Game;\r\n\r\n    private static columns: number = 9;\r\n    private static rows: number = 8;\r\n\r\n    private canvas: any;\r\n    private context: any;\r\n    private board: Array<Array<Dot>> = new Array(Game.columns);\r\n\r\n    private exitBtn: any;\r\n    private timerSpan: any;\r\n    private playerRedSpan: any;\r\n    private playerGreenSpan: any;\r\n\r\n    private turn: Dot = Dot.Red;\r\n\r\n    private playerRed: string;\r\n    private playerGreen: string;\r\n\r\n    public mode: GameMode;\r\n    public onGameEnd: Function;\r\n\r\n    private secondsRunning: number;\r\n    private timeout: any;\r\n\r\n    private circleRadius: number;\r\n    private rowGap: number;\r\n    private colGap: number;\r\n\r\n    private socket: Socket;\r\n\r\n    private constructor(canvasId: string,\r\n                exitBtnId: string,\r\n                timerId: string,\r\n                playerRedId: string,\r\n                playerGreenId: string) {\r\n        this.canvas = document.getElementById(canvasId);\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        this.initBoard();\r\n\r\n        if (exitBtnId !== null) {\r\n            this.exitBtn = document.getElementById(exitBtnId);\r\n        }\r\n\r\n        if (timerId !== null) {\r\n            this.timerSpan = document.getElementById(timerId);\r\n            this.secondsRunning = 0;\r\n        }\r\n\r\n        if (playerRedId !== null) {\r\n            this.playerRedSpan = document.getElementById(playerRedId);\r\n        }\r\n\r\n        if (playerGreenId !== null) {\r\n            this.playerGreenSpan = document.getElementById(playerGreenId);\r\n        }\r\n    }\r\n\r\n    public static getInstance(canvasId: string,\r\n                exitBtnId: string = null,\r\n                timerId: string = null,\r\n                playerRedId: string = null,\r\n                playerGreenId: string = null): Game {\r\n        if (!Game.instance) {\r\n            Game.instance = new Game(canvasId, exitBtnId, timerId, playerRedId, playerGreenId);\r\n        }\r\n        return Game.instance;\r\n    }\r\n\r\n    private initBoard() {\r\n        for (let col = 0; col < Game.columns; col++) {\r\n            this.board[col] = new Array(Game.rows);\r\n            for (let row = 0; row < Game.rows; row++){\r\n                this.board[col][row] = Dot.Empty;\r\n            }\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        if (this.mode === GameMode.SamePC) {\r\n            this.checkGameData();\r\n            this.setUpPlayerNames();\r\n        } else if (this.mode === GameMode.Network) {\r\n            this.defineSocket();\r\n        }\r\n        \r\n        this.printPlayerNames();\r\n        this.resizeCanvas();\r\n        this.setGameEvents();\r\n        this.setTimer();\r\n    }\r\n\r\n    private checkGameData() {\r\n        let board = localStorage.getItem('board');\r\n        let nextTurn = localStorage.getItem('nextTurn');\r\n        \r\n        if (board && nextTurn) {\r\n            let restore = confirm('Do you want to continue playing the previous game? OK/Cancel');\r\n            if (restore) {\r\n                this.restoreLastGame();\r\n            } else {\r\n                localStorage.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    private setUpPlayerNames() {\r\n        if (!localStorage.getItem('playerRed') || !localStorage.getItem('playerGreen')) {\r\n            this.playerRed = prompt('Please enter name for Red Player!');\r\n            this.playerGreen = prompt('Please enter name for Green Player!');\r\n        }\r\n    }\r\n\r\n    private printPlayerNames() {\r\n        const waiting = 'Waiting to connect...';\r\n        if (this.playerGreenSpan) {\r\n            if (this.mode === GameMode.Network && !this.playerGreen) {\r\n                this.playerGreenSpan.innerText = waiting;\r\n            } else {\r\n                this.playerGreenSpan.innerText = this.playerGreen;\r\n            }\r\n        }\r\n        if (this.playerRedSpan) {\r\n            if (this.mode === GameMode.Network && !this.playerRed) {\r\n                this.playerRedSpan.innerText = waiting;\r\n            } else {\r\n                this.playerRedSpan.innerText = this.playerRed;\r\n            }\r\n        }\r\n    }\r\n\r\n    private paintBoard() {\r\n        let boardGradient = this.context.createLinearGradient(0, 0, this.canvas.width, 0);\r\n        boardGradient.addColorStop(0, 'blue');\r\n        boardGradient.addColorStop(1, 'aqua');\r\n        this.context.fillStyle = boardGradient;\r\n        this.context.fillRect(0, 70, this.canvas.width, this.canvas.height);\r\n\r\n        for (let col = Game.columns - 1; col >= 0; col--) {\r\n            for (let row = Game.rows - 1; row >= 0; row--) {\r\n                this.context.fillStyle = this.board[col][row];\r\n\r\n                this.context.beginPath();\r\n                this.context.arc(50 + col * this.colGap, 150 + row * this.rowGap, this.circleRadius, 0, 2 * Math.PI);\r\n                this.context.closePath();\r\n                this.context.fill();\r\n            }\r\n        }\r\n    }\r\n\r\n    private setGameEvents() {\r\n        this.canvas.addEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.addEventListener('click', this.canvasClick, false);\r\n        window.addEventListener('beforeunload', this.beforeUnload);\r\n        window.addEventListener('resize', this.resizeCanvas);\r\n        document.addEventListener('visibilitychange', this.pageVisibilityChange);\r\n    }\r\n\r\n    private canvasMousemove = (event) => {\r\n        if (this.mode === GameMode.SamePC || (this.socket && this.turn === this.socket.getPlayerColor() && this.opponentConnected())) {\r\n            let position: Position = Position.getCursorPosition(event, this.canvas);\r\n            let column = Math.round((position.x - 50) / this.colGap);\r\n            this.moveDot(column);\r\n\r\n            if (this.mode === GameMode.Network && this.socket) {\r\n                let data = {\r\n                    action: 'mousemove',\r\n                    column: column\r\n                };\r\n                this.socket.send(data);\r\n            }\r\n        }\r\n    };\r\n\r\n    private canvasClick = (event) => {\r\n        if (this.mode === GameMode.SamePC || (this.socket && this.turn === this.socket.getPlayerColor() && this.opponentConnected())) {\r\n            let position = Position.getCursorPosition(event, this.canvas);\r\n            let column = Math.round((position.x - 50) / this.colGap);\r\n            this.landDot(column);\r\n\r\n            if (this.mode === GameMode.Network && this.socket) {\r\n                let data = {\r\n                    action: 'click',\r\n                    column: column\r\n                };\r\n                this.socket.send(data);\r\n            }\r\n        }\r\n    };\r\n\r\n    private switchTurn() {\r\n        if (this.turn === Dot.Red) {\r\n            this.turn = Dot.Green;\r\n        } else if (this.turn === Dot.Green) {\r\n            this.turn = Dot.Red;\r\n        }\r\n    }\r\n\r\n    private moveDot(column: number) {\r\n        this.clearUpper();\r\n        this.context.fillStyle = this.turn;\r\n        this.paintDotToDrop(column);\r\n    }\r\n\r\n    private landDot(column: number) {\r\n        let row: number;\r\n\r\n        if (this.board[column][0] === Dot.Empty) {\r\n\r\n            // Places the circle at the buttom of the column\r\n            for (var r = Game.rows - 1; r > -1; r--) {\r\n                if (this.board[column][r] === Dot.Empty) {\r\n                    this.board[column][r] = this.turn;\r\n                    row = r;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            this.context.fillStyle = this.turn;\r\n            \r\n            // Draws the circle at the appropriate position\r\n            this.context.beginPath();\r\n            this.context.arc(50 + column * this.colGap, 150 + r * this.rowGap, this.circleRadius, 0, Math.PI * 2);\r\n            this.context.closePath();\r\n            this.context.fill();\r\n            \r\n            let dotCount = this.checkDotCount(column, row);\r\n\r\n            if (dotCount > 3) { // If a player completes 4 dots\r\n                let winner: string = '';\r\n                if (this.turn === Dot.Red) {\r\n                    winner = this.playerRed + ' (Red)';\r\n                } else if (this.turn === Dot.Green) {\r\n                    winner = this.playerGreen + ' (Green)';\r\n                }\r\n\r\n                this.winDialog(winner);\r\n                this.closeGameByWinning();\r\n            } else if (this.isBoardFull()) {\r\n                alert(this.playerRed + ' (Red) and ' + this.playerGreen + ' (Green) are tied!');\r\n                this.closeGameByWinning();\r\n            } else { // If game is still going on\r\n                this.switchTurn();\r\n                this.context.fillStyle = this.turn;\r\n                this.paintDotToDrop(column);\r\n                Utils.playSound(Sound.LandDot);\r\n            }\r\n        }\r\n    }\r\n\r\n    private winDialog(winner: string) {\r\n        let winMsg: string = winner + ' wins!';\r\n        if (this.timerSpan) {\r\n            winMsg += '\\nTime taken: ' + this.timerSpan.innerText;\r\n        }\r\n        if (this.mode === GameMode.Network) {\r\n            winMsg += '\\n';\r\n            if (this.socket.getPlayerColor() === this.turn) {\r\n                winMsg += 'You win!';\r\n                Utils.playSound(Sound.Win);\r\n            } else {\r\n                winMsg += 'You lose!';\r\n                Utils.playSound(Sound.Lose);\r\n            }\r\n        } else {\r\n            Utils.playSound(Sound.Win);\r\n        }\r\n        alert(winMsg);\r\n    }\r\n\r\n    private closeGameByWinning() {\r\n        if (this.mode === GameMode.SamePC) {\r\n            // Clear game data\r\n            localStorage.clear();\r\n        }\r\n\r\n        this.cleanUpEvents();\r\n        this.stopTimer();\r\n        this.clearPlayerNames();\r\n\r\n        if (this.exitBtn) {\r\n            this.exitBtn.classList.add('hide');\r\n        }\r\n\r\n        this.resetValues();\r\n\r\n        // Run delegate function to return to main menu, in case it is defined\r\n        if (this.onGameEnd) {\r\n            setTimeout(this.onGameEnd, 3000);\r\n        }\r\n    }\r\n\r\n    private paintDotToDrop(column: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(50 + column * this.colGap, this.circleRadius, this.circleRadius, 0, 2 * Math.PI);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    private beforeUnload = (event) => {\r\n        if (this.mode === GameMode.SamePC) {\r\n            this.saveGame();\r\n        } else if (this.mode === GameMode.Network) {\r\n            // Display default dialog before closing\r\n            event.preventDefault();\r\n            event.returnValue = ''; // Required by Chrome\r\n        }\r\n    };\r\n\r\n    private timerCallback = () => {\r\n        if (this.mode !== GameMode.Network || this.opponentConnected()) {\r\n            this.secondsRunning++;\r\n            let minutes: number = Math.floor(this.secondsRunning / 60);\r\n            let seconds: number = this.secondsRunning % 60;\r\n            this.timerSpan.innerText = minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\r\n        }\r\n        \r\n        if (!this.timerSpan.classList.contains('hide')) {\r\n            this.timeout = setTimeout(this.timerCallback, 1000);\r\n        } else {\r\n            clearTimeout(this.timeout);\r\n        }\r\n    };\r\n\r\n    private pageVisibilityChange = () => {\r\n        if (this.mode !== GameMode.Network) {\r\n            if (document.hidden) {\r\n                clearTimeout(this.timeout);\r\n            } else {\r\n                this.timeout = setTimeout(this.timerCallback, 1000);\r\n            }\r\n        }\r\n    };\r\n\r\n    private clearUpper() {\r\n        this.context.clearRect(0, 0, this.canvas.width, 70);\r\n    }\r\n\r\n    private checkDotCount(column: number, row: number): number {\r\n        let count: number = row;\r\n        let dotCount: number = 0;\r\n\r\n        // Vertical check\r\n        while (dotCount < 4 && count < Game.rows && this.board[column][count] === this.turn) {\r\n            dotCount++;\r\n            count++;\r\n        }\r\n        \r\n        if (dotCount < 4) {\r\n\r\n            // Horizontal check\r\n            dotCount = 0;\r\n            count = column;\r\n            while (count < Game.columns && this.board[count][row] === this.turn) {\r\n                dotCount++;\r\n                count++;\r\n            }\r\n            count = column - 1;\r\n            while (count > -1 && this.board[count][row] === this.turn) {\r\n                dotCount++;\r\n                count--;\r\n            }\r\n        \r\n            // Diagonal checks\r\n            if (dotCount < 4) {\r\n                dotCount = 0;\r\n                let rowCount: number = row - 1;\r\n                let colCount: number = column + 1;\r\n                while (dotCount < 4 && rowCount > -1 &&  colCount < Game.columns && this.board[colCount][rowCount] === this.turn) {\r\n                    dotCount++;\r\n                    colCount++; //right columns\r\n                    rowCount--; //upper rows\r\n                }\r\n                colCount = column;\r\n                rowCount = row;\r\n                while (dotCount < 4 && rowCount < Game.rows && colCount > -1 && this.board[colCount][rowCount] === this.turn) {\r\n                    dotCount++;\r\n                    colCount--; // left columns\r\n                    rowCount++; // lower rows\r\n                }\r\n                \r\n                if (dotCount < 4) {\r\n                    dotCount = 0;\r\n                    rowCount = row - 1;\r\n                    colCount = column - 1;\r\n                    while (dotCount < 4 && rowCount > -1 && colCount > -1 && this.board[colCount][rowCount] === this.turn) {\r\n                        dotCount++;\r\n                        colCount--; // left columns\r\n                        rowCount--; // upper rows\r\n                    }\r\n                    colCount = column;\r\n                    rowCount = row;\r\n                    while (dotCount < 4 && rowCount < Game.rows && colCount < Game.columns && this.board[colCount][rowCount] === this.turn) {\r\n                        dotCount++;\r\n                        colCount++; // right columns\r\n                        rowCount++; // lower rows\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return dotCount;\r\n    }\r\n\r\n    private cleanUpEvents() {\r\n        this.canvas.removeEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.removeEventListener('click', this.canvasClick, false);\r\n        window.removeEventListener('beforeunload', this.beforeUnload);\r\n        window.removeEventListener('resize', this.resizeCanvas);\r\n        document.removeEventListener('changevisibility', this.pageVisibilityChange);\r\n    }\r\n\r\n    private saveGame() {\r\n        localStorage.setItem('nextTurn', this.turn.toString());\r\n\t    localStorage.setItem('board', JSON.stringify(this.board));\r\n        localStorage.setItem('playerRed', this.playerRed);\r\n        localStorage.setItem('playerGreen', this.playerGreen);\r\n        localStorage.setItem('secondsRunning', this.secondsRunning.toString());\r\n    }\r\n\r\n    private restoreLastGame() {\r\n        let nextTurn: string = localStorage.getItem('nextTurn');\r\n        if (nextTurn === Dot.Red) {\r\n            this.turn = Dot.Red;\r\n        } else if (nextTurn === Dot.Green) {\r\n            this.turn = Dot.Green;\r\n        }\r\n        \r\n        this.playerRed = localStorage.getItem('playerRed');\r\n        this.playerGreen = localStorage.getItem('playerGreen');\r\n        this.board = JSON.parse(localStorage.getItem('board'));\r\n        this.secondsRunning = parseInt(localStorage.getItem('secondsRunning'));\r\n    }\r\n\r\n    public exit() {\r\n        let exitConfirmation: boolean = (this.mode === GameMode.Network ? confirm('Network game in progress. Are you sure you want to quit?') : true);\r\n\r\n        if (exitConfirmation) {\r\n            this.cleanUpEvents();\r\n            if (this.mode === GameMode.SamePC) {\r\n                this.saveGame();\r\n            } else if (this.mode === GameMode.Network) {\r\n                this.socket.close();\r\n            }\r\n            this.onGameEnd();\r\n            this.stopTimer();\r\n            this.clearPlayerNames();\r\n            this.resetValues();\r\n        }\r\n    }\r\n\r\n    private setTimer() {\r\n        if (this.timerSpan) {\r\n            this.timerSpan.classList.remove('hide');\r\n            this.timerCallback();\r\n        }\r\n    }\r\n\r\n    private stopTimer() {\r\n        if (this.timeout) {\r\n            clearTimeout(this.timeout);\r\n            this.timerSpan.innerText = '';\r\n            this.timerSpan.classList.add('hide');\r\n        }\r\n    }\r\n\r\n    private clearPlayerNames() {\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = '';\r\n        }\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = '';\r\n        }\r\n    }\r\n\r\n    private resizeCanvas = () => {\r\n        this.canvas.height = window.innerHeight - 100;\r\n        this.canvas.width = window.innerWidth;\r\n\r\n        if (this.canvas.width < 1000) {\r\n            this.circleRadius = 20; // Mobile/tablet\r\n        } else {\r\n            this.circleRadius = 30; // Desktop\r\n        }\r\n\r\n        if (this.canvas.height > this.canvas.width) {\r\n            this.colGap = this.canvas.width / Game.columns;\r\n            this.rowGap = this.canvas.height / Game.rows;\r\n        } else {\r\n            this.colGap = this.canvas.width / Game.columns;\r\n            this.rowGap = 65;\r\n        }\r\n\r\n        this.paintBoard();\r\n    };\r\n\r\n    private defineSocket() {\r\n        this.socket = new Socket();\r\n        this.socket.onMessageCallback = this.socketMessage;\r\n    }\r\n\r\n    private socketMessage = (messageData) => {\r\n        if (messageData.opponentName && this.socket) {\r\n            if (this.socket.getPlayerColor() === Dot.Red) {\r\n                this.playerGreen = messageData.opponentName;\r\n                if (this.playerGreenSpan) {\r\n                    this.playerGreenSpan.innerText = this.playerGreen;\r\n                }\r\n            } else if (this.socket.getPlayerColor() === Dot.Green) {\r\n                this.playerRed = messageData.opponentName;\r\n                if (this.playerRedSpan) {\r\n                    this.playerRedSpan.innerText = this.playerRed;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (messageData.color && this.socket) {\r\n            if (messageData.color === Dot.Red) {\r\n                this.playerRed = this.socket.getPlayerName();\r\n                if (this.playerRedSpan) {\r\n                    this.playerRedSpan.innerText = this.playerRed;\r\n                }\r\n            } else if (messageData.color === Dot.Green) {\r\n                this.playerGreen = this.socket.getPlayerName();\r\n                if (this.playerGreenSpan) {\r\n                    this.playerGreenSpan.innerText = this.playerGreen;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (messageData.win) {\r\n            this.closeGameByWinning();\r\n        }\r\n\r\n        if (!isNaN(messageData.column) && messageData.action === 'mousemove') {\r\n            this.moveDot(messageData.column);\r\n        }\r\n\r\n        if (!isNaN(messageData.column) && messageData.action === 'click') {\r\n            this.landDot(messageData.column);\r\n        }\r\n    };\r\n\r\n    private opponentConnected(): boolean {\r\n        // Return true for network play when both player names are defined (i.e. both connected)\r\n        return this.mode === GameMode.Network && !!this.playerRed && !!this.playerGreen;\r\n    }\r\n\r\n    private isBoardFull(): boolean {\r\n        let full: boolean = true;\r\n        for (let col: number = 0; col < Game.columns; col++) {\r\n            // Check upper row in every column\r\n            if (this.board[col][0] === Dot.Empty) {\r\n                full = false;\r\n                break;\r\n            }\r\n        }\r\n        return full;\r\n    }\r\n\r\n    private resetValues() {\r\n        this.secondsRunning = 0;\r\n        this.turn = Dot.Red;\r\n        this.initBoard();\r\n        this.playerRed = null;\r\n        this.playerGreen = null;\r\n    }\r\n\r\n}","export class Position {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public static getCursorPosition(event, canvas): Position {\r\n        let x: number;\r\n        let y: number;\r\n        if (event.pageX !== undefined || event.pageY !== undefined) {\r\n            x = event.pageX;\r\n            y = event.pageY;\r\n        }\r\n        else {\r\n            x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n        }\r\n        x -= canvas.offsetLeft;\r\n        y -= canvas.offsetTop;\r\n        return new Position(x, y);\r\n    }\r\n}","import { Dot } from \"./enums/dot\";\r\nimport { Utils } from \"./utils\";\r\n\r\nexport class Socket {\r\n    private webSocket: WebSocket;\r\n    private playerColor: Dot;\r\n    private playerName: string;\r\n    private gameId: number;\r\n    public onMessageCallback: Function;\r\n\r\n    public constructor() {\r\n        this.connect();\r\n    }\r\n\r\n    private connect() {\r\n        let url: string;\r\n        if (Utils.isLocal()) {\r\n            url = 'ws://localhost:3000/';\r\n        } else {\r\n            url = 'wss://daniels-connect4-server.adaptable.app/';\r\n        }\r\n\r\n        if (this.playerColor && this.gameId) {\r\n            url += '?playerColor=' + this.playerColor + '&gameId=' + this.gameId;\r\n        }\r\n\r\n        this.webSocket = new WebSocket(url);\r\n\r\n        this.webSocket.onmessage = this.onMessage;\r\n        this.webSocket.onerror = this.onError;\r\n        this.webSocket.onclose = this.onClose;\r\n    }\r\n\r\n    public send(data: object) {\r\n        this.webSocket.send(JSON.stringify(data));\r\n    }\r\n\r\n    public close() {\r\n        this.webSocket.close();\r\n        this.webSocket = null;\r\n    }\r\n\r\n    public getPlayerColor(): Dot {\r\n        return this.playerColor;\r\n    }\r\n\r\n    public getPlayerName(): string {\r\n        return this.playerName;\r\n    }\r\n\r\n    private onMessage = (event) => {\r\n        let messageData = JSON.parse(event.data);\r\n\r\n        if (!this.gameId && messageData.gameId) {\r\n            this.gameId = messageData.gameId;\r\n        }\r\n\r\n        if (messageData.message) {\r\n            alert(messageData.message);\r\n        }\r\n\r\n        if (!this.playerColor && messageData.color) {\r\n            this.playerColor = messageData.color;\r\n\r\n            this.playerName = prompt('You are ' + this.playerColor + '. Please enter your name.');\r\n            \r\n            let data = {\r\n                name: this.playerName\r\n            };\r\n            this.send(data);\r\n        }\r\n\r\n        if (this.onMessageCallback) {\r\n            this.onMessageCallback(messageData);\r\n        }\r\n    };\r\n\r\n    private onError = () => {\r\n        alert('Problem connecting to server!');\r\n    };\r\n\r\n    private onClose = () => {\r\n        this.connect();\r\n    };\r\n}","export class Utils {\r\n    public static isLocal(): boolean {\r\n        return location.protocol === 'file:'\r\n            || location.hostname === 'localhost';\r\n    }\r\n\r\n    public static playSound(path: string) {\r\n        let audio = new Audio(path);\r\n        audio.play();\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Game } from \"./lib/game\";\r\nimport { GameMode } from \"./lib/enums/game-mode\";\r\n\r\nlet connect4: Game;\r\n\r\nlet menu = document.getElementById('menu');\r\nlet samePCBtn = document.getElementById('samePC');\r\nlet socketsBtn = document.getElementById('sockets');\r\nlet creditsBtn = document.getElementById('credits');\r\n\r\nlet exitBtn = document.getElementById('exitBtn');\r\n\r\nlet canvas = document.getElementById('board');\r\n\r\nsamePCBtn.addEventListener('click', () => {\r\n    initGame(GameMode.SamePC);\r\n}, false);\r\n\r\nsocketsBtn.addEventListener('click', () => {\r\n    initGame(GameMode.Network);\r\n}, false);\r\n\r\ncreditsBtn.addEventListener('click', () => {\r\n    open('contributors.html');\r\n}, false);\r\n\r\nexitBtn.addEventListener('click', () => {\r\n    connect4.exit();\r\n}, false);\r\n\r\nfunction initGame(mode: GameMode) {\r\n    connect4 = Game.getInstance('board', 'exitBtn', 'timer', 'playerRed', 'playerGreen');\r\n    connect4.mode = mode;\r\n    connect4.onGameEnd = () => {\r\n        menu.classList.remove('hide');\r\n        canvas.classList.add('hide');\r\n        exitBtn.classList.add('hide');\r\n    };\r\n    connect4.start();\r\n\r\n    menu.classList.add('hide');\r\n    canvas.classList.remove('hide');\r\n    exitBtn.classList.remove('hide');\r\n}"],"names":[],"sourceRoot":""}