{"version":3,"file":"bundle.js","mappings":"wCACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,gBAAa,EACrB,IAAIC,EAAS,EAAQ,IACJH,EAAQE,WAA4B,WACjD,SAASA,IACT,CAmHA,OA9GAA,EAAWE,UAAY,SAAUC,GAC7B,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAWK,QAASD,IAAO,CAC/CD,EAAMC,GAAO,IAAIE,MAAMN,EAAWO,MAClC,IAAK,IAAIC,EAAM,EAAGA,EAAMR,EAAWO,KAAMC,IACrCL,EAAMC,GAAKI,GAAOP,EAAOQ,KAAKC,KAEtC,CACJ,EAUAV,EAAWW,sBAAwB,SAAUR,EAAOS,EAAQJ,EAAKK,GAI7D,IAHA,IAAIC,EAAQN,EACRO,EAAY,EAETA,EAAY,GAAKD,EAAQd,EAAWO,MAAQJ,EAAMS,GAAQE,KAAWD,GACxEE,IACAD,IAEJ,GAAIC,EAAY,EAAG,CAIf,IAFAA,EAAY,EACZD,EAAQF,EACDE,EAAQd,EAAWK,SAAWF,EAAMW,GAAON,KAASK,GACvDE,IACAD,IAGJ,IADAA,EAAQF,EAAS,EACVE,GAAS,GAAKX,EAAMW,GAAON,KAASK,GACvCE,IACAD,IAGJ,GAAIC,EAAY,EAAG,CACfA,EAAY,EAGZ,IAFA,IAAIC,EAAWR,EAAM,EACjBS,EAAWL,EAAS,EACjBG,EAAY,GAAKC,GAAY,GAAKC,EAAWjB,EAAWK,SAAWF,EAAMc,GAAUD,KAAcH,GACpGE,IACAE,IACAD,IAIJ,IAFAC,EAAWL,EACXI,EAAWR,EACJO,EAAY,GAAKC,EAAWhB,EAAWO,MAAQU,GAAY,GAAKd,EAAMc,GAAUD,KAAcH,GACjGE,IACAE,IACAD,IAEJ,GAAID,EAAY,EAAG,CAIf,IAHAA,EAAY,EACZC,EAAWR,EAAM,EACjBS,EAAWL,EAAS,EACbG,EAAY,GAAKC,GAAY,GAAKC,GAAY,GAAKd,EAAMc,GAAUD,KAAcH,GACpFE,IACAE,IACAD,IAIJ,IAFAC,EAAWL,EACXI,EAAWR,EACJO,EAAY,GAAKC,EAAWhB,EAAWO,MAAQU,EAAWjB,EAAWK,SAAWF,EAAMc,GAAUD,KAAcH,GACjHE,IACAE,IACAD,GAER,CACJ,CACJ,CACA,OAAOD,CACX,EAMAf,EAAWkB,YAAc,SAAUf,GAE/B,IADA,IAAIgB,GAAO,EACFf,EAAM,EAAGA,EAAMJ,EAAWK,QAASD,IAExC,GAAID,EAAMC,GAAK,KAAOH,EAAOQ,KAAKC,MAAO,CACrCS,GAAO,EACP,KACJ,CAEJ,OAAOA,CACX,EAQAnB,EAAWoB,QAAU,SAAUjB,EAAOkB,EAAOT,GACzC,IAAK,IAAIJ,EAAMR,EAAWO,KAAO,EAAGC,GAAO,EAAGA,IAC1C,GAAIL,EAAMS,GAAQJ,KAASP,EAAOQ,KAAKC,MAEnC,OADAP,EAAMS,GAAQJ,GAAOa,EACdb,EAGf,OAAQ,CACZ,EACAR,EAAWK,QAAU,EACrBL,EAAWO,KAAO,EACXP,CACX,CAtHoD,E,cCHpDJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwB,qBAAkB,EAI1BxB,EAAQwB,gBAAkB,E,aCH1B,IAAIb,EAFJb,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQW,UAAO,EAEf,SAAWA,GACPA,EAAKA,EAAY,MAAI,GAAK,QAC1BA,EAAKA,EAAU,IAAI,GAAK,MACxBA,EAAKA,EAAY,MAAI,GAAK,OAC7B,CAJD,CAIGA,IAASX,EAAQW,KAAOA,EAAO,CAAC,G,gBCPnCb,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwB,gBAAkBxB,EAAQyB,WAAazB,EAAQ0B,eAAiB1B,EAAQ2B,cAAgB3B,EAAQ4B,WAAa5B,EAAQ6B,gBAAkB7B,EAAQ8B,eAAiB9B,EAAQ+B,YAAc/B,EAAQgC,aAAehC,EAAQiC,kBAAoBjC,EAAQkC,mBAAqBlC,EAAQmC,cAAgBnC,EAAQW,KAAOX,EAAA,aAAkB,EACvU,IAAIoC,EAAgB,EAAQ,KAC5BtC,OAAOC,eAAeC,EAAS,UAAW,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOF,EAAclC,UAAY,IAClH,IAAIC,EAAS,EAAQ,IACrBL,OAAOC,eAAeC,EAAS,OAAQ,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOnC,EAAOQ,IAAM,IAClG,IAAI4B,EAAmB,EAAQ,KAC/BzC,OAAOC,eAAeC,EAAS,gBAAiB,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOC,EAAiBJ,aAAe,IAC9H,IAAIK,EAAyB,EAAQ,KACrC1C,OAAOC,eAAeC,EAAS,qBAAsB,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOE,EAAuBN,kBAAoB,IAC9I,IAAIO,EAAuB,EAAQ,KACnC3C,OAAOC,eAAeC,EAAS,oBAAqB,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOG,EAAqBR,iBAAmB,IAC1I,IAAIS,EAAkB,EAAQ,KAC9B5C,OAAOC,eAAeC,EAAS,eAAgB,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOI,EAAgBV,YAAc,IAC3H,IAAIW,EAAiB,EAAQ,KAC7B7C,OAAOC,eAAeC,EAAS,cAAe,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOK,EAAeZ,WAAa,IACxH,IAAIa,EAAoB,EAAQ,KAChC9C,OAAOC,eAAeC,EAAS,iBAAkB,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOM,EAAkBd,cAAgB,IACjI,IAAIe,EAAsB,EAAQ,KAClC/C,OAAOC,eAAeC,EAAS,kBAAmB,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOO,EAAoBhB,eAAiB,IACrI,IAAIiB,EAAgB,EAAQ,KAC5BhD,OAAOC,eAAeC,EAAS,aAAc,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOQ,EAAclB,UAAY,IACrH,IAAImB,EAAmB,EAAQ,KAC/BjD,OAAOC,eAAeC,EAAS,gBAAiB,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOS,EAAiBpB,aAAe,IAC9H,IAAIqB,EAAgB,EAAQ,KAC5BlD,OAAOC,eAAeC,EAAS,iBAAkB,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOU,EAActB,cAAgB,IAC7H5B,OAAOC,eAAeC,EAAS,aAAc,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOU,EAAcvB,UAAY,IACrH,IAAIwB,EAAc,EAAQ,KAC1BnD,OAAOC,eAAeC,EAAS,kBAAmB,CAAEqC,YAAY,EAAMC,IAAK,WAAc,OAAOW,EAAYzB,eAAiB,G,sBC5B7H,IACQ0B,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBpD,OAAOyD,gBAClB,CAAEC,UAAW,cAAgBhD,OAAS,SAAU6C,EAAGC,GAAKD,EAAEG,UAAYF,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOxD,OAAO4D,UAAUC,eAAeC,KAAKN,EAAGG,KAAIJ,EAAEI,GAAKH,EAAEG,GAAI,EAC7FP,EAAcG,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIO,UAAU,uBAAyBC,OAAOR,GAAK,iCAE7D,SAASS,IAAOX,KAAKY,YAAcX,CAAG,CADtCH,EAAcG,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaxD,OAAOmE,OAAOX,IAAMS,EAAGL,UAAYJ,EAAEI,UAAW,IAAIK,EACnF,GAEJjE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmC,mBAAgB,EACxB,IACIA,EAA+B,SAAU+B,GAOzC,SAAS/B,EAAcrB,EAAQqD,EAAQ5C,GACnC,IAAI6C,EAAQF,EAAON,KAAKR,OAASA,KAIjC,OAHAgB,EAAMtD,OAASA,EACfsD,EAAMD,OAASA,EACfC,EAAM7C,MAAQA,EACP6C,CACX,CACA,OAbAjB,EAAUhB,EAAe+B,GAalB/B,CACX,CAfkC,CADb,EAAQ,KAgBZJ,aACjB/B,EAAQmC,cAAgBA,C,sBClCxB,IACQe,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBpD,OAAOyD,gBAClB,CAAEC,UAAW,cAAgBhD,OAAS,SAAU6C,EAAGC,GAAKD,EAAEG,UAAYF,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOxD,OAAO4D,UAAUC,eAAeC,KAAKN,EAAGG,KAAIJ,EAAEI,GAAKH,EAAEG,GAAI,EAC7FP,EAAcG,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIO,UAAU,uBAAyBC,OAAOR,GAAK,iCAE7D,SAASS,IAAOX,KAAKY,YAAcX,CAAG,CADtCH,EAAcG,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaxD,OAAOmE,OAAOX,IAAMS,EAAGL,UAAYJ,EAAEI,UAAW,IAAIK,EACnF,GAEJjE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkC,wBAAqB,EAC7B,IAAI/B,EAAS,EAAQ,IAEjB+B,EAAoC,SAAUgC,GAE9C,SAAShC,IACL,IAAIkC,EAAQF,EAAON,KAAKR,OAASA,KAEjC,OADAgB,EAAMrD,YAAcZ,EAAOQ,KAAKC,MACzBwD,CACX,CACA,OANAjB,EAAUjB,EAAoBgC,GAMvBhC,CACX,CARuC,CADlB,EAAQ,KASZH,aACjB/B,EAAQkC,mBAAqBA,C,sBC5B7B,IACQgB,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBpD,OAAOyD,gBAClB,CAAEC,UAAW,cAAgBhD,OAAS,SAAU6C,EAAGC,GAAKD,EAAEG,UAAYF,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOxD,OAAO4D,UAAUC,eAAeC,KAAKN,EAAGG,KAAIJ,EAAEI,GAAKH,EAAEG,GAAI,EAC7FP,EAAcG,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIO,UAAU,uBAAyBC,OAAOR,GAAK,iCAE7D,SAASS,IAAOX,KAAKY,YAAcX,CAAG,CADtCH,EAAcG,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaxD,OAAOmE,OAAOX,IAAMS,EAAGL,UAAYJ,EAAEI,UAAW,IAAIK,EACnF,GAEJjE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQiC,uBAAoB,EAC5B,IACIA,EAAmC,SAAUiC,GAE7C,SAASjC,IACL,IAAImC,EAAQF,EAAON,KAAKR,OAASA,KAEjC,OADAgB,EAAMC,gBAAiB,EAChBD,CACX,CACA,OANAjB,EAAUlB,EAAmBiC,GAMtBjC,CACX,CARsC,CADjB,EAAQ,KASZF,aACjB/B,EAAQiC,kBAAoBA,C,sBC3B5B,IACQiB,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBpD,OAAOyD,gBAClB,CAAEC,UAAW,cAAgBhD,OAAS,SAAU6C,EAAGC,GAAKD,EAAEG,UAAYF,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOxD,OAAO4D,UAAUC,eAAeC,KAAKN,EAAGG,KAAIJ,EAAEI,GAAKH,EAAEG,GAAI,EAC7FP,EAAcG,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIO,UAAU,uBAAyBC,OAAOR,GAAK,iCAE7D,SAASS,IAAOX,KAAKY,YAAcX,CAAG,CADtCH,EAAcG,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaxD,OAAOmE,OAAOX,IAAMS,EAAGL,UAAYJ,EAAEI,UAAW,IAAIK,EACnF,GAEJjE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgC,kBAAe,EACvB,IACIA,EAA8B,SAAUkC,GAKxC,SAASlC,EAAasC,GAClB,IAAIF,EAAQF,EAAON,KAAKR,OAASA,KAEjC,OADAgB,EAAME,MAAQA,EACPF,CACX,CACA,OATAjB,EAAUnB,EAAckC,GASjBlC,CACX,CAXiC,CADZ,EAAQ,KAYZD,aACjB/B,EAAQgC,aAAeA,C,cC9BvBlC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+B,iBAAc,EACtB,IAAIA,EAA6B,WAC7B,SAASA,IACT,CA2FA,OAnFAA,EAAYwC,iBAAmB,SAAUC,GACrC,OAASC,MAAMD,EAAY,SAAMA,EAAW,OAAMA,EAAkB,YACxE,EAQAzC,EAAY2C,oBAAsB,SAAUF,GACxC,OAAOA,EAA4B,wBAAKA,EAAiB,WAC7D,EAQAzC,EAAY4C,gBAAkB,SAAUH,GACpC,OAAOA,EAAY,SAAMC,MAAMD,EAAY,SAAMA,EAAW,KAChE,EAQAzC,EAAY6C,kBAAoB,SAAUJ,GACtC,OAAOA,EAAc,UAAKA,EAAiB,WAC/C,EAQAzC,EAAY8C,gBAAkB,SAAUL,GACpC,OAAOA,EAAY,MACvB,EAQAzC,EAAY+C,aAAe,SAAUN,GACjC,OAAOA,EAAS,GACpB,EAQAzC,EAAYgD,qBAAuB,SAAUP,GACzC,OAAOA,EAAiB,WAC5B,EAQAzC,EAAYiD,oBAAsB,SAAUR,GACxC,OAAOA,EAAoB,cAC/B,EAQAzC,EAAYkD,eAAiB,SAAUT,GACnC,OAAOA,EAAW,KACtB,EACOzC,CACX,CA9FgC,GA+FhC/B,EAAQ+B,YAAcA,C,sBCjGtB,IACQmB,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBpD,OAAOyD,gBAClB,CAAEC,UAAW,cAAgBhD,OAAS,SAAU6C,EAAGC,GAAKD,EAAEG,UAAYF,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOxD,OAAO4D,UAAUC,eAAeC,KAAKN,EAAGG,KAAIJ,EAAEI,GAAKH,EAAEG,GAAI,EAC7FP,EAAcG,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIO,UAAU,uBAAyBC,OAAOR,GAAK,iCAE7D,SAASS,IAAOX,KAAKY,YAAcX,CAAG,CADtCH,EAAcG,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaxD,OAAOmE,OAAOX,IAAMS,EAAGL,UAAYJ,EAAEI,UAAW,IAAIK,EACnF,GAEJjE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8B,oBAAiB,EACzB,IACIA,EAAgC,SAAUoC,GAQ1C,SAASpC,EAAeoD,EAAQC,EAAYC,EAAc7D,GACtD,IAAI6C,EAAQF,EAAON,KAAKR,OAASA,KAKjC,OAJAgB,EAAMc,OAASA,EACfd,EAAMe,WAAaA,EACnBf,EAAMgB,aAAeA,EACrBhB,EAAM7C,MAAQA,EACP6C,CACX,CACA,OAfAjB,EAAUrB,EAAgBoC,GAenBpC,CACX,CAjBmC,CADd,EAAQ,KAkBZC,aACjB/B,EAAQ8B,eAAiBA,C,sBCpCzB,IACQoB,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBpD,OAAOyD,gBAClB,CAAEC,UAAW,cAAgBhD,OAAS,SAAU6C,EAAGC,GAAKD,EAAEG,UAAYF,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOxD,OAAO4D,UAAUC,eAAeC,KAAKN,EAAGG,KAAIJ,EAAEI,GAAKH,EAAEG,GAAI,EAC7FP,EAAcG,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIO,UAAU,uBAAyBC,OAAOR,GAAK,iCAE7D,SAASS,IAAOX,KAAKY,YAAcX,CAAG,CADtCH,EAAcG,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaxD,OAAOmE,OAAOX,IAAMS,EAAGL,UAAYJ,EAAEI,UAAW,IAAIK,EACnF,GAEJjE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6B,qBAAkB,EAC1B,IACIA,EAAiC,SAAUqC,GAM3C,SAASrC,EAAgBwD,EAAUtE,GAC/B,IAAIqD,EAAQF,EAAON,KAAKR,OAASA,KAGjC,OAFAgB,EAAMiB,SAAWA,EACjBjB,EAAMrD,YAAcA,EACbqD,CACX,CACA,OAXAjB,EAAUtB,EAAiBqC,GAWpBrC,CACX,CAboC,CADf,EAAQ,KAcZE,aACjB/B,EAAQ6B,gBAAkBA,C,sBChC1B,IACQqB,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBpD,OAAOyD,gBAClB,CAAEC,UAAW,cAAgBhD,OAAS,SAAU6C,EAAGC,GAAKD,EAAEG,UAAYF,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOxD,OAAO4D,UAAUC,eAAeC,KAAKN,EAAGG,KAAIJ,EAAEI,GAAKH,EAAEG,GAAI,EAC7FP,EAAcG,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIO,UAAU,uBAAyBC,OAAOR,GAAK,iCAE7D,SAASS,IAAOX,KAAKY,YAAcX,CAAG,CADtCH,EAAcG,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaxD,OAAOmE,OAAOX,IAAMS,EAAGL,UAAYJ,EAAEI,UAAW,IAAIK,EACnF,GAEJjE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4B,gBAAa,EACrB,IACIA,EAA4B,SAAUsC,GAKtC,SAAStC,EAAW0D,QACJ,IAARA,IAAkBA,GAAM,GAC5B,IAAIlB,EAAQF,EAAON,KAAKR,OAASA,KAEjC,OADAgB,EAAMkB,IAAMA,EACLlB,CACX,CACA,OAVAjB,EAAUvB,EAAYsC,GAUftC,CACX,CAZ+B,CADV,EAAQ,KAaZG,aACjB/B,EAAQ4B,WAAaA,C,sBC/BrB,IACQsB,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBpD,OAAOyD,gBAClB,CAAEC,UAAW,cAAgBhD,OAAS,SAAU6C,EAAGC,GAAKD,EAAEG,UAAYF,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIG,KAAKH,EAAOxD,OAAO4D,UAAUC,eAAeC,KAAKN,EAAGG,KAAIJ,EAAEI,GAAKH,EAAEG,GAAI,EAC7FP,EAAcG,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIO,UAAU,uBAAyBC,OAAOR,GAAK,iCAE7D,SAASS,IAAOX,KAAKY,YAAcX,CAAG,CADtCH,EAAcG,EAAGC,GAEjBD,EAAEK,UAAkB,OAANJ,EAAaxD,OAAOmE,OAAOX,IAAMS,EAAGL,UAAYJ,EAAEI,UAAW,IAAIK,EACnF,GAEJjE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2B,mBAAgB,EACxB,IAIIA,EAA+B,SAAUuC,GAKzC,SAASvC,EAAc4D,GACnB,IAAInB,EAAQF,EAAON,KAAKR,OAASA,KAEjC,OADAgB,EAAMmB,OAASA,EACRnB,CACX,CACA,OATAjB,EAAUxB,EAAeuC,GASlBvC,CACX,CAXkC,CAJb,EAAQ,KAeZI,aACjB/B,EAAQ2B,cAAgBA,C,gBCjCxB7B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQyB,WAAazB,EAAQ0B,oBAAiB,EAC9C,IAAIvB,EAAS,EAAQ,IAQrBH,EAAQ0B,eAHR,WACI,OAAO8D,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,CAC3C,EAUA1F,EAAQyB,WAHR,SAAoBV,GAChB,OAAOA,IAAgBZ,EAAOQ,KAAKgF,IAAMxF,EAAOQ,KAAKiF,MAAQzF,EAAOQ,KAAKgF,GAC7E,C,6hDCnBA,aAuBA,SAAsBE,I,yGACZC,EAAYC,SAASC,eAAe,cACpCC,EAAeF,SAASC,eAAe,kBACzCE,eAAeC,QAAQ,SACvBL,EAAUM,UAAUC,IAAI,QACxBJ,EAAaG,UAAUE,OAAO,QAC9B,GAAMC,MAHN,M,cAGA,S,aAEAT,EAAUM,UAAUE,OAAO,QAC3BL,EAAaG,UAAUC,IAAI,Q,kCASnC,SAAgBG,IACZ,IAAMC,EAAMP,eAAeC,QAAQ,QACnC,OAAOM,EAAMC,KAAKC,MAAMF,GAA8B,IAC1D,CAEA,SAAeF,I,kGAEM,OADXK,EAAOJ,IACI,GAAMK,MAAM,UAAG,UAAOC,WAAU,uBAAeF,EAAKG,MAAK,oBAAYH,EAAKI,W,OAC9E,SADI,SACWC,Q,cAAtBC,EAAO,SACInB,SAASC,eAAe,YAChCmB,UAAYD,EAAKE,K,WA1C9B,8BAAyCC,G,0FAGrC,OAIMH,EAAO,CACTH,MAPiBM,EAAQ,WAQzBL,QAAS,UAEbd,eAAeoB,QAAQ,OAAQZ,KAAKa,UAAUL,IAR9C,GAAMrB,K,cAAN,S,IAGJ,IACUqB,C,QAOV,oBAaA,oBACIhB,eAAesB,WAAW,QAC1B3B,GACJ,EAEA,Y,iECzCA,IAEM4B,EAFN,OAEe,QAAMC,UAAY,CAC7BZ,WAAY,wBACZa,SAAU,uBACV,CACAb,WAAY,gDACZa,SAAU,+CAGd,UAAeF,C,iECRf,aAIA,0BAyLA,QAvLmB,EAAAG,MAAf,SAAqBC,EAAkBC,GAAvC,WACI,IAAK/B,SAASC,eAAe8B,EAAQC,IAAK,CACtC,IAAM,EAAQhC,SAASiC,cAAc,OAKrC,GAJA,EAAMC,SAAW,EACjB,EAAMF,GAAKD,EAAQC,GACnB,EAAM3B,UAAUC,IAAI,UAEhByB,EAAQI,MAAO,CACf,IAAMC,EAAKpC,SAASiC,cAAc,MAClCG,EAAGhB,UAAYW,EAAQI,MACvBC,EAAG/B,UAAUC,IAAI,gBACjB,EAAM+B,YAAYD,GAClB,EAAMC,YAAYrC,SAASiC,cAAc,M,CAG7C,IAAMK,EAAgBtC,SAASiC,cAAc,OAI7C,OAHA5E,KAAKkF,WAAWR,EAAQS,KAAMF,GAC9B,EAAMD,YAAYC,GAEVR,GACJ,KAAK,EAAAW,WAAWC,aACZ,IAAM,EAAIX,GACJY,EAAe3C,SAASiC,cAAc,QAC/B5B,UAAUC,IAAI,wBAC3B,EAAM+B,YAAYM,GAElBtF,KAAKuF,UAAUD,EAAc,OAAO,WAChC,EAAEE,cACF,EAAKC,WAAW,EACpB,GAAG,EAAEC,SAAU,UACf1F,KAAKuF,UAAUD,EAAc,MAAM,WAC/B,EAAEK,aACF,EAAKF,WAAW,EACpB,GAAG,EAAEG,QAAS,UACd,MAEJ,KAAK,EAAAR,WAAWS,aACZ,IAAMP,KAAe3C,SAASiC,cAAc,QAC/B5B,UAAUC,IAAI,wBAC3B,EAAM+B,YAAYM,GAElBtF,KAAKuF,UAAUD,EAAc,MAAM,WAC/B,EAAKG,WAAW,EACpB,GAAG,QAAS,UAEZ,EAAMK,iBAAiB,WAAW,SAACC,GACb,WAAdA,EAAMC,KAAkC,UAAdD,EAAMC,KAChC,EAAKP,WAAW,EAExB,IAEA,MAEJ,KAAK,EAAAL,WAAWa,OACZ,IAAMC,EAAIxB,EACV1E,KAAKmG,WAAW,EAAOD,GAK/BvD,SAASyD,KAAKpB,YAAY,E,CAElC,EAEe,EAAAO,UAAf,SAAyBc,EACblB,EACAmB,EACAC,EACAC,GACR,IAAMC,EAAM9D,SAASiC,cAAc,UACnC6B,EAAIhC,KAAO+B,EACXC,EAAI1C,UAAYoB,EAChBsB,EAAIzD,UAAUC,IAAI,QAClBwD,EAAIzD,UAAUC,IAAI,cAClBwD,EAAIzD,UAAUC,IAAI,qBAAcsD,IAChB,WAAZC,GACAC,EAAIX,iBAAiB,QAASQ,GAElCD,EAAUrB,YAAYyB,EAC1B,EAEe,EAAAN,WAAf,SAA0B3B,EAAuBE,GAAjD,WACUgC,EAAiB/D,SAASiC,cAAc,OAC9C8B,EAAe1D,UAAUC,IAAI,0BAC7BuB,EAAMQ,YAAY0B,GAElB,IAAMC,EAAOhE,SAASiC,cAAc,QACpC8B,EAAe1B,YAAY2B,GAC3BA,EAAKb,iBAAiB,UAAU,SAACC,GAC7BA,EAAMa,iBACN,IAAM1F,EAAgBwD,EAAQmC,OAC1B3F,EACA,EAAK4F,YAAYtC,EAAOtD,GAExB,EAAKuE,WAAWjB,EAExB,IAEAxE,KAAK+G,aAAaJ,EAAMjC,EAAQsC,QAEhC,IAAM1B,EAAe3C,SAASiC,cAAc,OAC5CU,EAAatC,UAAUC,IAAI,wBAC3B0D,EAAK3B,YAAYM,GAEjBtF,KAAKuF,UAAUD,EAAc,KAAM,KAAM,QAAS,UAClDtF,KAAKuF,UAAUD,EAAc,UAAU,WACnCZ,EAAQuC,WACR,EAAKxB,WAAWjB,EACpB,GAAG,MAAO,SACd,EAEe,EAAAuC,aAAf,SAA4BJ,EAAuBK,GAC/C,IAAK,IAAIE,EAAY,EAAGA,EAAIF,EAAOG,OAAQD,IAAK,CAC5C,IAAME,EAAQzE,SAASiC,cAAc,SACrCwC,EAAM3C,KAAOuC,EAAOE,GAAGzC,KACvB2C,EAAMzC,GAAK,uBAAgBqC,EAAOE,GAAGG,MACrCD,EAAMC,KAAO,uBAAgBL,EAAOE,GAAGG,MACvCD,EAAME,YAAc,gBAASN,EAAOE,GAAGK,OACvCH,EAAMI,UAAYR,EAAOE,GAAGO,MAC5BL,EAAMpE,UAAUC,IAAI,gBACpBmE,EAAMpE,UAAUC,IAAI,QACpBmE,EAAMM,SAAWV,EAAOE,GAAGQ,SAC3BN,EAAMO,aAAeX,EAAOE,GAAGQ,SAASE,WACxCjB,EAAK3B,YAAYoC,GAEjBpH,KAAK6H,gBAAgBlB,GACrB3G,KAAK6H,gBAAgBlB,E,CAE7B,EAEe,EAAAkB,gBAAf,SAA+BxB,GAC3B,IAAMyB,EAAKnF,SAASiC,cAAc,MAClCyB,EAAUrB,YAAY8C,EAC1B,EAEe,EAAAhB,YAAf,SAA2BT,EAA2BlB,GAClD,IAAI4C,EAAWpF,SAASC,eAAe,eAClCmF,KACDA,EAAWpF,SAASiC,cAAc,QACzBD,GAAK,cACdoD,EAAS/E,UAAUC,IAAI,YACvB8E,EAAS/E,UAAUC,IAAI,QACvB8E,EAAS/E,UAAUC,IAAI,gBACvBoD,EAAUrB,YAAY+C,IAE1BA,EAAShE,UAAYoB,CACzB,EAEe,EAAAD,WAAf,SAA0BC,EAAqBkB,GAC3CA,EAAUrD,UAAUC,IAAI,QACxBoD,EAAUrD,UAAUC,IAAI,eACxB,IAAK,IAAIiE,EAAY,EAAGA,EAAI/B,EAAKgC,OAAQD,IAAK,CAC1C,IAAM7G,EAAIsC,SAASiC,cAAc,KACjCvE,EAAE0D,UAAYoB,EAAK+B,GACnBb,EAAUrB,YAAY3E,E,CAE9B,EAEe,EAAAoF,WAAf,SAA0BjB,GAClB7B,SAASyD,KAAK4B,SAASxD,IACvB7B,SAASyD,KAAK6B,YAAYzD,EAElC,EAEc,EAAA0D,QAAd,SAAsBxD,GAClByD,EAAO3D,MAAM,EAAAY,WAAWC,aAAcX,EAC1C,EAEc,EAAA0D,OAAd,SAAqB1D,GACjByD,EAAO3D,MAAM,EAAAY,WAAWS,aAAcnB,EAC1C,EAEc,EAAA2D,OAAd,SAAqB3D,GACjByD,EAAO3D,MAAM,EAAAY,WAAWa,OAAQvB,EACpC,EAEc,EAAA4D,oBAAd,WAEI,IADA,IAAMC,EAAU5F,SAAS6F,uBAAuB,UACvCtB,EAAY,EAAGA,EAAIqB,EAAQpB,OAAQD,IACxClH,KAAKyF,WAAW8C,EAAQrB,GAEhC,EAEJ,EAzLA,G,yBCNA,IAAY9B,E,qEAAZ,SAAYA,GACR,mCACA,mCACA,sBACH,CAJD,CAAYA,IAAU,aAAVA,EAAU,I,cCAtB,IAAYqD,E,oEAAZ,SAAYA,GACR,oCACA,oCACA,qCACA,4BACA,8BACA,qCACH,CAPD,CAAYA,IAAS,YAATA,EAAS,I,cCArB,IAAYC,E,mEAAZ,SAAYA,GACR,uBACA,wBACH,CAHD,CAAYA,IAAQ,WAARA,EAAQ,I,cCApB,IAAYC,E,gEAAZ,SAAYA,GACR,oCACA,yBACA,0BACH,CAJD,CAAYA,IAAK,QAALA,EAAK,I,iECAjB,YACA,SAEA,SAEA,aAuBI,WAAsBjE,GAAtB,WAnBU,KAAAzH,MAA4B,IAAIG,MAAM,UAAWD,SAOjD,KAAAyL,KAAa,EAAArL,KAAKgF,IAQlB,KAAAsG,kBAA4B,EA0J9B,KAAAC,aAAe,WACnB,EAAKC,OAAOC,OAASC,OAAOC,YAAc,IAC1C,EAAKH,OAAOI,MAAQF,OAAOG,WAEvB,EAAKL,OAAOI,MAAQ,IACpB,EAAKE,aAAe,GAEpB,EAAKA,aAAe,GAGpB,EAAKN,OAAOC,OAAS,EAAKD,OAAOI,OACjC,EAAKG,OAAS,EAAKP,OAAOI,MAAQ,UAAWhM,QAC7C,EAAKoM,OAAU,EAAKR,OAAOC,OAAS,UAAW3L,KAAQ,EAAKgM,eAE5D,EAAKC,OAAS,EAAKP,OAAOI,MAAQ,UAAWhM,QAC7C,EAAKoM,OAAS,IAGlB,EAAKC,UAAY,EAAKF,OAAS,EAE/B,EAAKG,YACT,EA1KIzJ,KAAK+I,OAASpG,SAASC,eAAe8B,EAAQgF,UAC9C1J,KAAK2J,QAAU3J,KAAK+I,OAAOa,WAAW,MAEtC,UAAW5M,UAAUgD,KAAK/C,OAEtByH,EAAQmF,YACR7J,KAAK8J,QAAUnH,SAASC,eAAe8B,EAAQmF,YAG/CnF,EAAQqF,aAAerF,EAAQsF,gBAC/BhK,KAAKiK,kBAAoB,IAAI,UAAkBvF,EAAQqF,YAAarF,EAAQsF,gBAG5EtF,EAAQwF,mBACRlK,KAAKmK,wBAA0BxH,SAASC,eAAe8B,EAAQwF,mBAG/DxF,EAAQ0F,SACRpK,KAAKqK,SAAW1H,SAASC,eAAe8B,EAAQ0F,QAExD,CA0MJ,OAxMc,YAAAE,MAAV,WACItK,KAAKuK,WAEDvK,KAAKiK,oBACLjK,KAAKiK,kBAAkBO,mBACvBxK,KAAKiK,kBAAkBQ,aAAazK,KAAK4I,OAG7C5I,KAAK8I,eACL9I,KAAK0K,eACT,EAEQ,YAAAjB,WAAR,WACI,IAAMkB,EAAgB3K,KAAK2J,QAAQiB,qBAAqB,EAAG,EAAG5K,KAAK+I,OAAOI,MAAO,GACjFwB,EAAcE,aAAa,EAAG,QAC9BF,EAAcE,aAAa,EAAG,QAC9B7K,KAAK2J,QAAQmB,UAAYH,EACzB3K,KAAK2J,QAAQoB,SAAS,EAAGC,EAAKC,eAAgBjL,KAAK+I,OAAOI,MAAOnJ,KAAK+I,OAAOC,QAE7E,IAAK,IAAI9L,EAAM,UAAWC,QAAU,EAAGD,GAAO,EAAGA,IAC7C,IAAK,IAAII,EAAM,UAAWD,KAAO,EAAGC,GAAO,EAAGA,IAC1C0C,KAAK2J,QAAQmB,UAAYE,EAAKE,SAASlL,KAAK/C,MAAMC,GAAKI,IACvD0C,KAAKmL,WAAWjO,EAAKI,EAGjC,EAEU,YAAAoN,cAAV,WACI1K,KAAK+I,OAAOjD,iBAAiB,YAAa9F,KAAKoL,iBAAiB,GAChEpL,KAAK+I,OAAOjD,iBAAiB,QAAS9F,KAAKqL,aAAa,GACxDpC,OAAOnD,iBAAiB,eAAgB9F,KAAKsL,cAC7CrC,OAAOnD,iBAAiB,SAAU9F,KAAK8I,cACvC9I,KAAK8J,QAAQhE,iBAAiB,QAAS9F,KAAKuL,MAC5C5I,SAASyD,KAAKN,iBAAiB,UAAW9F,KAAKwL,eAC/CxL,KAAK+I,OAAOjD,iBAAiB,YAAa9F,KAAKyL,gBACnD,EAOU,YAAAC,4BAAV,SAAsC3F,GAClC,IAAM4F,EAAW,UAASC,kBAAkB7F,EAAO/F,KAAK+I,QAExD,OADe3G,KAAKyJ,OAAOF,EAASG,EAAI9L,KAAKwJ,WAAaxJ,KAAKsJ,OAEnE,EAEU,YAAAjL,WAAV,WACI2B,KAAK4I,MAAO,IAAAvK,YAAW2B,KAAK4I,MAExB5I,KAAKiK,mBACLjK,KAAKiK,kBAAkBQ,aAAazK,KAAK4I,KAEjD,EAEU,YAAAmD,SAAV,WACI/L,KAAKgM,aACLhM,KAAK2J,QAAQmB,UAAYE,EAAKE,SAASlL,KAAK4I,MAC5C5I,KAAKiM,gBAAgBjM,KAAK6I,kBAC9B,EAEU,YAAAqD,SAAV,WACI,GAAIlM,KAAK/C,MAAM+C,KAAK6I,mBAAmB,KAAO,EAAAtL,KAAKC,MAAO,CACtD,IAAMF,EAAM,UAAWY,QAAQ8B,KAAK/C,MAAO+C,KAAK4I,KAAM5I,KAAK6I,mBAK3D,OAHA7I,KAAK2J,QAAQmB,UAAYE,EAAKE,SAASlL,KAAK4I,MAC5C5I,KAAKmL,WAAWnL,KAAK6I,kBAAmBvL,GAEjCA,C,CAEP,OAAQ,CAEhB,EAIU,YAAA6O,sBAAV,sBACInM,KAAKoM,gBAEDpM,KAAK8J,SACL9J,KAAK8J,QAAQ9G,UAAUC,IAAI,QAG/BoJ,YAAW,WACP,EAAKC,cACL,EAAKC,WAED,EAAKtC,mBACL,EAAKA,kBAAkBuC,OAE/B,GAAG,IACP,EAEU,YAAAP,gBAAV,SAA0BvO,GACtBsC,KAAK2J,QAAQ8C,YACbzM,KAAK2J,QAAQ+C,IAAI1M,KAAKwJ,UAAY9L,EAASsC,KAAKsJ,OAAQtJ,KAAKqJ,aAAcrJ,KAAKqJ,aAAc,EAAG,EAAIjH,KAAKuK,IAC1G3M,KAAK2J,QAAQiD,YACb5M,KAAK2J,QAAQkD,MACjB,EAIQ,YAAAb,WAAR,WACIhM,KAAK2J,QAAQmD,UAAU,EAAG,EAAG9M,KAAK+I,OAAOI,MAAO6B,EAAKC,eACzD,EAEU,YAAAmB,cAAV,WACIpM,KAAK+I,OAAOgE,oBAAoB,YAAa/M,KAAKoL,iBAAiB,GACnEpL,KAAK+I,OAAOgE,oBAAoB,QAAS/M,KAAKqL,aAAa,GAC3DpC,OAAO8D,oBAAoB,eAAgB/M,KAAKsL,cAChDrC,OAAO8D,oBAAoB,SAAU/M,KAAK8I,cAC1C9I,KAAK8J,QAAQiD,oBAAoB,QAAS/M,KAAKuL,MAC/C5I,SAASyD,KAAK2G,oBAAoB,UAAW/M,KAAKwL,eAClDxL,KAAK+I,OAAOgE,oBAAoB,YAAa/M,KAAKyL,gBACtD,EAEU,YAAAF,KAAV,WACIvL,KAAKoM,gBACLpM,KAAKuM,WACLvM,KAAKsM,cAEDtM,KAAKiK,mBACLjK,KAAKiK,kBAAkBuC,OAE/B,EAyBU,YAAAF,YAAV,WACItM,KAAK4I,KAAO,EAAArL,KAAKgF,IACjB,UAAWvF,UAAUgD,KAAK/C,OAEtB+C,KAAKiK,mBACLjK,KAAKiK,kBAAkB+C,OAE/B,EAEQ,YAAA7B,WAAR,SAAmBzN,EAAgBJ,GAC/B0C,KAAK2J,QAAQ8C,YACbzM,KAAK2J,QAAQ+C,IAAI1M,KAAKwJ,UAAY9L,EAASsC,KAAKsJ,OAA8B,EAAtB0B,EAAKC,eAAqB3N,EAAM0C,KAAKuJ,OAAQvJ,KAAKqJ,aAAc,EAAa,EAAVjH,KAAKuK,IAChI3M,KAAK2J,QAAQiD,YACb5M,KAAK2J,QAAQkD,MACjB,EAEU,YAAAI,wBAAV,WACI,OAAOjN,KAAKiK,mBAAqBjK,KAAKiK,kBAAkBgD,yBAC5D,EAEQ,YAAA1C,SAAR,WACIvK,KAAK+I,OAAO/F,UAAUE,OAAO,QAC7BlD,KAAK8J,QAAQ9G,UAAUE,OAAO,QAC9BlD,KAAKmK,wBAAwBnH,UAAUE,OAAO,QAC9ClD,KAAKqK,SAASrH,UAAUC,IAAI,OAChC,EAEQ,YAAAsJ,SAAR,WACIvM,KAAK+I,OAAO/F,UAAUC,IAAI,QAC1BjD,KAAK8J,QAAQ9G,UAAUC,IAAI,QAC3BjD,KAAKmK,wBAAwBnH,UAAUC,IAAI,QAC3CjD,KAAKqK,SAASrH,UAAUE,OAAO,OACnC,EAEiB,EAAAgI,SAAjB,SAA0B/M,GACtB,IAAItB,EAAgB,GACpB,OAAQsB,GACJ,KAAK,EAAAZ,KAAKC,MACNX,EAAQ,cACR,MACJ,KAAK,EAAAU,KAAKgF,IACN1F,EAAQ,MACR,MACJ,KAAK,EAAAU,KAAKiF,MACN3F,EAAQ,cAGhB,OAAOA,CACX,EAnOe,EAAAoO,eAAyB,GAGvB,EAAAiC,aAA8B,CAAC,IAAK,IAAK,aACzC,EAAAC,cAA+B,CAAC,IAAK,IAAK,cAiO/D,C,CAtPA,G,UAA8BnC,C,siBCL9B,YACA,SACA,SACA,SAEA,SACA,SACA,SACA,SACA,SACA,SAGA,cASI,WAAoBtG,GAApB,MACI,YAAMA,IAAQ,K,OAqCV,EAAA0I,gBAAkB,SAACC,GACvB,GAAI,EAAA1O,YAAYwC,iBAAiBkM,GAAc,CAC3C,IAAMvJ,EAAOuJ,EACT,EAAKC,QAAU,EAAKrD,oBAChBnG,EAAK9B,eACL,EAAKuL,qBACD,EAAKD,OAAOE,mBAAqB,EAAAjQ,KAAKgF,IACtC,EAAK0H,kBAAkBwD,eAAe3J,EAAK9B,cACpC,EAAKsL,OAAOE,mBAAqB,EAAAjQ,KAAKiF,OAC7C,EAAKyH,kBAAkByD,aAAa5J,EAAK9B,eAI7C8B,EAAK/B,aACD,EAAKuL,OAAOE,mBAAqB,EAAAjQ,KAAKgF,IACtC,EAAK0H,kBAAkByD,aAAa5J,EAAK/B,YAClC,EAAKuL,OAAOE,mBAAqB,EAAAjQ,KAAKiF,OAC7C,EAAKyH,kBAAkBwD,eAAe3J,EAAK/B,aAI/C+B,EAAK3F,QACD2F,EAAK3F,QAAU,EAAAZ,KAAKgF,IACpB,EAAK0H,kBAAkByD,aAAa,EAAKJ,OAAOK,iBAEhD,EAAK1D,kBAAkBwD,eAAe,EAAKH,OAAOK,kB,CA6BlE,GAvBI,EAAAhP,YAAY4C,gBAAgB8L,KAER,eADdvJ,EAAOuJ,GACJtM,SACL,EAAK8H,kBAAoB/E,EAAKpG,OAC9B,EAAKqO,YAGW,UAAhBjI,EAAK/C,SACL,EAAK6H,KAAO9E,EAAK3F,MACjB,EAAK0K,kBAAoB/E,EAAKpG,OAC9B,EAAKwO,aAIT,EAAAvN,YAAY6C,kBAAkB6L,KACxBvJ,EAAOuJ,GACJpL,UAAY6B,EAAKnG,cACtB,EAAKiL,KAAO9E,EAAKnG,YACjB,EAAKiQ,cAAgB,EAAAxP,gBACrB,EAAKmP,sBAIT,EAAA5O,YAAY8C,gBAAgB4L,GAAc,CACpCvJ,EAAOuJ,EAAb,IACIlL,EAAiB,KACjB,EAAK8H,oBAED9H,EADA2B,EAAK3B,SAAW,EAAA5E,KAAKgF,IACZ,UAAG,EAAK0H,kBAAkB4D,eAAc,UAExC,UAAG,EAAK5D,kBAAkB6D,iBAAgB,aAG3D,EAAKC,cAAc5L,EAAQ2B,EAAK3B,QAEhC,EAAKgK,wBACLxJ,SAASyD,KAAKpD,UAAUE,OAAO,U,CAG/B,EAAAvE,YAAY+C,aAAa2L,KACzB,UAAOjF,OAAO,CACVzD,GAAI,EAAA8D,UAAUuF,QACd7I,KAAM,CAAC,yBACPL,MAAO,OAEXnC,SAASyD,KAAKpD,UAAUE,OAAO,WAC/B,EAAKiJ,yBAGL,EAAAxN,YAAYgD,qBAAqB0L,KAC3BvJ,EAAOuJ,EACb,EAAKzE,KAAO9E,EAAKnG,YACjB,EAAK4P,qBACD,EAAKtD,mBACL,EAAKA,kBAAkBQ,aAAa,EAAK7B,OAI7C,EAAAjK,YAAYiD,oBAAoByL,KAChC,UAAOjF,OAAO,CACVzD,GAAI,EAAA8D,UAAUuF,QACd7I,KAAM,CAAC,wCACPL,MAAO,sBAEXnC,SAASyD,KAAKpD,UAAUE,OAAO,WAC/B,EAAKiJ,yBAGL,EAAAxN,YAAYkD,eAAewL,KACrBvJ,EAAOuJ,EACb,UAAO/E,sBACP,UAAOF,OAAO,CACVzD,GAAI,EAAA8D,UAAUwF,YACd9I,KAAM,CAACrB,EAAK5C,OACZ4D,MAAO,UAEXnC,SAASyD,KAAKpD,UAAUE,OAAO,WAC/B,EAAKiJ,wBAEb,EAEQ,EAAA+B,cAAgB,WACpB,YAAM3C,KAAI,OACd,EAWU,EAAAH,gBAAkB,SAACrF,GACzB,GAAI,EAAKuH,QAAU,EAAK1E,OAAS,EAAK0E,OAAOE,kBAAoB,EAAKP,0BAA2B,CAC7F,EAAKpE,kBAAoB,EAAK6C,4BAA4B3F,GAC1D,EAAKgG,WAEL,IAAMjI,EAAO,IAAI,EAAA/E,cAAc,EAAK8J,kBAAmB,YAAa,EAAKD,MACzE,EAAK0E,OAAOa,KAAKrK,E,CAEzB,EAEU,EAAAuH,YAAc,SAACtF,GACrB,GAAI,EAAKuH,QAAU,EAAK1E,OAAS,EAAK0E,OAAOE,kBAAoB,EAAKP,0BAA2B,CAC7F,EAAKpE,kBAAoB,EAAK6C,4BAA4B3F,GAE1D,IAAMjC,EAAO,IAAI,EAAA/E,cAAc,EAAK8J,kBAAmB,QAAS,EAAKD,MACrE,EAAK0E,OAAOa,KAAKrK,GAEjB,EAAKoI,U,CAEb,EAEU,EAAAT,gBAAkB,SAAC1F,GACzB,GAAI,EAAKuH,QAAU,EAAK1E,OAAS,EAAK0E,OAAOE,kBAAoB,EAAKP,0BAA2B,CAC7F,IAAMmB,EAAarI,EAAMsI,eAAe,GACxC,EAAKxF,kBAAoB,EAAK6C,4BAA4B0C,GAC1D,EAAKrC,WAEL,IAAMjI,EAAO,IAAI,EAAA/E,cAAc,EAAK8J,kBAAmB,YAAa,EAAKD,MACzE,EAAK0E,OAAOa,KAAKrK,E,CAEzB,EA2BO,EAAAyH,KAAO,WACV,UAAOrD,QAAQ,CACXvD,GAAI,EAAA8D,UAAU6F,SACdxJ,MAAO,KACPK,KAAM,CAAC,4DACPK,YAAa,EAAK+I,YAClB5I,WAAY,WAAO,EACnBD,SAAU,MACVE,QAAS,SAEjB,EAEQ,EAAA2I,YAAc,WACd,EAAKjB,QACL,EAAKA,OAAOkB,QAEhB,UAAOlG,sBACP3F,SAASyD,KAAKpD,UAAUE,OAAO,WAE/B,YAAMqI,KAAI,OACd,EAEU,EAAAD,aAAe,SAACvF,GAEtBA,EAAMa,iBACNb,EAAM0I,aAAc,CACxB,EAwBQ,EAAAC,sBAAwB,WACxB,EAAKzB,4BACL,EAAKW,gBACL,EAAKe,cAAc5K,UAAY,EAAK6J,cAAchG,WAClD,EAAKgH,sBAEb,EA0BQ,EAAAC,0BAA4B,SAAC9M,GAC7B,EAAKuL,SACD,EAAKA,OAAOE,mBAAqB,EAAAjQ,KAAKgF,IACtC,EAAK0H,kBAAkByD,aAAa3L,GAEpC,EAAKkI,kBAAkBwD,eAAe1L,GAGlD,EAEU,EAAAyJ,cAAgB,SAACzF,GACvB,GAAI,EAAKuH,QAAU,EAAK1E,OAAS,EAAK0E,OAAOE,kBAAoB,EAAKP,0BAA2B,CAC7F,IAAInJ,OAAI,EAEJ,UAAKoJ,aAAa4B,SAAS/I,EAAMC,MAC7B,EAAK6C,kBAAoB,IACzB,EAAKA,oBAEL/E,EAAO,IAAI,EAAA/E,cAAc,EAAK8J,kBAAmB,YAAa,EAAKD,MACnE,EAAK0E,OAAOa,KAAKrK,GAEjB,EAAKiI,YAIT,UAAKoB,cAAc2B,SAAS/I,EAAMC,MAC9B,EAAK6C,kBAAoB,EAAA/L,WAAWK,QAAU,IAC9C,EAAK0L,oBAEL/E,EAAO,IAAI,EAAA/E,cAAc,EAAK8J,kBAAmB,YAAa,EAAKD,MACnE,EAAK0E,OAAOa,KAAKrK,GAEjB,EAAKiI,YAIK,MAAdhG,EAAMC,MACNlC,EAAO,IAAI,EAAA/E,cAAc,EAAK8J,kBAAmB,QAAS,EAAKD,MAC/D,EAAK0E,OAAOa,KAAKrK,GAEjB,EAAKoI,W,CAIK,WAAdnG,EAAMC,KACN,EAAKuF,MAEb,EA1VQ7G,EAAQqK,mBACR,EAAKJ,cAAgBhM,SAASC,eAAe8B,EAAQqK,mB,CAE7D,CAyVJ,OAxWyC,OAiBvB,EAAAC,YAAd,SAA0BtK,GAItB,OAHKuK,EAAYC,WACbD,EAAYC,SAAW,IAAID,EAAYvK,IAEpCuK,EAAYC,QACvB,EAEO,YAAA5E,MAAP,WACI,IAAM9G,GAAO,IAAAJ,YACTI,GACAxD,KAAKmP,aAAa3L,GAClBxD,KAAKoP,iBACL,YAAM9E,MAAK,WACX3H,SAASyD,KAAKpD,UAAUC,IAAI,YAE5B,UAAOmF,OAAO,CACVtD,MAAO,QACPK,KAAM,CAAC,uBACPR,GAAI,EAAA8D,UAAUwF,aAG1B,EAEQ,YAAAkB,aAAR,SAAqB3L,GACjBxD,KAAKsN,OAAS,IAAI,UAAO9J,GACzBxD,KAAKsN,OAAO+B,kBAAoBrP,KAAKoN,gBACrCpN,KAAKsN,OAAOgC,gBAAkBtP,KAAKkO,cACnClO,KAAKsN,OAAOiC,aAAevP,KAAKuO,WACpC,EAsHU,YAAAjC,YAAV,WACI,YAAMA,YAAW,WACjBtM,KAAKwP,gBAEDxP,KAAKsN,QACLtN,KAAKsN,OAAOkB,OAEpB,EAkCU,YAAAtC,SAAV,WACI,GAAIlM,KAAK/C,MAAM+C,KAAK6I,mBAAmB,KAAO,EAAAtL,KAAKC,MAAO,CACtD,IAAMF,EAAM,YAAM4O,SAAQ,WAS1B,OANAlM,KAAK3B,aACL2B,KAAK2J,QAAQmB,UAAY,UAAKI,SAASlL,KAAK4I,MAC5C5I,KAAKiM,gBAAgBjM,KAAK6I,mBAC1B,UAAM4G,UAAU,EAAA9G,MAAM+G,UACtB1P,KAAKuN,qBAEEjQ,C,CAEP,OAAQ,CAEhB,EAEQ,YAAAiQ,mBAAR,WACQvN,KAAKsN,OAAOE,mBAAqBxN,KAAK4I,KACtCjG,SAASyD,KAAKpD,UAAUE,OAAO,WAE/BP,SAASyD,KAAKpD,UAAUC,IAAI,UAEpC,EA8BU,YAAA8K,cAAV,SAAwB5L,EAAgBxE,GACpC,IAAIgS,EAAwB,IAAIvS,MAChCuS,EAAOC,KAAK,UAAGzN,EAAM,WACjBnC,KAAKsN,QAAUtN,KAAKsN,OAAOE,mBAAqB7P,GAChDgS,EAAOC,KAAK,YACZ,UAAMH,UAAU,EAAA9G,MAAMkH,OAEtBF,EAAOC,KAAK,aACZ,UAAMH,UAAU,EAAA9G,MAAMmH,OAE1B,UAAO1H,OAAO,CACVzD,GAAI,EAAA8D,UAAUuF,QACd7I,KAAMwK,EACN7K,MAAO,aAEf,EAEU,YAAAzG,WAAV,WACI,YAAMA,WAAU,WAChB2B,KAAK+P,gBACT,EAUQ,YAAAnB,oBAAR,WACQ5O,KAAK4N,cAAgB,EAAAxP,gBAAkB,GACvC4B,KAAK2O,cAAc3L,UAAUC,IAAI,cACjCjD,KAAK2O,cAAc3L,UAAUE,OAAO,cAEpClD,KAAK2O,cAAc3L,UAAUE,OAAO,cACpClD,KAAK2O,cAAc3L,UAAUC,IAAI,YAEzC,EAEQ,YAAAmM,eAAR,WACIpP,KAAK4N,cAAgB,EAAAxP,gBACrB4B,KAAKgQ,sBAAwB/G,OAAOgH,YAAYjQ,KAAK0O,sBAAuB,IAChF,EAEQ,YAAAc,cAAR,WACIU,cAAclQ,KAAKgQ,uBACnBhQ,KAAK2O,cAAc5K,UAAY,EACnC,EAEQ,YAAAgM,eAAR,WACI/P,KAAK4N,cAAgB,EAAAxP,eACzB,EAmDJ,EAxWA,CAAyC,W,4ECbzC,aACA,SACA,SAEA,aAMI,WAAmB2L,EAAqBC,GAAxC,WAsCQ,KAAAmG,WAAa,SAACpP,GAClB,IAAMqP,EAAWzN,SAASC,eAAe,oBACnCyN,EAAa1N,SAASC,eAAe,sBAC3C,GAAIwN,EAASvT,OAASwT,EAAWxT,OAASuT,EAASvT,MAAMyT,QAAUD,EAAWxT,MAAMyT,OAKhF,OAJA,EAAKC,UAAYH,EAASvT,MAC1B,EAAK2T,YAAcH,EAAWxT,MAC9B,EAAK2N,mBACLzJ,IACO,IAEf,EAEQ,KAAA0P,eAAiB,SAAC1P,GACtBA,GACJ,EAnDQgJ,IACA/J,KAAK0Q,cAAgB/N,SAASC,eAAemH,IAG7CC,IACAhK,KAAK2Q,gBAAkBhO,SAASC,eAAeoH,GAEvD,CA4HJ,OA1HW,YAAA4G,iBAAP,SAAwBC,EAAoBC,GAA5C,WACSC,aAAahO,QAAQ,cAAiBgO,aAAahO,QAAQ,gBAC5D,UAAOsF,OAAO,CACV1D,GAAI,EAAA8D,UAAUuI,YACdlM,MAAO,gBACPK,KAAM,CAAC,uDACP0B,KAAM,WAAM,SAAKsJ,WAAWU,EAAhB,EACZ5J,SAAU,WAAM,SAAKwJ,eAAeK,EAApB,EAChB9J,OAAQ,CACJ,CACIO,MAAO,aACPF,KAAM,MACN5C,KAAM,OACNgD,MAAO,GACPC,UAAU,GAEd,CACIH,MAAO,eACPF,KAAM,QACN5C,KAAM,OACNgD,MAAO,GACPC,UAAU,KAK9B,EAkBO,YAAA8C,iBAAP,WACI,IAAMyG,EAAU,wBACZjR,KAAK2Q,kBACA3Q,KAAKwQ,YAGNxQ,KAAK2Q,gBAAgB5M,UAAY/D,KAAKwQ,YAFtCxQ,KAAK2Q,gBAAgB5M,UAAYkN,GAKrCjR,KAAK0Q,gBACA1Q,KAAKuQ,UAGNvQ,KAAK0Q,cAAc3M,UAAY/D,KAAKuQ,UAFpCvQ,KAAK0Q,cAAc3M,UAAYkN,EAK3C,EAEO,YAAAzE,MAAP,WACQxM,KAAK2Q,kBACL3Q,KAAK2Q,gBAAgB5M,UAAY,IAEjC/D,KAAK0Q,gBACL1Q,KAAK0Q,cAAc3M,UAAY,GAEvC,EAEO,YAAAiJ,MAAP,WACIhN,KAAKuQ,UAAY,KACjBvQ,KAAKwQ,YAAc,IACvB,EAEO,YAAA3C,aAAP,WACI,OAAO7N,KAAKuQ,SAChB,EAEO,YAAAzC,eAAP,WACI,OAAO9N,KAAKwQ,WAChB,EAEO,YAAAvD,wBAAP,WACI,QAASjN,KAAKuQ,aAAevQ,KAAKwQ,WACtC,EAEO,YAAAU,qBAAP,WACIH,aAAa7M,QAAQ,YAAalE,KAAKuQ,WACvCQ,aAAa7M,QAAQ,cAAelE,KAAKwQ,YAC7C,EAEO,YAAAW,oBAAP,WACInR,KAAKuQ,UAAYQ,aAAahO,QAAQ,aACtC/C,KAAKwQ,YAAcO,aAAahO,QAAQ,cAC5C,EAEO,YAAA2K,aAAP,SAAoB3L,GAChB/B,KAAKuQ,UAAYxO,EACb/B,KAAK0Q,gBACL1Q,KAAK0Q,cAAc3M,UAAY/D,KAAKuQ,UAE5C,EAEO,YAAA9C,eAAP,SAAsB1L,GAClB/B,KAAKwQ,YAAczO,EACf/B,KAAK2Q,kBACL3Q,KAAK2Q,gBAAgB5M,UAAY/D,KAAKwQ,YAE9C,EAEO,YAAA/F,aAAP,SAAoB7B,GACZA,IAAS,EAAArL,KAAKgF,KACdvC,KAAK0Q,cAAc1N,UAAUC,IAAI,eACjCjD,KAAK2Q,gBAAgB3N,UAAUE,OAAO,iBAEtClD,KAAK2Q,gBAAgB3N,UAAUC,IAAI,eACnCjD,KAAK0Q,cAAc1N,UAAUE,OAAO,eAE5C,EAEJ,EA1IA,G,yECJA,iBAII,WAAY4I,EAAWsF,GACnBpR,KAAK8L,EAAIA,EACT9L,KAAKoR,EAAIA,CACb,CAiBJ,OAfkB,EAAAxF,kBAAd,SAAgC7F,EAA2BgD,GACvD,IAAI+C,EACAsF,EAWJ,YAVoBC,IAAhBtL,EAAMuL,YAAuCD,IAAhBtL,EAAMwL,OACnCzF,EAAI/F,EAAMuL,MACVF,EAAIrL,EAAMwL,QAGVzF,EAAI/F,EAAMyL,QAAU7O,SAASyD,KAAKqL,WAAa9O,SAAS+O,gBAAgBD,WACxEL,EAAIrL,EAAM4L,QAAUhP,SAASyD,KAAKwL,UAAYjP,SAAS+O,gBAAgBE,WAIpE,IAAIC,EAFX/F,GAAK/C,EAAO+I,WACZV,GAAKrI,EAAOgJ,UAEhB,EACJ,EAxBA,G,ijBCAA,aACA,SAEA,SACA,SACA,SACA,SACA,SAEA,cAKI,WAAoBrN,GAApB,MACI,YAAMA,IAAQ,K,OAcV,EAAAsN,SAAW,WACX,EAAKC,OACL,EAAKA,MAAMC,KAEnB,EAsCQ,EAAAC,qBAAuB,WAC3B,EAAKC,kBACL,EAAKC,iBACT,EAEQ,EAAAC,mBAAqB,WACzBvB,aAAavE,QACb,EAAK5D,MAAO,IAAAtK,kBACZ,EAAK+T,iBACT,EA8BU,EAAAjH,gBAAkB,SAACrF,GACrB,EAAKkH,4BACL,EAAKpE,kBAAoB,EAAK6C,4BAA4B3F,GAC1D,EAAKgG,WAEb,EAEU,EAAAV,YAAc,SAACtF,GACjB,EAAKkH,4BACL,EAAKpE,kBAAoB,EAAK6C,4BAA4B3F,GAC1D,EAAKmG,WAEb,EAEU,EAAAT,gBAAkB,SAAC1F,GACzB,GAAI,EAAKkH,0BAA2B,CAChC,IAAMmB,EAAarI,EAAMsI,eAAe,GACxC,EAAKxF,kBAAoB,EAAK6C,4BAA4B0C,GAC1D,EAAKrC,U,CAEb,EAEO,EAAAR,KAAO,WACV,EAAKgH,WACL,UAAOjK,sBAEH,EAAK2J,OACL,EAAKA,MAAMO,OAGf,YAAMjH,KAAI,OACd,EAEU,EAAAD,aAAe,WACrB,EAAKiH,UACT,EAEQ,EAAAE,qBAAuB,WACvB,EAAKR,OACL,EAAKA,MAAMS,yBAEnB,EAyFU,EAAAlH,cAAgB,SAACzF,GACnB,EAAKkH,4BACD,UAAKC,aAAa4B,SAAS/I,EAAMC,MAC7B,EAAK6C,kBAAoB,IACzB,EAAKA,oBACL,EAAKkD,YAIT,UAAKoB,cAAc2B,SAAS/I,EAAMC,MAC9B,EAAK6C,kBAAoB,UAAW1L,QAAU,IAC9C,EAAK0L,oBACL,EAAKkD,YAIK,MAAdhG,EAAMC,KACN,EAAKkG,YAIK,WAAdnG,EAAMC,KACN,EAAKuF,MAEb,EAvPQ7G,EAAQqK,mBACR,EAAKkD,MAAQ,IAAI,UAAMvN,EAAQqK,mB,CAEvC,CAsPJ,OAjQ4C,OAa1B,EAAAC,YAAd,SAA0BtK,GAItB,OAHKiO,EAAezD,WAChByD,EAAezD,SAAW,IAAIyD,EAAejO,IAE1CiO,EAAezD,QAC1B,EAQO,YAAA5E,MAAP,WACItK,KAAK4S,eACT,EAEQ,YAAAP,gBAAR,WACQrS,KAAKiK,mBACLjK,KAAKiK,kBAAkB2G,iBAAiB5Q,KAAKgS,SAAUhS,KAAKuL,MAG5DvL,KAAKiN,2BACLjN,KAAKgS,WAGT,YAAM1H,MAAK,UACf,EAEQ,YAAAsI,cAAR,WACI,IAAI3V,EAAQ8T,aAAahO,QAAQ,SAC7B8P,EAAW9B,aAAahO,QAAQ,YAEhC9F,GAAS4V,EACT,UAAO3K,QAAQ,CACXvD,GAAI,EAAA8D,UAAUqK,aACdhO,MAAO,KACPK,KAAM,CAAC,sDACPK,YAAaxF,KAAKmS,qBAClBxM,WAAY3F,KAAKsS,mBACjB5M,SAAU,QACVE,QAAS,SAGb5F,KAAK4I,MAAO,IAAAtK,kBACZ0B,KAAKqS,kBAEb,EAaQ,YAAAD,gBAAR,WACIpS,KAAK4I,KAAOmK,SAAShC,aAAahO,QAAQ,aAC1C/C,KAAK/C,MAAQqG,KAAKC,MAAMwN,aAAahO,QAAQ,UAEzC/C,KAAKiS,OACLjS,KAAKiS,MAAMe,oCAGXhT,KAAKiK,mBACLjK,KAAKiK,kBAAkBkH,qBAE/B,EAEQ,YAAAoB,SAAR,WACQvS,KAAKiN,4BACL8D,aAAa7M,QAAQ,WAAYlE,KAAK4I,KAAKhB,YAC3CmJ,aAAa7M,QAAQ,QAASZ,KAAKa,UAAUnE,KAAK/C,QAE9C+C,KAAKiK,mBACLjK,KAAKiK,kBAAkBiH,uBAGvBlR,KAAKiS,OACLjS,KAAKiS,MAAMgB,mCAGvB,EA6CU,YAAA9G,sBAAV,WAEI4E,aAAavE,QAETxM,KAAKiS,OACLjS,KAAKiS,MAAMO,OAGf,YAAMrG,sBAAqB,UAC/B,EAEU,YAAAD,SAAV,WACI,GAAIlM,KAAK/C,MAAM+C,KAAK6I,mBAAmB,KAAO,EAAAtL,KAAKC,MAAO,CACtD,IAAMF,EAAM,YAAM4O,SAAQ,WAI1B,GAFkB,UAAWzO,sBAAsBuC,KAAK/C,MAAO+C,KAAK6I,kBAAmBvL,EAAK0C,KAAK4I,OAEhF,EAAG,CAChB,IAAIzG,EAAiB,GAEjBnC,KAAKiK,oBACDjK,KAAK4I,OAAS,EAAArL,KAAKgF,IACnBJ,EAAS,UAAGnC,KAAKiK,kBAAkB4D,eAAc,UAC1C7N,KAAK4I,OAAS,EAAArL,KAAKiF,QAC1BL,EAAS,UAAGnC,KAAKiK,kBAAkB6D,iBAAgB,cAI3D9N,KAAK+N,cAAc5L,EAAQnC,KAAK4I,MAChC5I,KAAKmM,uB,MACF,GAAI,UAAWnO,YAAYgC,KAAK/C,OAAQ,CAC3C,IAAIiW,EAAkB,GAClBlT,KAAKiK,oBACLiJ,GAAW,UAAGlT,KAAKiK,kBAAkB4D,eAAc,sBAAc7N,KAAKiK,kBAAkB6D,iBAAgB,aAE5GoF,GAAW,aACX,UAAO9K,OAAO,CACVzD,GAAI,EAAA8D,UAAUuF,QACdlJ,MAAO,MACPK,KAAM,CAAC+N,KAEXlT,KAAKmM,uB,MAELnM,KAAK3B,aACL2B,KAAK2J,QAAQmB,UAAY,UAAKI,SAASlL,KAAK4I,MAC5C5I,KAAKiM,gBAAgBjM,KAAK6I,mBAC1B,UAAM4G,UAAU,EAAA9G,MAAM+G,UAG1B,OAAOpS,C,CAEP,OAAQ,CAEhB,EAEU,YAAAoN,cAAV,WACI,YAAMA,cAAa,WACnB/H,SAASmD,iBAAiB,mBAAoB9F,KAAKyS,qBACvD,EAEU,YAAArG,cAAV,WACI,YAAMA,cAAa,WACnBzJ,SAASoK,oBAAoB,mBAAoB/M,KAAKyS,qBAC1D,EAEU,YAAA1E,cAAV,SAAwB5L,EAAgBgR,GACpC,IAAIxD,EAAwB,IAAIvS,MAChCuS,EAAOC,KAAK,UAAGzN,EAAM,WACjBnC,KAAKiS,OACLtC,EAAOC,KAAK,sBAAe5P,KAAKiS,MAAMmB,0BAE1C,UAAM3D,UAAU,EAAA9G,MAAMkH,KACtB,UAAOzH,OAAO,CACVzD,GAAI,EAAA8D,UAAUuF,QACd7I,KAAMwK,EACN7K,MAAO,qBAEf,EAEU,YAAAwH,YAAV,WACI,YAAMA,YAAW,WAEbtM,KAAKiS,OACLjS,KAAKiS,MAAMjF,OAEnB,EA4BJ,EAjQA,CAA4C,W,4ECT5C,aACA,SACA,SAGA,SAEA,aASI,WAAmBxJ,GAAnB,WAiCO,KAAAgK,eAAiB,WAAY,SAAK6F,WAAL,EAC7B,KAAA1F,cAAgB,WAAc,SAAK5L,UAAL,EAE7B,KAAAuR,UAAY,SAACvN,GACjB,IAAMsH,EAA2B/J,KAAKC,MAAMwC,EAAMjC,MAElD,GAAI,EAAAnF,YAAYwC,iBAAiBkM,GAAc,CAC3C,IAAMvJ,EAAOuJ,EAER,EAAKvL,SACN,EAAKA,OAASgC,EAAKhC,QAGlB,EAAKC,aACN,EAAKA,WAAa+B,EAAK/B,YAGtB,EAAKsR,cACN,EAAKA,YAAcvP,EAAK3F,M,CAI5B,EAAKkR,mBACL,EAAKA,kBAAkBhC,EAE/B,EAEQ,KAAAkG,QAAU,WACd,EAAKjE,kBACL,UAAOhH,sBACP,UAAOF,OAAO,CACVzD,GAAI,EAAA8D,UAAUwF,YACd9I,KAAM,CAAC,iCACPL,MAAO,UAGXnC,SAASyD,KAAKpD,UAAUE,OAAO,UACnC,EAEQ,KAAAsQ,QAAU,WACd,EAAKC,SACT,EAzEIzT,KAAKyT,QAAQjQ,EACjB,CAyEJ,OAvEY,YAAAiQ,QAAR,SAAgBjQ,QAAA,IAAAA,IAAAA,EAAA,MACZ,IAAIkQ,EAAc,UAAOnP,SAErBf,IACAkQ,GAAO,iBAAUlQ,EAAKG,MAAK,oBAAYH,EAAKI,UAG5C5D,KAAKqT,cAAgBhS,MAAMrB,KAAK8B,UAChC4R,GAAO,uBAAgB1T,KAAKqT,YAAW,mBAAWrT,KAAK8B,OAAM,uBAAe9B,KAAK+B,aAGrF/B,KAAK2T,UAAY,IAAIC,UAAUF,GAE/B1T,KAAK2T,UAAUE,UAAY7T,KAAKsT,UAChCtT,KAAK2T,UAAUG,QAAU9T,KAAKuT,QAC9BvT,KAAK2T,UAAUI,QAAU/T,KAAKwT,OAClC,EAEO,YAAArF,KAAP,SAAYrK,GACR9D,KAAK2T,UAAUxF,KAAK7K,KAAKa,UAAUL,GACvC,EAEO,YAAA0K,MAAP,WACIxO,KAAK2T,UAAUI,QAAU,KACzB/T,KAAK2T,UAAUE,UAAY,KAC3B7T,KAAK2T,UAAUG,QAAU,KACzB9T,KAAK2T,UAAUnF,OACnB,EA4CJ,EApFA,G,0ECPA,iBAMI,WAAmBwF,GAAnB,WAKQ,KAAAC,cAAgB,WACpB,EAAKC,iBACL,IAAMC,EAAkB/R,KAAKC,MAAM,EAAK6R,eAAiB,IACnDE,EAAkB,EAAKF,eAAiB,GAC9C,EAAKG,UAAUtQ,UAAY,UAAGoQ,EAAO,YAAKC,EAAU,GAAK,IAAM,IAAG,OAAGA,GAEjE,EAAKC,UAAUrR,UAAUgF,SAAS,SAClCkI,cAAc,EAAKoE,SAE3B,EAbItU,KAAKqU,UAAY1R,SAASC,eAAeoR,GACzChU,KAAKkU,eAAiB,CAC1B,CAwDJ,OA3CW,YAAAhC,IAAP,WACQlS,KAAKqU,YACLrU,KAAKqU,UAAUrR,UAAUE,OAAO,QAChClD,KAAKsU,SAAWrL,OAAOgH,YAAYjQ,KAAKiU,cAAe,KAE/D,EAEO,YAAAzB,KAAP,WACQxS,KAAKsU,WACLpE,cAAclQ,KAAKsU,UACnBtU,KAAKqU,UAAUtQ,UAAY,GAC3B/D,KAAKqU,UAAUrR,UAAUC,IAAI,QAErC,EAEO,YAAAyP,wBAAP,WACQ/P,SAAS4R,OACTrE,cAAclQ,KAAKsU,UAEnBtU,KAAKsU,SAAWrL,OAAOgH,YAAYjQ,KAAKiU,cAAe,IAE/D,EAEO,YAAAb,sBAAP,WACI,OAAIpT,KAAKqU,UACErU,KAAKqU,UAAUtQ,UAEf,EAEf,EAEO,YAAAkP,iCAAP,WACIlC,aAAa7M,QAAQ,iBAAkBlE,KAAKkU,eAAetM,WAC/D,EAEO,YAAAoL,kCAAP,WACIhT,KAAKkU,eAAiBnB,SAAShC,aAAahO,QAAQ,kBACxD,EAEO,YAAAiK,MAAP,WACIhN,KAAKkU,eAAiB,CAC1B,EAEJ,EAjEA,G,0ECAA,8BAUA,QATkB,EAAA5P,QAAd,WACI,MAA6B,UAAtBkQ,SAASC,UACa,cAAtBD,SAASE,QACpB,EAEc,EAAAjF,UAAd,SAAwBkF,GACR,IAAIC,MAAMD,GAChBE,MACV,EACJ,EAVA,G,8HCAA,aACA,SACA,SACA,SAEA,SACA,SAEMC,EAAYnS,SAASC,eAAe,UACpCmS,EAAapS,SAASC,eAAe,WACrCoS,EAAkBrS,SAASC,eAAe,gBAUhD,SAASqS,EAASC,GACd,IACI,IAAMxQ,EAAuB,CACzBgF,SAAU,QACVG,UAAW,UACXkF,iBAAkB,QAClBhF,YAAa,YACbC,cAAe,cACfI,OAAQ,OACRF,iBAAkB,kBAElBgL,IAAS,EAAAxM,SAASyM,QACD,UAAYnG,YAAYtK,GAChC4F,QAEQ,UAAe0E,YAAYtK,GACnC4F,O,CAEf,MAAO8K,GACL,UAAOhN,OAAO,CACVzD,GAAI,EAAA8D,UAAUwF,YACdnJ,MAAO,QACPK,KAAM,CAAC,0BAEXkQ,QAAQnU,MAAMkU,E,CAEtB,CAlCAN,EAAUhP,iBAAiB,SAAS,WAChCmP,EAAS,EAAAvM,SAAS4M,OACtB,IAAG,GAEHP,EAAWjP,iBAAiB,SAAS,WACjCmP,EAAS,EAAAvM,SAASyM,QACtB,IAAG,GA8BHH,EAAgBlP,iBAAiB,SAAS,WAatC,UAAOsC,OAAO,CACVzD,GAAI,EAAA8D,UAAU8M,aACdpQ,KAdS,CACT,2CACA,sHAEA,sIAEA,8RAIA,mCAKAL,MAAO,gBAEf,IAAG,GAEcnC,SAASC,eAAe,YAChCkD,iBAAiB,SAAS,SAACC,GAEhC,GADAA,EAAMa,iBACF4O,UAAUC,SAAU,CACpB,IAAMC,EAAY,CACdhC,IAAKc,SAASmB,KACd7Q,MAAO,qBAEX0Q,UAAUI,MAAMF,GACXG,OAAM,SAACC,GAAQ,OAAAT,QAAQnU,MAAM,iCAA0B4U,GAAxC,G,MAEpB,UAAO1N,OAAO,CACVzD,GAAI,EAAA8D,UAAUwF,YACdnJ,MAAO,QACPK,KAAM,CAAC,gCAGnB,IAEA8D,OAAO8M,OAAOC,SAASrR,GAAGsR,WAAW,CACjCC,UAAW,2EACX5P,SAAU,EAAA6P,qBAGUxT,SAASC,eAAe,gBAChCkD,iBAAiB,SAAS,WACtCmD,OAAO8M,OAAOC,SAASrR,GAAG0D,QAC9B,IAMkB1F,SAASC,eAAe,UAChCkD,iBAAiB,QAAS,EAAAsQ,O,GCrGhCC,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBlF,IAAjBmF,EACH,OAAOA,EAAa5Z,QAGrB,IAAI6Z,EAASJ,EAAyBE,GAAY,CAGjD3Z,QAAS,CAAC,GAOX,OAHA8Z,EAAoBH,GAAU/V,KAAKiW,EAAO7Z,QAAS6Z,EAAQA,EAAO7Z,QAAS0Z,GAGpEG,EAAO7Z,OACf,CCnB0B0Z,CAAoB,I","sources":["webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/board-logic.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/constants.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/enums/coin.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/index.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/action-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/current-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/disconnect-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/error-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/game-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/initial-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/skip-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/tie-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/winner-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/player-turn.js","webpack:///./src/lib/authentication.ts","webpack:///./src/lib/config.ts","webpack:///./src/lib/dialog/dialog.ts","webpack:///./src/lib/dialog/enums/dialog-type.ts","webpack:///./src/lib/enums/dialog-ids.ts","webpack:///./src/lib/enums/game-mode.ts","webpack:///./src/lib/enums/sound.ts","webpack:///./src/lib/game.ts","webpack:///./src/lib/network-game.ts","webpack:///./src/lib/player-name-section.ts","webpack:///./src/lib/position.ts","webpack:///./src/lib/same-device-game.ts","webpack:///./src/lib/socket.ts","webpack:///./src/lib/timer.ts","webpack:///./src/lib/utils.ts","webpack:///./src/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoardLogic = void 0;\nvar coin_1 = require(\"./enums/coin\");\nvar BoardLogic = exports.BoardLogic = /** @class */ (function () {\n    function BoardLogic() {\n    }\n    /**\n     * Initialises board matrix\n     * @param board - The board matrix\n     */\n    BoardLogic.initBoard = function (board) {\n        for (var col = 0; col < BoardLogic.columns; col++) {\n            board[col] = new Array(BoardLogic.rows);\n            for (var row = 0; row < BoardLogic.rows; row++) {\n                board[col][row] = coin_1.Coin.Empty;\n            }\n        }\n    };\n    /**\n     * Counts and checks the coin placeholders adjecent to the specified point (column x row). Matches may occurr,\n     * vertically, horizontally or diagonally.\n     * @param board - The board matrix\n     * @param column - The column number of the starting point\n     * @param row - The row number of the starting point\n     * @param currentTurn - Coin color to be checked\n     * @returns Count of adjecent coins with the same color\n     */\n    BoardLogic.countConsecutiveCoins = function (board, column, row, currentTurn) {\n        var count = row;\n        var coinCount = 0;\n        // Vertical check\n        while (coinCount < 4 && count < BoardLogic.rows && board[column][count] === currentTurn) {\n            coinCount++;\n            count++;\n        }\n        if (coinCount < 4) {\n            // Horizontal check\n            coinCount = 0;\n            count = column;\n            while (count < BoardLogic.columns && board[count][row] === currentTurn) {\n                coinCount++;\n                count++;\n            }\n            count = column - 1;\n            while (count > -1 && board[count][row] === currentTurn) {\n                coinCount++;\n                count--;\n            }\n            // Diagonal checks\n            if (coinCount < 4) {\n                coinCount = 0;\n                var rowCount = row - 1;\n                var colCount = column + 1;\n                while (coinCount < 4 && rowCount > -1 && colCount < BoardLogic.columns && board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount++; //right columns\n                    rowCount--; //upper rows\n                }\n                colCount = column;\n                rowCount = row;\n                while (coinCount < 4 && rowCount < BoardLogic.rows && colCount > -1 && board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount--; // left columns\n                    rowCount++; // lower rows\n                }\n                if (coinCount < 4) {\n                    coinCount = 0;\n                    rowCount = row - 1;\n                    colCount = column - 1;\n                    while (coinCount < 4 && rowCount > -1 && colCount > -1 && board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount--; // left columns\n                        rowCount--; // upper rows\n                    }\n                    colCount = column;\n                    rowCount = row;\n                    while (coinCount < 4 && rowCount < BoardLogic.rows && colCount < BoardLogic.columns && board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount++; // right columns\n                        rowCount++; // lower rows\n                    }\n                }\n            }\n        }\n        return coinCount;\n    };\n    /**\n     * Checks if the board matrix is full\n     * @param board The board matrix\n     * @returns True if full, false if not\n     */\n    BoardLogic.isBoardFull = function (board) {\n        var full = true;\n        for (var col = 0; col < BoardLogic.columns; col++) {\n            // Check upper row in every column\n            if (board[col][0] === coin_1.Coin.Empty) {\n                full = false;\n                break;\n            }\n        }\n        return full;\n    };\n    /**\n     * Places coin in a specific column\n     * @param board The board matrix\n     * @param color The color of the coin\n     * @param column The specified column number\n     * @returns Row number where the coin was placed. -1 if column is full.\n     */\n    BoardLogic.putCoin = function (board, color, column) {\n        for (var row = BoardLogic.rows - 1; row >= 0; row--) {\n            if (board[column][row] === coin_1.Coin.Empty) {\n                board[column][row] = color;\n                return row;\n            }\n        }\n        return -1;\n    };\n    BoardLogic.columns = 9;\n    BoardLogic.rows = 8;\n    return BoardLogic;\n}());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.skipTurnMaxWait = void 0;\n/**\n * @constant {number} skipTurnMaxWait - The maximum number of seconds that are allowed before skipping turn.\n */\nexports.skipTurnMaxWait = 60;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Coin = void 0;\nvar Coin;\n(function (Coin) {\n    Coin[Coin[\"Empty\"] = 0] = \"Empty\";\n    Coin[Coin[\"Red\"] = 1] = \"Red\";\n    Coin[Coin[\"Green\"] = 2] = \"Green\";\n})(Coin || (exports.Coin = Coin = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.skipTurnMaxWait = exports.switchTurn = exports.randomiseColor = exports.WinnerMessage = exports.TieMessage = exports.SkipTurnMessage = exports.InitialMessage = exports.GameMessage = exports.ErrorMessage = exports.DisconnectMessage = exports.CurrentTurnMessage = exports.ActionMessage = exports.Coin = exports.default = void 0;\nvar board_logic_1 = require(\"./board-logic\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return board_logic_1.BoardLogic; } });\nvar coin_1 = require(\"./enums/coin\");\nObject.defineProperty(exports, \"Coin\", { enumerable: true, get: function () { return coin_1.Coin; } });\nvar action_message_1 = require(\"./models/action-message\");\nObject.defineProperty(exports, \"ActionMessage\", { enumerable: true, get: function () { return action_message_1.ActionMessage; } });\nvar current_turn_message_1 = require(\"./models/current-turn-message\");\nObject.defineProperty(exports, \"CurrentTurnMessage\", { enumerable: true, get: function () { return current_turn_message_1.CurrentTurnMessage; } });\nvar disconnect_message_1 = require(\"./models/disconnect-message\");\nObject.defineProperty(exports, \"DisconnectMessage\", { enumerable: true, get: function () { return disconnect_message_1.DisconnectMessage; } });\nvar error_message_1 = require(\"./models/error-message\");\nObject.defineProperty(exports, \"ErrorMessage\", { enumerable: true, get: function () { return error_message_1.ErrorMessage; } });\nvar game_message_1 = require(\"./models/game-message\");\nObject.defineProperty(exports, \"GameMessage\", { enumerable: true, get: function () { return game_message_1.GameMessage; } });\nvar initial_message_1 = require(\"./models/initial-message\");\nObject.defineProperty(exports, \"InitialMessage\", { enumerable: true, get: function () { return initial_message_1.InitialMessage; } });\nvar skip_turn_message_1 = require(\"./models/skip-turn-message\");\nObject.defineProperty(exports, \"SkipTurnMessage\", { enumerable: true, get: function () { return skip_turn_message_1.SkipTurnMessage; } });\nvar tie_message_1 = require(\"./models/tie-message\");\nObject.defineProperty(exports, \"TieMessage\", { enumerable: true, get: function () { return tie_message_1.TieMessage; } });\nvar winner_message_1 = require(\"./models/winner-message\");\nObject.defineProperty(exports, \"WinnerMessage\", { enumerable: true, get: function () { return winner_message_1.WinnerMessage; } });\nvar player_turn_1 = require(\"./player-turn\");\nObject.defineProperty(exports, \"randomiseColor\", { enumerable: true, get: function () { return player_turn_1.randomiseColor; } });\nObject.defineProperty(exports, \"switchTurn\", { enumerable: true, get: function () { return player_turn_1.switchTurn; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"skipTurnMaxWait\", { enumerable: true, get: function () { return constants_1.skipTurnMaxWait; } });\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActionMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ActionMessage = /** @class */ (function (_super) {\n    __extends(ActionMessage, _super);\n    /**\n     * @param {number} column - The column number\n     * @param {string} action - The type of action\n     * @param {Coin} color - The coin color\n     */\n    function ActionMessage(column, action, color) {\n        var _this = _super.call(this) || this;\n        _this.column = column;\n        _this.action = action;\n        _this.color = color;\n        return _this;\n    }\n    return ActionMessage;\n}(game_message_1.GameMessage));\nexports.ActionMessage = ActionMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CurrentTurnMessage = void 0;\nvar coin_1 = require(\"../enums/coin\");\nvar game_message_1 = require(\"./game-message\");\nvar CurrentTurnMessage = /** @class */ (function (_super) {\n    __extends(CurrentTurnMessage, _super);\n    function CurrentTurnMessage() {\n        var _this = _super.call(this) || this;\n        _this.currentTurn = coin_1.Coin.Empty;\n        return _this;\n    }\n    return CurrentTurnMessage;\n}(game_message_1.GameMessage));\nexports.CurrentTurnMessage = CurrentTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DisconnectMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar DisconnectMessage = /** @class */ (function (_super) {\n    __extends(DisconnectMessage, _super);\n    function DisconnectMessage() {\n        var _this = _super.call(this) || this;\n        _this.hardDisconnect = true;\n        return _this;\n    }\n    return DisconnectMessage;\n}(game_message_1.GameMessage));\nexports.DisconnectMessage = DisconnectMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ErrorMessage = /** @class */ (function (_super) {\n    __extends(ErrorMessage, _super);\n    /**\n     * @param {string} error The error message\n     */\n    function ErrorMessage(error) {\n        var _this = _super.call(this) || this;\n        _this.error = error;\n        return _this;\n    }\n    return ErrorMessage;\n}(game_message_1.GameMessage));\nexports.ErrorMessage = ErrorMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameMessage = void 0;\nvar GameMessage = /** @class */ (function () {\n    function GameMessage() {\n    }\n    /**\n     * Tests if message is an initial message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message is initial\n     * @public\n     * @static\n     */\n    GameMessage.isInitialMessage = function (msg) {\n        return (!isNaN(msg['gameId']) && msg['color']) || msg['opponentName'];\n    };\n    /**\n     * Tests if message is an inactivity message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents inactivity\n     * @public\n     * @static\n     */\n    GameMessage.isInactivityMessage = function (msg) {\n        return msg['endGameDueToInactivity'] && msg['currentTurn'];\n    };\n    /**\n     * Tests if message is an action message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents an action\n     * @public\n     * @static\n     */\n    GameMessage.isActionMessage = function (msg) {\n        return msg['action'] && !isNaN(msg['column']) && msg['color'];\n    };\n    /**\n     * Tests if message is a skip turn message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message is a skip turn\n     * @public\n     * @static\n     */\n    GameMessage.isSkipTurnMessage = function (msg) {\n        return msg['skipTurn'] && msg['currentTurn'];\n    };\n    /**\n     * Tests if message is a winner message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents win\n     * @public\n     * @static\n     */\n    GameMessage.isWinnerMessage = function (msg) {\n        return msg['winner'];\n    };\n    /**\n     * Tests if message is a tie message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents tie\n     * @public\n     * @static\n     */\n    GameMessage.isTieMessage = function (msg) {\n        return msg['tie'];\n    };\n    /**\n     * Tests if message is a current turn message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represents current turn\n     * @public\n     * @static\n     */\n    GameMessage.isCurrentTurnMessage = function (msg) {\n        return msg['currentTurn'];\n    };\n    /**\n     * Tests if message is a disconnect message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message represent a disconnection\n     * @public\n     * @static\n     */\n    GameMessage.isDisconnectMessage = function (msg) {\n        return msg['hardDisconnect'];\n    };\n    /**\n     * Tests if message is an error message\n     * @param {*} msg - Object to check\n     * @returns {boolean} Whether message is an error\n     * @public\n     * @static\n     */\n    GameMessage.isErrorMessage = function (msg) {\n        return msg['error'];\n    };\n    return GameMessage;\n}());\nexports.GameMessage = GameMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InitialMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar InitialMessage = /** @class */ (function (_super) {\n    __extends(InitialMessage, _super);\n    /**\n     * @param {number} gameId - The ID of the game\n     * @param {string} playerName - The name of the player\n     * @param {string} opponentName - The name of the opponent\n     * @param {Coin} color - The coin color chosen\n     */\n    function InitialMessage(gameId, playerName, opponentName, color) {\n        var _this = _super.call(this) || this;\n        _this.gameId = gameId;\n        _this.playerName = playerName;\n        _this.opponentName = opponentName;\n        _this.color = color;\n        return _this;\n    }\n    return InitialMessage;\n}(game_message_1.GameMessage));\nexports.InitialMessage = InitialMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SkipTurnMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar SkipTurnMessage = /** @class */ (function (_super) {\n    __extends(SkipTurnMessage, _super);\n    /**\n     * @param {boolean} skipTurn - Whether to skip the current turn\n     * @param {Coin} currentTurn - Coin color to be the new turn\n     */\n    function SkipTurnMessage(skipTurn, currentTurn) {\n        var _this = _super.call(this) || this;\n        _this.skipTurn = skipTurn;\n        _this.currentTurn = currentTurn;\n        return _this;\n    }\n    return SkipTurnMessage;\n}(game_message_1.GameMessage));\nexports.SkipTurnMessage = SkipTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TieMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar TieMessage = /** @class */ (function (_super) {\n    __extends(TieMessage, _super);\n    /**\n     * @param {boolean} tie - Optional boolean parameter to determine if tie. True by default.\n     */\n    function TieMessage(tie) {\n        if (tie === void 0) { tie = true; }\n        var _this = _super.call(this) || this;\n        _this.tie = tie;\n        return _this;\n    }\n    return TieMessage;\n}(game_message_1.GameMessage));\nexports.TieMessage = TieMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WinnerMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\n/**\n * @class WinnerMessage model\n */\nvar WinnerMessage = /** @class */ (function (_super) {\n    __extends(WinnerMessage, _super);\n    /**\n     * @param {Coin} winner - The coin color of the winner\n     */\n    function WinnerMessage(winner) {\n        var _this = _super.call(this) || this;\n        _this.winner = winner;\n        return _this;\n    }\n    return WinnerMessage;\n}(game_message_1.GameMessage));\nexports.WinnerMessage = WinnerMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.switchTurn = exports.randomiseColor = void 0;\nvar coin_1 = require(\"./enums/coin\");\n/**\n * Randomises color\n * @returns {Coin} Random coin color\n */\nfunction randomiseColor() {\n    return Math.floor(Math.random() * 2) + 1;\n}\nexports.randomiseColor = randomiseColor;\n/**\n * Switches turn depending on input\n * @param {Coin} currentTurn - The current coin color\n * @returns {Coin} The opposing coin color\n */\nfunction switchTurn(currentTurn) {\n    return currentTurn === coin_1.Coin.Red ? coin_1.Coin.Green : coin_1.Coin.Red;\n}\nexports.switchTurn = switchTurn;\n","import config from \"./config\";\r\nimport { AuthenticationModel } from \"./models/authentication-model\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        google: any;\r\n    }\r\n}\r\n\r\nexport async function handleGoogleSignon(response: any) {\r\n    const {credential} = response;\r\n    storeGoogleToken(credential);\r\n    await showLoginLogout();\r\n}\r\n\r\nfunction storeGoogleToken(token: string) {\r\n    const data = {\r\n        token,\r\n        service: 'google'\r\n    } as AuthenticationModel;\r\n    sessionStorage.setItem('auth', JSON.stringify(data));\r\n}\r\n\r\nexport async function showLoginLogout() {\r\n    const loginBtns = document.getElementById('login-btns') as HTMLDivElement;\r\n    const loggedInArea = document.getElementById('logged-in-area') as HTMLDivElement;\r\n    if (sessionStorage.getItem('auth')) {\r\n        loginBtns.classList.add('hide');\r\n        loggedInArea.classList.remove('hide');\r\n        await loadUserName();\r\n    } else {\r\n        loginBtns.classList.remove('hide');\r\n        loggedInArea.classList.add('hide');\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    sessionStorage.removeItem('auth');\r\n    showLoginLogout();\r\n}\r\n\r\nexport function getToken(): AuthenticationModel | null {\r\n    const val = sessionStorage.getItem('auth');\r\n    return val ? JSON.parse(val) as AuthenticationModel : null;\r\n}\r\n\r\nasync function loadUserName() {\r\n    const auth = getToken();\r\n    const response = await fetch(`${config.httpServer}/auth?token=${auth.token}&service=${auth.service}`);\r\n    const data = await response.json();\r\n    const userMenu = document.getElementById('userMenu') as HTMLButtonElement;\r\n    userMenu.innerText = data.user;\r\n}","import Utils from \"./utils\";\r\n\r\nconst config = Utils.isLocal() ? {\r\n    httpServer: 'http://localhost:3000',\r\n    wsServer: 'ws://localhost:3000'\r\n} : {\r\n    httpServer: 'https://daniels-connect4-server.adaptable.app',\r\n    wsServer: 'wss://daniels-connect4-server.adaptable.app'\r\n};\r\n\r\nexport default config;","import ConfirmationDialogOptions from \"./confirmation-dialog-options\";\r\nimport DialogOptions from \"./dialog-options\";\r\nimport { DialogType } from \"./enums/dialog-type\";\r\nimport PromptDialogOptions from \"./prompt-dialog-options\";\r\nimport PromptInput from \"./prompt-input\";\r\n\r\nexport default class Dialog {\r\n    \r\n    private static modal(type: DialogType, options: DialogOptions) {\r\n        if (!document.getElementById(options.id)) {\r\n            const modal = document.createElement('div') as HTMLDivElement;\r\n            modal.tabIndex = 1;\r\n            modal.id = options.id;\r\n            modal.classList.add('dialog');\r\n\r\n            if (options.title) {\r\n                const h1 = document.createElement('h1') as HTMLHeadingElement;\r\n                h1.innerText = options.title;\r\n                h1.classList.add('dialog-title');\r\n                modal.appendChild(h1);\r\n                modal.appendChild(document.createElement('hr'));\r\n            }\r\n\r\n            const textContainer = document.createElement('div') as HTMLDivElement;\r\n            this.appendText(options.text, textContainer);\r\n            modal.appendChild(textContainer);\r\n\r\n            switch (type) {\r\n                case DialogType.Confirmation: {\r\n                    const o = options as ConfirmationDialogOptions;\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'Yes', () => {\r\n                        o.yesCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.yesColor, 'button');\r\n                    this.appendBtn(btnContainer, 'No', () => {\r\n                        o.noCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.noColor, 'button');\r\n                    break;\r\n                }\r\n                case DialogType.Notification: {\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'OK', () => {\r\n                        this.closeModal(modal);\r\n                    }, 'green', 'button');\r\n\r\n                    modal.addEventListener('keydown', (event: KeyboardEvent) => {\r\n                        if (event.key === 'Escape' || event.key === 'Enter') {\r\n                            this.closeModal(modal);\r\n                        }\r\n                    });\r\n\r\n                    break;\r\n                }\r\n                case DialogType.Prompt: {\r\n                    const o = options as PromptDialogOptions;\r\n                    this.appendForm(modal, o);\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            document.body.appendChild(modal);\r\n        }\r\n    }\r\n\r\n    private static appendBtn(container: HTMLDivElement | HTMLFormElement,\r\n                text: string,\r\n                callback: any,\r\n                bgColor: string,\r\n                btnType: 'submit' | 'button' | 'reset') {\r\n        const btn = document.createElement('button') as HTMLButtonElement;\r\n        btn.type = btnType;\r\n        btn.innerText = text;\r\n        btn.classList.add('text');\r\n        btn.classList.add('dialog-btn');\r\n        btn.classList.add(`dialog-btn-${bgColor}`);\r\n        if (btnType === 'button') {\r\n            btn.addEventListener('click', callback);\r\n        }\r\n        container.appendChild(btn);\r\n    }\r\n\r\n    private static appendForm(modal: HTMLDivElement, options: PromptDialogOptions) {\r\n        const inputContainer = document.createElement('div') as HTMLDivElement;\r\n        inputContainer.classList.add('dialog-input-container');\r\n        modal.appendChild(inputContainer);\r\n\r\n        const form = document.createElement('form') as HTMLFormElement;\r\n        inputContainer.appendChild(form);\r\n        form.addEventListener('submit', (event: SubmitEvent) => {\r\n            event.preventDefault();\r\n            const error: string = options.onOK();\r\n            if (error) {\r\n                this.appendError(modal, error);\r\n            } else {\r\n                this.closeModal(modal);\r\n            }\r\n        });\r\n\r\n        this.appendInputs(form, options.inputs);\r\n\r\n        const btnContainer = document.createElement('div') as HTMLDivElement;\r\n        btnContainer.classList.add('dialog-btn-container');\r\n        form.appendChild(btnContainer);\r\n\r\n        this.appendBtn(btnContainer, 'OK', null, 'green', 'submit');\r\n        this.appendBtn(btnContainer, 'Cancel', () => {\r\n            options.onCancel();\r\n            this.closeModal(modal);\r\n        }, 'red', 'button');\r\n    }\r\n\r\n    private static appendInputs(form: HTMLFormElement, inputs: Array<PromptInput>) {\r\n        for (let i: number = 0; i < inputs.length; i++) {\r\n            const input = document.createElement('input') as HTMLInputElement;\r\n            input.type = inputs[i].type;\r\n            input.id = `dialog-input-${inputs[i].name}`;\r\n            input.name = `dialog-input-${inputs[i].name}`;\r\n            input.placeholder = `Enter ${inputs[i].label}`;\r\n            input.maxLength = inputs[i].limit;\r\n            input.classList.add('dialog-input');\r\n            input.classList.add('text');\r\n            input.required = inputs[i].required;\r\n            input.ariaRequired = inputs[i].required.toString();\r\n            form.appendChild(input);\r\n\r\n            this.appendBrElement(form);\r\n            this.appendBrElement(form);\r\n        }\r\n    }\r\n\r\n    private static appendBrElement(container: HTMLDivElement | HTMLFormElement) {\r\n        const br = document.createElement('br') as HTMLBRElement;\r\n        container.appendChild(br);\r\n    }\r\n\r\n    private static appendError(container: HTMLDivElement, text: string) {\r\n        let errorDiv = document.getElementById('dialogError') as HTMLDivElement;\r\n        if (!errorDiv) {\r\n            errorDiv = document.createElement('div');\r\n            errorDiv.id = 'dialogError';\r\n            errorDiv.classList.add('red-text');\r\n            errorDiv.classList.add('text');\r\n            errorDiv.classList.add('dialog-error');\r\n            container.appendChild(errorDiv);\r\n        }\r\n        errorDiv.innerText = text;\r\n    }\r\n\r\n    private static appendText(text: Array<string>, container: HTMLDivElement) {\r\n        container.classList.add('text');\r\n        container.classList.add('dialog-text');\r\n        for (let i: number = 0; i < text.length; i++) {\r\n            const p = document.createElement('p') as HTMLParagraphElement;\r\n            p.innerText = text[i];\r\n            container.appendChild(p);\r\n        }\r\n    }\r\n\r\n    private static closeModal(modal: HTMLDivElement) {\r\n        if (document.body.contains(modal)) {\r\n            document.body.removeChild(modal);\r\n        }\r\n    }\r\n\r\n    public static confirm(options: ConfirmationDialogOptions) {\r\n        Dialog.modal(DialogType.Confirmation, options);\r\n    }\r\n\r\n    public static notify(options: DialogOptions) {\r\n        Dialog.modal(DialogType.Notification, options);\r\n    }\r\n\r\n    public static prompt(options: PromptDialogOptions) {\r\n        Dialog.modal(DialogType.Prompt, options);\r\n    }\r\n\r\n    public static closeAllOpenDialogs() {\r\n        const dialogs = document.getElementsByClassName('dialog') as HTMLCollectionOf<HTMLDivElement>;\r\n        for (let i: number = 0; i < dialogs.length; i++) {\r\n            this.closeModal(dialogs[i]);\r\n        }\r\n    }\r\n\r\n}","export enum DialogType {\r\n    Confirmation = 0,\r\n    Notification = 1,\r\n    Prompt = 2\r\n}","export enum DialogIds {\r\n    PlayerNames = 'player-input-dialog',\r\n    ServerError = 'server-error-dialog',\r\n    Instructions = 'instructions-dialog',\r\n    GameEnd = 'game-end-dialog',\r\n    ExitGame = 'exit-game-dialog',\r\n    ContinueGame = 'continue-game-dialog',\r\n}","export enum GameMode {\r\n    SamePC = 1,\r\n    Network = 2\r\n}","export enum Sound {\r\n    LandCoin = './sounds/land-coin.m4a',\r\n    Win = './sounds/win.m4a',\r\n    Lose = './sounds/lose.m4a'\r\n}","import Position from './position';\r\nimport PlayerNameSection from './player-name-section';\r\nimport GameOptions from './game-options';\r\nimport BoardLogic, { Coin, switchTurn } from '@danieldesira/daniels-connect4-common';\r\n\r\nexport default abstract class Game {\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    protected context: CanvasRenderingContext2D;\r\n    protected board: Array<Array<Coin>> = new Array(BoardLogic.columns);\r\n\r\n    private exitBtn: HTMLButtonElement;\r\n    protected playerNameSection: PlayerNameSection;\r\n    private gameIndicatorsContainer: HTMLDivElement;\r\n    private gameMenu: HTMLDivElement;\r\n\r\n    protected turn: Coin = Coin.Red;\r\n\r\n    private circleRadius: number;\r\n    private rowGap: number;\r\n    private colGap: number;\r\n    private colOffset: number;\r\n    private static verticalOffset: number = 70;\r\n\r\n    protected currentCoinColumn: number = 4;\r\n    protected static moveLeftKeys: Array<string> = ['a', 'A', 'ArrowLeft'];\r\n    protected static moveRightKeys: Array<string> = ['d', 'D', 'ArrowRight'];\r\n\r\n    protected constructor(options: GameOptions) {\r\n        this.canvas = document.getElementById(options.canvasId) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        BoardLogic.initBoard(this.board);\r\n\r\n        if (options.exitBtnId) {\r\n            this.exitBtn = document.getElementById(options.exitBtnId) as HTMLButtonElement;\r\n        }\r\n\r\n        if (options.playerRedId && options.playerGreenId) {\r\n            this.playerNameSection = new PlayerNameSection(options.playerRedId, options.playerGreenId);\r\n        }\r\n\r\n        if (options.gameIndicatorsId) {\r\n            this.gameIndicatorsContainer = document.getElementById(options.gameIndicatorsId) as HTMLDivElement;\r\n        }\r\n\r\n        if (options.menuId) {\r\n            this.gameMenu = document.getElementById(options.menuId) as HTMLDivElement;\r\n        }\r\n    }\r\n\r\n    protected start() {\r\n        this.showGame();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.printPlayerNames();\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n\r\n        this.resizeCanvas();\r\n        this.setGameEvents();\r\n    }\r\n\r\n    private paintBoard() {\r\n        const boardGradient = this.context.createLinearGradient(0, 0, this.canvas.width, 0);\r\n        boardGradient.addColorStop(0, 'blue');\r\n        boardGradient.addColorStop(1, 'aqua');\r\n        this.context.fillStyle = boardGradient;\r\n        this.context.fillRect(0, Game.verticalOffset, this.canvas.width, this.canvas.height);\r\n\r\n        for (let col = BoardLogic.columns - 1; col >= 0; col--) {\r\n            for (let row = BoardLogic.rows - 1; row >= 0; row--) {\r\n                this.context.fillStyle = Game.getColor(this.board[col][row]);\r\n                this.drawCircle(col, row);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        this.canvas.addEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.addEventListener('click', this.canvasClick, false);\r\n        window.addEventListener('beforeunload', this.beforeUnload);\r\n        window.addEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.addEventListener('click', this.exit);\r\n        document.body.addEventListener('keydown', this.handleKeyDown);\r\n        this.canvas.addEventListener('touchmove', this.canvasTouchmove);\r\n    }\r\n\r\n    protected abstract canvasMousemove(event: MouseEvent): void;\r\n    protected abstract canvasClick(event: MouseEvent): void;\r\n    protected abstract handleKeyDown(event: KeyboardEvent): void;\r\n    protected abstract canvasTouchmove(event: TouchEvent): void;\r\n\r\n    protected getColumnFromCursorPosition(event: MouseEvent | Touch): number {\r\n        const position = Position.getCursorPosition(event, this.canvas);\r\n        const column = Math.round((position.x - this.colOffset) / this.colGap);\r\n        return column;\r\n    }\r\n\r\n    protected switchTurn() {\r\n        this.turn = switchTurn(this.turn);\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n    }\r\n\r\n    protected moveCoin() {\r\n        this.clearUpper();\r\n        this.context.fillStyle = Game.getColor(this.turn);\r\n        this.paintCoinToDrop(this.currentCoinColumn);\r\n    }\r\n\r\n    protected landCoin(): number {\r\n        if (this.board[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = BoardLogic.putCoin(this.board, this.turn, this.currentCoinColumn);\r\n            \r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.drawCircle(this.currentCoinColumn, row);\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected abstract showWinDialog(winner: string, currentTurn: Coin);\r\n\r\n    protected closeGameAfterWinning() {\r\n        this.cleanUpEvents();\r\n\r\n        if (this.exitBtn) {\r\n            this.exitBtn.classList.add('hide');\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            this.resetValues();\r\n            this.hideGame();\r\n\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.clear();\r\n            }\r\n        }, 3000);\r\n    }\r\n\r\n    protected paintCoinToDrop(column: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, this.circleRadius, this.circleRadius, 0, 2 * Math.PI);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected abstract beforeUnload(event: Event);\r\n\r\n    private clearUpper() {\r\n        this.context.clearRect(0, 0, this.canvas.width, Game.verticalOffset);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        this.canvas.removeEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.removeEventListener('click', this.canvasClick, false);\r\n        window.removeEventListener('beforeunload', this.beforeUnload);\r\n        window.removeEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.removeEventListener('click', this.exit);\r\n        document.body.removeEventListener('keydown', this.handleKeyDown);\r\n        this.canvas.removeEventListener('touchmove', this.canvasTouchmove);\r\n    }\r\n\r\n    protected exit() {\r\n        this.cleanUpEvents();\r\n        this.hideGame();\r\n        this.resetValues();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.clear();\r\n        }\r\n    }\r\n\r\n    private resizeCanvas = () => {\r\n        this.canvas.height = window.innerHeight - 100;\r\n        this.canvas.width = window.innerWidth;\r\n\r\n        if (this.canvas.width < 1000) {\r\n            this.circleRadius = 20; // Mobile/tablet\r\n        } else {\r\n            this.circleRadius = 30; // Desktop\r\n        }\r\n\r\n        if (this.canvas.height > this.canvas.width) {\r\n            this.colGap = this.canvas.width / BoardLogic.columns;\r\n            this.rowGap = (this.canvas.height / BoardLogic.rows) - this.circleRadius;\r\n        } else {\r\n            this.colGap = this.canvas.width / BoardLogic.columns;\r\n            this.rowGap = 65;\r\n        }\r\n\r\n        this.colOffset = this.colGap / 2;\r\n\r\n        this.paintBoard();\r\n    };\r\n\r\n    protected resetValues() {\r\n        this.turn = Coin.Red;\r\n        BoardLogic.initBoard(this.board);\r\n        \r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.reset();\r\n        }\r\n    }\r\n\r\n    private drawCircle(column: number, row: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, Game.verticalOffset * 2 + row * this.rowGap, this.circleRadius, 0, Math.PI * 2);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected areBothPlayersConnected(): boolean {\r\n        return this.playerNameSection && this.playerNameSection.areBothPlayersConnected();\r\n    }\r\n\r\n    private showGame() {\r\n        this.canvas.classList.remove('hide');\r\n        this.exitBtn.classList.remove('hide');\r\n        this.gameIndicatorsContainer.classList.remove('hide');\r\n        this.gameMenu.classList.add('hide');\r\n    }\r\n\r\n    private hideGame() {\r\n        this.canvas.classList.add('hide');\r\n        this.exitBtn.classList.add('hide');\r\n        this.gameIndicatorsContainer.classList.add('hide');\r\n        this.gameMenu.classList.remove('hide');\r\n    }\r\n\r\n    protected static getColor(color: Coin): string {\r\n        let value: string = '';\r\n        switch (color) {\r\n            case Coin.Empty:\r\n                value = 'lightyellow';\r\n                break;\r\n            case Coin.Red:\r\n                value = 'red';\r\n                break;\r\n            case Coin.Green:\r\n                value = 'greenyellow';\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common/lib/enums/coin\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport Socket from \"./socket\";\r\nimport Utils from \"./utils\";\r\nimport { ActionMessage, CurrentTurnMessage, ErrorMessage, GameMessage, InitialMessage, SkipTurnMessage, WinnerMessage, skipTurnMaxWait } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport { BoardLogic } from \"@danieldesira/daniels-connect4-common/lib/board-logic\";\r\nimport { getToken } from \"./authentication\";\r\nimport { AuthenticationModel } from \"./models/authentication-model\";\r\n\r\nexport default class NetworkGame extends Game {\r\n\r\n    private static instance: NetworkGame;\r\n\r\n    private socket: Socket;\r\n    private turnCountDown: number;\r\n    private turnCountDownInterval: number;\r\n    private countdownSpan: HTMLSpanElement;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n\r\n        if (options.timerCountdownId) {\r\n            this.countdownSpan = document.getElementById(options.timerCountdownId) as HTMLSpanElement;\r\n        }\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): NetworkGame {\r\n        if (!NetworkGame.instance) {\r\n            NetworkGame.instance = new NetworkGame(options);\r\n        }\r\n        return NetworkGame.instance;\r\n    }\r\n\r\n    public start() {\r\n        const auth = getToken();\r\n        if (auth) {\r\n            this.defineSocket(auth);\r\n            this.startCountdown();\r\n            super.start();\r\n            document.body.classList.add('waiting');\r\n        } else {\r\n            Dialog.notify({\r\n                title: 'Error',\r\n                text: ['User not logged in!'],\r\n                id: DialogIds.ServerError\r\n            });\r\n        }\r\n    }\r\n\r\n    private defineSocket(auth: AuthenticationModel) {\r\n        this.socket = new Socket(auth);\r\n        this.socket.onMessageCallback = this.onSocketMessage;\r\n        this.socket.onErrorCallback = this.onSocketError;\r\n        this.socket.onGameCancel = this.confirmExit;\r\n    }\r\n\r\n    private onSocketMessage = (messageData: GameMessage) => {\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n            if (this.socket && this.playerNameSection) {\r\n                if (data.opponentName) {\r\n                    this.toggleWaitingClass();\r\n                    if (this.socket.getPlayerColor() === Coin.Red) {\r\n                        this.playerNameSection.setPlayerGreen(data.opponentName);\r\n                    } else if (this.socket.getPlayerColor() === Coin.Green) {\r\n                        this.playerNameSection.setPlayerRed(data.opponentName);\r\n                    }\r\n                }\r\n    \r\n                if (data.playerName) {\r\n                    if (this.socket.getPlayerColor() === Coin.Red) {\r\n                        this.playerNameSection.setPlayerRed(data.playerName);\r\n                    } else if (this.socket.getPlayerColor() === Coin.Green) {\r\n                        this.playerNameSection.setPlayerGreen(data.playerName);\r\n                    }\r\n                }\r\n        \r\n                if (data.color) {\r\n                    if (data.color === Coin.Red) {\r\n                        this.playerNameSection.setPlayerRed(this.socket.getPlayerName());\r\n                    } else {\r\n                        this.playerNameSection.setPlayerGreen(this.socket.getPlayerName());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isActionMessage(messageData)) {\r\n            const data = messageData as ActionMessage;\r\n            if (data.action === 'mousemove') {\r\n                this.currentCoinColumn = data.column;\r\n                this.moveCoin();\r\n            }\r\n    \r\n            if (data.action === 'click') {\r\n                this.turn = data.color;\r\n                this.currentCoinColumn = data.column;\r\n                this.landCoin();\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isSkipTurnMessage(messageData)) {\r\n            const data = messageData as SkipTurnMessage;\r\n            if (data.skipTurn && data.currentTurn) {\r\n                this.turn = data.currentTurn;\r\n                this.turnCountDown = skipTurnMaxWait;\r\n                this.toggleWaitingClass();\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isWinnerMessage(messageData)) {\r\n            const data = messageData as WinnerMessage;\r\n            let winner: string = null;\r\n            if (this.playerNameSection) {\r\n                if (data.winner === Coin.Red) {\r\n                    winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                } else {\r\n                    winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n            }\r\n            this.showWinDialog(winner, data.winner);\r\n\r\n            this.closeGameAfterWinning();\r\n            document.body.classList.remove('waiting');\r\n        }\r\n\r\n        if (GameMessage.isTieMessage(messageData)) {\r\n            Dialog.notify({\r\n                id: DialogIds.GameEnd,\r\n                text: ['Game resulted in tie!'],\r\n                title: null\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isCurrentTurnMessage(messageData)) {\r\n            const data = messageData as CurrentTurnMessage;\r\n            this.turn = data.currentTurn;\r\n            this.toggleWaitingClass();\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.indicateTurn(this.turn);\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isDisconnectMessage(messageData)) {\r\n            Dialog.notify({\r\n                id: DialogIds.GameEnd,\r\n                text: ['Your opponent disconnected. You win!'],\r\n                title: 'We have a winner!'\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isErrorMessage(messageData)) {\r\n            const data = messageData as ErrorMessage;\r\n            Dialog.closeAllOpenDialogs();\r\n            Dialog.notify({\r\n                id: DialogIds.ServerError,\r\n                text: [data.error],\r\n                title: 'Error'\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.closeGameAfterWinning();\r\n        }\r\n    };\r\n\r\n    private onSocketError = () => {\r\n        super.exit();\r\n    };\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n        this.stopCountdown();\r\n\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin();\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n            this.socket.send(data);\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'click', this.turn);\r\n            this.socket.send(data);\r\n            \r\n            this.landCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasTouchmove = (event: TouchEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            const firstTouch = event.changedTouches[0];\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(firstTouch);\r\n            this.moveCoin();\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n            this.socket.send(data);\r\n        }\r\n    };\r\n\r\n    protected landCoin(): number {\r\n        if (this.board[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = super.landCoin();\r\n            \r\n            // Assume the game is still going on\r\n            this.switchTurn();\r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.paintCoinToDrop(this.currentCoinColumn);\r\n            Utils.playSound(Sound.LandCoin);\r\n            this.toggleWaitingClass();\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    private toggleWaitingClass() {\r\n        if (this.socket.getPlayerColor() === this.turn) {\r\n            document.body.classList.remove('waiting');\r\n        } else {\r\n            document.body.classList.add('waiting');\r\n        }\r\n    }\r\n\r\n    public exit = () => {\r\n        Dialog.confirm({\r\n            id: DialogIds.ExitGame,\r\n            title: null,\r\n            text: ['Network game in progress. Are you sure you want to quit?'],\r\n            yesCallback: this.confirmExit,\r\n            noCallback: () => {},\r\n            yesColor: 'red',\r\n            noColor: 'green'\r\n        });\r\n    };\r\n\r\n    private confirmExit = () => {\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n        Dialog.closeAllOpenDialogs();\r\n        document.body.classList.remove('waiting');\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = (event: Event) => {\r\n        // Display default dialog before closing\r\n        event.preventDefault();\r\n        event.returnValue = false; // Required by Chrome\r\n    };\r\n\r\n    protected showWinDialog(winner: string, currentTurn: Coin) {\r\n        let winMsg: Array<string> = new Array();\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.socket && this.socket.getPlayerColor() === currentTurn) {\r\n            winMsg.push('You win!');\r\n            Utils.playSound(Sound.Win);\r\n        } else {\r\n            winMsg.push('You lose!');\r\n            Utils.playSound(Sound.Lose);\r\n        }\r\n        Dialog.notify({\r\n            id: DialogIds.GameEnd,\r\n            text: winMsg,\r\n            title: 'Game Ends'\r\n        });\r\n    }\r\n\r\n    protected switchTurn() {\r\n        super.switchTurn();\r\n        this.resetCountdown();\r\n    }\r\n\r\n    private turnCountDownCallback = () => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.turnCountDown--;\r\n            this.countdownSpan.innerText = this.turnCountDown.toString();\r\n            this.adaptCountDownColor();\r\n        }\r\n    };\r\n\r\n    private adaptCountDownColor() {\r\n        if (this.turnCountDown > skipTurnMaxWait / 2) {\r\n            this.countdownSpan.classList.add('green-text');\r\n            this.countdownSpan.classList.remove('red-text');\r\n        } else {\r\n            this.countdownSpan.classList.remove('green-text');\r\n            this.countdownSpan.classList.add('red-text');\r\n        }\r\n    }\r\n\r\n    private startCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n        this.turnCountDownInterval = window.setInterval(this.turnCountDownCallback, 1000);\r\n    }\r\n\r\n    private stopCountdown() {\r\n        clearInterval(this.turnCountDownInterval);\r\n        this.countdownSpan.innerText = '';\r\n    }\r\n\r\n    private resetCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n    }\r\n\r\n    private onInputPlayerNameInDialog = (playerName: string) => {\r\n        if (this.socket) {\r\n            if (this.socket.getPlayerColor() === Coin.Red) {\r\n                this.playerNameSection.setPlayerRed(playerName);\r\n            } else {\r\n                this.playerNameSection.setPlayerGreen(playerName);\r\n            }\r\n        }\r\n    };\r\n\r\n    protected handleKeyDown = (event: KeyboardEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            let data: GameMessage;\r\n\r\n            if (Game.moveLeftKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn > 0) {\r\n                    this.currentCoinColumn--;\r\n\r\n                    data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n                    this.socket.send(data);\r\n\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (Game.moveRightKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn < BoardLogic.columns - 1) {\r\n                    this.currentCoinColumn++;\r\n\r\n                    data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n                    this.socket.send(data);\r\n\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (event.key === ' ') {\r\n                data = new ActionMessage(this.currentCoinColumn, 'click', this.turn);\r\n                this.socket.send(data);\r\n\r\n                this.landCoin();\r\n            }\r\n        }\r\n\r\n        if (event.key === 'Escape') {\r\n            this.exit();\r\n        }\r\n    };\r\n    \r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\n\r\nexport default class PlayerNameSection {\r\n    private playerRedSpan: HTMLSpanElement;\r\n    private playerGreenSpan: HTMLSpanElement;\r\n    private playerRed: string;\r\n    private playerGreen: string;\r\n\r\n    public constructor(playerRedId: string, playerGreenId: string) {\r\n        if (playerRedId) {\r\n            this.playerRedSpan = document.getElementById(playerRedId);\r\n        }\r\n\r\n        if (playerGreenId) {\r\n            this.playerGreenSpan = document.getElementById(playerGreenId);\r\n        }\r\n    }\r\n\r\n    public setUpPlayerNames(okAction: Function, cancelAction: Function) {\r\n        if (!localStorage.getItem('playerRed') || !localStorage.getItem('playerGreen')) {\r\n            Dialog.prompt({\r\n                id: DialogIds.PlayerNames,\r\n                title: 'Input Players',\r\n                text: ['Please enter player names! (10 characters or less.)'],\r\n                onOK: () => this.onPromptOK(okAction),\r\n                onCancel: () => this.onPromptCancel(cancelAction),\r\n                inputs: [\r\n                    {\r\n                        label: 'Player Red',\r\n                        name: 'red',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    },\r\n                    {\r\n                        label: 'Player Green',\r\n                        name: 'green',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }\r\n\r\n    private onPromptOK = (action: Function): string => {\r\n        const redInput = document.getElementById('dialog-input-red') as HTMLInputElement;\r\n        const greenInput = document.getElementById('dialog-input-green') as HTMLInputElement;\r\n        if (redInput.value && greenInput.value && redInput.value.trim() && greenInput.value.trim()) {\r\n            this.playerRed = redInput.value;\r\n            this.playerGreen = greenInput.value;\r\n            this.printPlayerNames();\r\n            action();\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onPromptCancel = (action: Function) => {\r\n        action();\r\n    };\r\n\r\n    public printPlayerNames() {\r\n        const waiting = 'Waiting to connect...';\r\n        if (this.playerGreenSpan) {\r\n            if (!this.playerGreen) {\r\n                this.playerGreenSpan.innerText = waiting;\r\n            } else {\r\n                this.playerGreenSpan.innerText = this.playerGreen;\r\n            }\r\n        }\r\n        if (this.playerRedSpan) {\r\n            if (!this.playerRed) {\r\n                this.playerRedSpan.innerText = waiting;\r\n            } else {\r\n                this.playerRedSpan.innerText = this.playerRed;\r\n            }\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = '';\r\n        }\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = '';\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.playerRed = null;\r\n        this.playerGreen = null;\r\n    }\r\n\r\n    public getPlayerRed(): string {\r\n        return this.playerRed;\r\n    }\r\n\r\n    public getPlayerGreen(): string {\r\n        return this.playerGreen;\r\n    }\r\n\r\n    public areBothPlayersConnected(): boolean {\r\n        return !!this.playerRed && !!this.playerGreen;\r\n    }\r\n\r\n    public saveIntoLocalStorage() {\r\n        localStorage.setItem('playerRed', this.playerRed);\r\n        localStorage.setItem('playerGreen', this.playerGreen);\r\n    }\r\n\r\n    public setFromLocalStorage() {\r\n        this.playerRed = localStorage.getItem('playerRed');\r\n        this.playerGreen = localStorage.getItem('playerGreen');\r\n    }\r\n\r\n    public setPlayerRed(playerName: string) {\r\n        this.playerRed = playerName;\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = this.playerRed;\r\n        }\r\n    }\r\n\r\n    public setPlayerGreen(playerName: string) {\r\n        this.playerGreen = playerName;\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = this.playerGreen;\r\n        }\r\n    }\r\n\r\n    public indicateTurn(turn: Coin) {\r\n        if (turn === Coin.Red) {\r\n            this.playerRedSpan.classList.add('currentTurn');\r\n            this.playerGreenSpan.classList.remove('currentTurn');\r\n        } else {\r\n            this.playerGreenSpan.classList.add('currentTurn');\r\n            this.playerRedSpan.classList.remove('currentTurn');\r\n        }\r\n    }\r\n\r\n}","export default class Position {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public static getCursorPosition(event: MouseEvent | Touch, canvas: HTMLCanvasElement): Position {\r\n        let x: number;\r\n        let y: number;\r\n        if (event.pageX !== undefined || event.pageY !== undefined) {\r\n            x = event.pageX;\r\n            y = event.pageY;\r\n        }\r\n        else {\r\n            x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n        }\r\n        x -= canvas.offsetLeft;\r\n        y -= canvas.offsetTop;\r\n        return new Position(x, y);\r\n    }\r\n}","import Dialog from \"./dialog/dialog\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Utils from \"./utils\";\r\nimport Timer from \"./timer\";\r\nimport BoardLogic, { Coin, randomiseColor } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\n\r\nexport default class SameDeviceGame extends Game {\r\n\r\n    private static instance: SameDeviceGame;\r\n    private timer: Timer;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n\r\n        if (options.timerCountdownId) {\r\n            this.timer = new Timer(options.timerCountdownId);\r\n        }\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): SameDeviceGame {\r\n        if (!SameDeviceGame.instance) {\r\n            SameDeviceGame.instance = new SameDeviceGame(options);\r\n        }\r\n        return SameDeviceGame.instance;\r\n    }\r\n\r\n    private setTimer = () => {\r\n        if (this.timer) {\r\n            this.timer.set();\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        this.checkGameData();\r\n    }\r\n\r\n    private onGameDataCheck() {\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.setUpPlayerNames(this.setTimer, this.exit);\r\n        }\r\n\r\n        if (this.areBothPlayersConnected()) {\r\n            this.setTimer();\r\n        }\r\n\r\n        super.start();\r\n    }\r\n\r\n    private checkGameData() {\r\n        let board = localStorage.getItem('board');\r\n        let nextTurn = localStorage.getItem('nextTurn');\r\n        \r\n        if (board && nextTurn) {\r\n            Dialog.confirm({\r\n                id: DialogIds.ContinueGame,\r\n                title: null,\r\n                text: ['Do you want to continue playing the previous game?'],\r\n                yesCallback: this.continuePreviousGame,\r\n                noCallback: this.cancelPreviousGame,\r\n                yesColor: 'green',\r\n                noColor: 'red'\r\n            });\r\n        } else {\r\n            this.turn = randomiseColor();\r\n            this.onGameDataCheck();\r\n        }\r\n    }\r\n\r\n    private continuePreviousGame = () => {\r\n        this.restoreLastGame();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private cancelPreviousGame = () => {\r\n        localStorage.clear();\r\n        this.turn = randomiseColor();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private restoreLastGame() {\r\n        this.turn = parseInt(localStorage.getItem('nextTurn'));\r\n        this.board = JSON.parse(localStorage.getItem('board'));\r\n\r\n        if (this.timer) {\r\n            this.timer.setSecondsRunningFromLocalStorage();\r\n        }\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.setFromLocalStorage();\r\n        }\r\n    }\r\n\r\n    private saveGame() {\r\n        if (this.areBothPlayersConnected()) {\r\n            localStorage.setItem('nextTurn', this.turn.toString());\r\n            localStorage.setItem('board', JSON.stringify(this.board));\r\n\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.saveIntoLocalStorage();\r\n            }\r\n\r\n            if (this.timer) {\r\n                this.timer.saveSecondsRunningToLocalStorage();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.landCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasTouchmove = (event: TouchEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            const firstTouch = event.changedTouches[0];\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(firstTouch);\r\n            this.moveCoin();\r\n        }\r\n    };\r\n\r\n    public exit = () => {\r\n        this.saveGame();\r\n        Dialog.closeAllOpenDialogs();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = () => {\r\n        this.saveGame();\r\n    }\r\n\r\n    private pageVisibilityChange = () => {\r\n        if (this.timer) {\r\n            this.timer.pauseWhenDocumentHidden();\r\n        }\r\n    };\r\n\r\n    protected closeGameAfterWinning() {\r\n        // Clear game data\r\n        localStorage.clear();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.closeGameAfterWinning();\r\n    }\r\n\r\n    protected landCoin(): number {\r\n        if (this.board[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = super.landCoin();\r\n            \r\n            const coinCount = BoardLogic.countConsecutiveCoins(this.board, this.currentCoinColumn, row, this.turn);\r\n\r\n            if (coinCount >= 4) {\r\n                let winner: string = '';\r\n\r\n                if (this.playerNameSection) {\r\n                    if (this.turn === Coin.Red) {\r\n                        winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                    } else if (this.turn === Coin.Green) {\r\n                        winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                    }\r\n                }\r\n\r\n                this.showWinDialog(winner, this.turn);\r\n                this.closeGameAfterWinning();\r\n            } else if (BoardLogic.isBoardFull(this.board)) {\r\n                let message: string = '';\r\n                if (this.playerNameSection) {\r\n                    message += `${this.playerNameSection.getPlayerRed()} (Red) and ${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n                message += ' are tied!';\r\n                Dialog.notify({\r\n                    id: DialogIds.GameEnd,\r\n                    title: 'Tie',\r\n                    text: [message]\r\n                });\r\n                this.closeGameAfterWinning();\r\n            } else { // If game is still going on\r\n                this.switchTurn();\r\n                this.context.fillStyle = Game.getColor(this.turn);\r\n                this.paintCoinToDrop(this.currentCoinColumn);\r\n                Utils.playSound(Sound.LandCoin);\r\n            }\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        super.setGameEvents();\r\n        document.addEventListener('visibilitychange', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        super.cleanUpEvents();\r\n        document.removeEventListener('changevisibility', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected showWinDialog(winner: string, _: Coin) {\r\n        let winMsg: Array<string> = new Array();\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.timer) {\r\n            winMsg.push(`Time taken: ${this.timer.getTimeInStringFormat()}`);\r\n        }\r\n        Utils.playSound(Sound.Win);\r\n        Dialog.notify({\r\n            id: DialogIds.GameEnd,\r\n            text: winMsg,\r\n            title: 'We have a winner!'\r\n        });\r\n    }\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n\r\n        if (this.timer) {\r\n            this.timer.reset();\r\n        }\r\n    }\r\n\r\n    protected handleKeyDown = (event: KeyboardEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            if (Game.moveLeftKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn > 0) {\r\n                    this.currentCoinColumn--;\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (Game.moveRightKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn < BoardLogic.columns - 1) {\r\n                    this.currentCoinColumn++;\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (event.key === ' ') {\r\n                this.landCoin();\r\n            }\r\n        }\r\n\r\n        if (event.key === 'Escape') {\r\n            this.exit();\r\n        }\r\n    };\r\n\r\n}","import config from \"./config\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport { AuthenticationModel } from \"./models/authentication-model\";\r\nimport Utils from \"./utils\";\r\nimport { Coin, GameMessage, InitialMessage } from \"@danieldesira/daniels-connect4-common\";\r\n\r\nexport default class Socket {\r\n    private webSocket: WebSocket;\r\n    private playerColor: Coin;\r\n    private playerName: string;\r\n    private gameId: number;\r\n    public onMessageCallback: Function;\r\n    public onErrorCallback: Function;\r\n    public onGameCancel: Function;\r\n\r\n    public constructor(auth: AuthenticationModel) {\r\n        this.connect(auth);\r\n    }\r\n\r\n    private connect(auth: AuthenticationModel = null) {\r\n        let url: string = config.wsServer;\r\n\r\n        if (auth) {\r\n            url += `?token=${auth.token}&service=${auth.service}`;\r\n        }\r\n\r\n        if (this.playerColor && !isNaN(this.gameId)) {\r\n            url += `?playerColor=${this.playerColor}&gameId=${this.gameId}&playerName=${this.playerName}`;\r\n        }\r\n\r\n        this.webSocket = new WebSocket(url);\r\n\r\n        this.webSocket.onmessage = this.onMessage;\r\n        this.webSocket.onerror = this.onError;\r\n        this.webSocket.onclose = this.onClose;\r\n    }\r\n\r\n    public send(data: GameMessage) {\r\n        this.webSocket.send(JSON.stringify(data));\r\n    }\r\n\r\n    public close() {\r\n        this.webSocket.onclose = null;\r\n        this.webSocket.onmessage = null;\r\n        this.webSocket.onerror = null;\r\n        this.webSocket.close();\r\n    }\r\n\r\n    public getPlayerColor = (): Coin => this.playerColor;\r\n    public getPlayerName = (): string => this.playerName;\r\n\r\n    private onMessage = (event: MessageEvent) => {\r\n        const messageData: GameMessage = JSON.parse(event.data);\r\n\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n\r\n            if (!this.gameId) {\r\n                this.gameId = data.gameId;\r\n            }\r\n\r\n            if (!this.playerName) {\r\n                this.playerName = data.playerName;\r\n            }\r\n            \r\n            if (!this.playerColor) {\r\n                this.playerColor = data.color;\r\n            }\r\n        }\r\n\r\n        if (this.onMessageCallback) {\r\n            this.onMessageCallback(messageData);\r\n        }\r\n    };\r\n\r\n    private onError = () => {\r\n        this.onErrorCallback();\r\n        Dialog.closeAllOpenDialogs();\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            text: ['Problem connecting to server!'],\r\n            title: 'Error'\r\n        });\r\n\r\n        document.body.classList.remove('waiting');\r\n    };\r\n\r\n    private onClose = () => {\r\n        this.connect();\r\n    };\r\n}","export default class Timer {\r\n\r\n    private secondsRunning: number;\r\n    private interval: number;\r\n    private timerSpan: HTMLSpanElement;\r\n\r\n    public constructor(timerId: string) {\r\n        this.timerSpan = document.getElementById(timerId) as HTMLSpanElement;\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n    private timerCallback = () => {\r\n        this.secondsRunning++;\r\n        const minutes: number = Math.floor(this.secondsRunning / 60);\r\n        const seconds: number = this.secondsRunning % 60;\r\n        this.timerSpan.innerText = `${minutes}:${(seconds < 10 ? '0' : '')}${seconds}`;\r\n        \r\n        if (this.timerSpan.classList.contains('hide')) {\r\n            clearInterval(this.interval);\r\n        }\r\n    };\r\n\r\n    public set() {\r\n        if (this.timerSpan) {\r\n            this.timerSpan.classList.remove('hide');\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public stop() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.timerSpan.innerText = '';\r\n            this.timerSpan.classList.add('hide');\r\n        }\r\n    }\r\n\r\n    public pauseWhenDocumentHidden() {\r\n        if (document.hidden) {\r\n            clearInterval(this.interval);\r\n        } else {\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public getTimeInStringFormat(): string {\r\n        if (this.timerSpan) {\r\n            return this.timerSpan.innerText;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    public saveSecondsRunningToLocalStorage() {\r\n        localStorage.setItem('secondsRunning', this.secondsRunning.toString());\r\n    }\r\n\r\n    public setSecondsRunningFromLocalStorage() {\r\n        this.secondsRunning = parseInt(localStorage.getItem('secondsRunning'));\r\n    }\r\n\r\n    public reset() {\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n}","export default class Utils {\r\n    public static isLocal(): boolean {\r\n        return location.protocol === 'file:'\r\n            || location.hostname === 'localhost';\r\n    }\r\n\r\n    public static playSound(path: string) {\r\n        let audio = new Audio(path);\r\n        audio.play();\r\n    }\r\n}","import { handleGoogleSignon, logout, showLoginLogout } from \"./lib/authentication\";\r\nimport Dialog from \"./lib/dialog/dialog\";\r\nimport { DialogIds } from \"./lib/enums/dialog-ids\";\r\nimport { GameMode } from \"./lib/enums/game-mode\";\r\nimport GameOptions from \"./lib/game-options\";\r\nimport NetworkGame from \"./lib/network-game\";\r\nimport SameDeviceGame from \"./lib/same-device-game\";\r\n\r\nconst samePCBtn = document.getElementById('samePC') as HTMLButtonElement;\r\nconst networkBtn = document.getElementById('network') as HTMLButtonElement;\r\nconst instructionsBtn = document.getElementById('instructions') as HTMLButtonElement;\r\n\r\nsamePCBtn.addEventListener('click', () => {\r\n    initGame(GameMode.SamePC);\r\n}, false);\r\n\r\nnetworkBtn.addEventListener('click', () => {\r\n    initGame(GameMode.Network);\r\n}, false);\r\n\r\nfunction initGame(mode: GameMode) {\r\n    try {\r\n        const options: GameOptions = {\r\n            canvasId: 'board',\r\n            exitBtnId: 'exitBtn',\r\n            timerCountdownId: 'timer',\r\n            playerRedId: 'playerRed',\r\n            playerGreenId: 'playerGreen',\r\n            menuId: 'menu',\r\n            gameIndicatorsId: 'gameIndicators'\r\n        };\r\n        if (mode === GameMode.Network) {\r\n            const connect4 = NetworkGame.getInstance(options);\r\n            connect4.start();\r\n        } else {\r\n            const connect4 = SameDeviceGame.getInstance(options);\r\n            connect4.start();\r\n        }\r\n    } catch (ex) {\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            title: 'Error',\r\n            text: ['Problem encountered!']\r\n        });\r\n        console.error(ex);\r\n    }\r\n}\r\n\r\ninstructionsBtn.addEventListener('click', () => {\r\n    const text = [\r\n        'The principle behind Connect4 is simple:',\r\n        'The player who first places 4 coins next to each other, wins. You may ' +\r\n            'match horizontally, vertically or diagonally.',\r\n        'Furthermore, in Network Play, you must place your coin within 60 seconds. ' +\r\n            'If you fail to do so, you pass the turn to your opponent.',\r\n        'Further note that exiting in Same Device Play, saves game progress. You ' +\r\n            'will be presented with the option to continue the same game the next ' +\r\n            'time. This does not work for Network Play because your opponent might ' +\r\n            'not be available the next time and you might not even know him/her/them.',\r\n        'Good luck and have fun playing!'\r\n    ];\r\n    Dialog.notify({\r\n        id: DialogIds.Instructions,\r\n        text,\r\n        title: 'Instructions'\r\n    });\r\n}, false);\r\n\r\nconst shareBtn = document.getElementById('shareBtn') as HTMLAnchorElement;\r\nshareBtn.addEventListener('click', (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    if (navigator.canShare) {\r\n        const shareData = {\r\n            url: location.href,\r\n            title: `Daniel's Connect4`\r\n        };\r\n        navigator.share(shareData)\r\n            .catch((err) => console.error(`Problem while sharing: ${err}`));\r\n    } else {\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            title: 'Error',\r\n            text: ['Problem opening share menu!']\r\n        });\r\n    }\r\n});\r\n\r\nwindow.google.accounts.id.initialize({\r\n    client_id: '966331594657-sjtp3m7ooigjma726j7aa4kcf5qdu2v7.apps.googleusercontent.com',\r\n    callback: handleGoogleSignon\r\n});\r\n\r\nconst googleSignonBtn = document.getElementById('googleSignon') as HTMLButtonElement;\r\ngoogleSignonBtn.addEventListener('click', () => {\r\n    window.google.accounts.id.prompt();\r\n});\r\n\r\n(async () => {\r\n    await showLoginLogout();\r\n});\r\n\r\nconst logoutBtn = document.getElementById('logout') as HTMLButtonElement;\r\nlogoutBtn.addEventListener('click', logout);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(519);\n"],"names":["Object","defineProperty","exports","value","BoardLogic","coin_1","initBoard","board","col","columns","Array","rows","row","Coin","Empty","countConsecutiveCoins","column","currentTurn","count","coinCount","rowCount","colCount","isBoardFull","full","putCoin","color","skipTurnMaxWait","switchTurn","randomiseColor","WinnerMessage","TieMessage","SkipTurnMessage","InitialMessage","GameMessage","ErrorMessage","DisconnectMessage","CurrentTurnMessage","ActionMessage","board_logic_1","enumerable","get","action_message_1","current_turn_message_1","disconnect_message_1","error_message_1","game_message_1","initial_message_1","skip_turn_message_1","tie_message_1","winner_message_1","player_turn_1","constants_1","extendStatics","__extends","this","d","b","setPrototypeOf","__proto__","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","_super","action","_this","hardDisconnect","error","isInitialMessage","msg","isNaN","isInactivityMessage","isActionMessage","isSkipTurnMessage","isWinnerMessage","isTieMessage","isCurrentTurnMessage","isDisconnectMessage","isErrorMessage","gameId","playerName","opponentName","skipTurn","tie","winner","Math","floor","random","Red","Green","showLoginLogout","loginBtns","document","getElementById","loggedInArea","sessionStorage","getItem","classList","add","remove","loadUserName","getToken","val","JSON","parse","auth","fetch","httpServer","token","service","json","data","innerText","user","response","setItem","stringify","removeItem","config","isLocal","wsServer","modal","type","options","id","createElement","tabIndex","title","h1","appendChild","textContainer","appendText","text","DialogType","Confirmation","btnContainer","appendBtn","yesCallback","closeModal","yesColor","noCallback","noColor","Notification","addEventListener","event","key","Prompt","o","appendForm","body","container","callback","bgColor","btnType","btn","inputContainer","form","preventDefault","onOK","appendError","appendInputs","inputs","onCancel","i","length","input","name","placeholder","label","maxLength","limit","required","ariaRequired","toString","appendBrElement","br","errorDiv","contains","removeChild","confirm","Dialog","notify","prompt","closeAllOpenDialogs","dialogs","getElementsByClassName","DialogIds","GameMode","Sound","turn","currentCoinColumn","resizeCanvas","canvas","height","window","innerHeight","width","innerWidth","circleRadius","colGap","rowGap","colOffset","paintBoard","canvasId","context","getContext","exitBtnId","exitBtn","playerRedId","playerGreenId","playerNameSection","gameIndicatorsId","gameIndicatorsContainer","menuId","gameMenu","start","showGame","printPlayerNames","indicateTurn","setGameEvents","boardGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Game","verticalOffset","getColor","drawCircle","canvasMousemove","canvasClick","beforeUnload","exit","handleKeyDown","canvasTouchmove","getColumnFromCursorPosition","position","getCursorPosition","round","x","moveCoin","clearUpper","paintCoinToDrop","landCoin","closeGameAfterWinning","cleanUpEvents","setTimeout","resetValues","hideGame","clear","beginPath","arc","PI","closePath","fill","clearRect","removeEventListener","reset","areBothPlayersConnected","moveLeftKeys","moveRightKeys","onSocketMessage","messageData","socket","toggleWaitingClass","getPlayerColor","setPlayerGreen","setPlayerRed","getPlayerName","turnCountDown","getPlayerRed","getPlayerGreen","showWinDialog","GameEnd","ServerError","onSocketError","send","firstTouch","changedTouches","ExitGame","confirmExit","close","returnValue","turnCountDownCallback","countdownSpan","adaptCountDownColor","onInputPlayerNameInDialog","includes","timerCountdownId","getInstance","NetworkGame","instance","defineSocket","startCountdown","onMessageCallback","onErrorCallback","onGameCancel","stopCountdown","playSound","LandCoin","winMsg","push","Win","Lose","resetCountdown","turnCountDownInterval","setInterval","clearInterval","onPromptOK","redInput","greenInput","trim","playerRed","playerGreen","onPromptCancel","playerRedSpan","playerGreenSpan","setUpPlayerNames","okAction","cancelAction","localStorage","PlayerNames","waiting","saveIntoLocalStorage","setFromLocalStorage","y","undefined","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","Position","offsetLeft","offsetTop","setTimer","timer","set","continuePreviousGame","restoreLastGame","onGameDataCheck","cancelPreviousGame","saveGame","stop","pageVisibilityChange","pauseWhenDocumentHidden","SameDeviceGame","checkGameData","nextTurn","ContinueGame","parseInt","setSecondsRunningFromLocalStorage","saveSecondsRunningToLocalStorage","message","_","getTimeInStringFormat","playerColor","onMessage","onError","onClose","connect","url","webSocket","WebSocket","onmessage","onerror","onclose","timerId","timerCallback","secondsRunning","minutes","seconds","timerSpan","interval","hidden","location","protocol","hostname","path","Audio","play","samePCBtn","networkBtn","instructionsBtn","initGame","mode","Network","ex","console","SamePC","Instructions","navigator","canShare","shareData","href","share","catch","err","google","accounts","initialize","client_id","handleGoogleSignon","logout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__"],"sourceRoot":""}