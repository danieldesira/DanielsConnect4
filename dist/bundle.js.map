{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/board-logic.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/constants.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/enums/coin.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/index.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/action-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/current-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/disconnect-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/error-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/game-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/initial-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/player-name-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/skip-turn-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/tie-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/models/winner-message.js","webpack:///./node_modules/@danieldesira/daniels-connect4-common/lib/player-turn.js","webpack:///./src/lib/dialog/dialog.ts","webpack:///./src/lib/dialog/enums/dialog-type.ts","webpack:///./src/lib/enums/dialog-ids.ts","webpack:///./src/lib/enums/game-mode.ts","webpack:///./src/lib/enums/sound.ts","webpack:///./src/lib/game.ts","webpack:///./src/lib/network-game.ts","webpack:///./src/lib/player-name-section.ts","webpack:///./src/lib/position.ts","webpack:///./src/lib/same-device-game.ts","webpack:///./src/lib/socket.ts","webpack:///./src/lib/timer.ts","webpack:///./src/lib/utils.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoardLogic = void 0;\nvar coin_1 = require(\"./enums/coin\");\nvar BoardLogic = exports.BoardLogic = /** @class */ (function () {\n    function BoardLogic() {\n    }\n    BoardLogic.initBoard = function (board) {\n        for (var col = 0; col < BoardLogic.columns; col++) {\n            board[col] = new Array(BoardLogic.rows);\n            for (var row = 0; row < BoardLogic.rows; row++) {\n                board[col][row] = coin_1.Coin.Empty;\n            }\n        }\n    };\n    BoardLogic.countConsecutiveCoins = function (board, column, row, currentTurn) {\n        var count = row;\n        var coinCount = 0;\n        // Vertical check\n        while (coinCount < 4 && count < BoardLogic.rows && board[column][count] === currentTurn) {\n            coinCount++;\n            count++;\n        }\n        if (coinCount < 4) {\n            // Horizontal check\n            coinCount = 0;\n            count = column;\n            while (count < BoardLogic.columns && board[count][row] === currentTurn) {\n                coinCount++;\n                count++;\n            }\n            count = column - 1;\n            while (count > -1 && board[count][row] === currentTurn) {\n                coinCount++;\n                count--;\n            }\n            // Diagonal checks\n            if (coinCount < 4) {\n                coinCount = 0;\n                var rowCount = row - 1;\n                var colCount = column + 1;\n                while (coinCount < 4 && rowCount > -1 && colCount < BoardLogic.columns && board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount++; //right columns\n                    rowCount--; //upper rows\n                }\n                colCount = column;\n                rowCount = row;\n                while (coinCount < 4 && rowCount < BoardLogic.rows && colCount > -1 && board[colCount][rowCount] === currentTurn) {\n                    coinCount++;\n                    colCount--; // left columns\n                    rowCount++; // lower rows\n                }\n                if (coinCount < 4) {\n                    coinCount = 0;\n                    rowCount = row - 1;\n                    colCount = column - 1;\n                    while (coinCount < 4 && rowCount > -1 && colCount > -1 && board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount--; // left columns\n                        rowCount--; // upper rows\n                    }\n                    colCount = column;\n                    rowCount = row;\n                    while (coinCount < 4 && rowCount < BoardLogic.rows && colCount < BoardLogic.columns && board[colCount][rowCount] === currentTurn) {\n                        coinCount++;\n                        colCount++; // right columns\n                        rowCount++; // lower rows\n                    }\n                }\n            }\n        }\n        return coinCount;\n    };\n    BoardLogic.isBoardFull = function (board) {\n        var full = true;\n        for (var col = 0; col < BoardLogic.columns; col++) {\n            // Check upper row in every column\n            if (board[col][0] === coin_1.Coin.Empty) {\n                full = false;\n                break;\n            }\n        }\n        return full;\n    };\n    BoardLogic.putCoin = function (board, color, column) {\n        for (var row = BoardLogic.rows - 1; row >= 0; row--) {\n            if (board[column][row] === coin_1.Coin.Empty) {\n                board[column][row] = color;\n                return row;\n            }\n        }\n        return -1;\n    };\n    BoardLogic.columns = 9;\n    BoardLogic.rows = 8;\n    return BoardLogic;\n}());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.skipTurnMaxWait = void 0;\nexports.skipTurnMaxWait = 60;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Coin = void 0;\nvar Coin;\n(function (Coin) {\n    Coin[Coin[\"Empty\"] = 0] = \"Empty\";\n    Coin[Coin[\"Red\"] = 1] = \"Red\";\n    Coin[Coin[\"Green\"] = 2] = \"Green\";\n})(Coin || (exports.Coin = Coin = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.skipTurnMaxWait = exports.switchTurn = exports.randomiseColor = exports.WinnerMessage = exports.TieMessage = exports.SkipTurnMessage = exports.PlayerNameMessage = exports.InitialMessage = exports.GameMessage = exports.ErrorMessage = exports.DisconnectMessage = exports.CurrentTurnMessage = exports.ActionMessage = exports.Coin = exports.default = void 0;\nvar board_logic_1 = require(\"./board-logic\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return board_logic_1.BoardLogic; } });\nvar coin_1 = require(\"./enums/coin\");\nObject.defineProperty(exports, \"Coin\", { enumerable: true, get: function () { return coin_1.Coin; } });\nvar action_message_1 = require(\"./models/action-message\");\nObject.defineProperty(exports, \"ActionMessage\", { enumerable: true, get: function () { return action_message_1.ActionMessage; } });\nvar current_turn_message_1 = require(\"./models/current-turn-message\");\nObject.defineProperty(exports, \"CurrentTurnMessage\", { enumerable: true, get: function () { return current_turn_message_1.CurrentTurnMessage; } });\nvar disconnect_message_1 = require(\"./models/disconnect-message\");\nObject.defineProperty(exports, \"DisconnectMessage\", { enumerable: true, get: function () { return disconnect_message_1.DisconnectMessage; } });\nvar error_message_1 = require(\"./models/error-message\");\nObject.defineProperty(exports, \"ErrorMessage\", { enumerable: true, get: function () { return error_message_1.ErrorMessage; } });\nvar game_message_1 = require(\"./models/game-message\");\nObject.defineProperty(exports, \"GameMessage\", { enumerable: true, get: function () { return game_message_1.GameMessage; } });\nvar initial_message_1 = require(\"./models/initial-message\");\nObject.defineProperty(exports, \"InitialMessage\", { enumerable: true, get: function () { return initial_message_1.InitialMessage; } });\nvar player_name_message_1 = require(\"./models/player-name-message\");\nObject.defineProperty(exports, \"PlayerNameMessage\", { enumerable: true, get: function () { return player_name_message_1.PlayerNameMessage; } });\nvar skip_turn_message_1 = require(\"./models/skip-turn-message\");\nObject.defineProperty(exports, \"SkipTurnMessage\", { enumerable: true, get: function () { return skip_turn_message_1.SkipTurnMessage; } });\nvar tie_message_1 = require(\"./models/tie-message\");\nObject.defineProperty(exports, \"TieMessage\", { enumerable: true, get: function () { return tie_message_1.TieMessage; } });\nvar winner_message_1 = require(\"./models/winner-message\");\nObject.defineProperty(exports, \"WinnerMessage\", { enumerable: true, get: function () { return winner_message_1.WinnerMessage; } });\nvar player_turn_1 = require(\"./player-turn\");\nObject.defineProperty(exports, \"randomiseColor\", { enumerable: true, get: function () { return player_turn_1.randomiseColor; } });\nObject.defineProperty(exports, \"switchTurn\", { enumerable: true, get: function () { return player_turn_1.switchTurn; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"skipTurnMaxWait\", { enumerable: true, get: function () { return constants_1.skipTurnMaxWait; } });\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActionMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ActionMessage = /** @class */ (function (_super) {\n    __extends(ActionMessage, _super);\n    function ActionMessage(column, action, color) {\n        var _this = _super.call(this) || this;\n        _this.column = column;\n        _this.action = action;\n        _this.color = color;\n        return _this;\n    }\n    return ActionMessage;\n}(game_message_1.GameMessage));\nexports.ActionMessage = ActionMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CurrentTurnMessage = void 0;\nvar coin_1 = require(\"../enums/coin\");\nvar game_message_1 = require(\"./game-message\");\nvar CurrentTurnMessage = /** @class */ (function (_super) {\n    __extends(CurrentTurnMessage, _super);\n    function CurrentTurnMessage() {\n        var _this = _super.call(this) || this;\n        _this.currentTurn = coin_1.Coin.Empty;\n        return _this;\n    }\n    return CurrentTurnMessage;\n}(game_message_1.GameMessage));\nexports.CurrentTurnMessage = CurrentTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DisconnectMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar DisconnectMessage = /** @class */ (function (_super) {\n    __extends(DisconnectMessage, _super);\n    function DisconnectMessage() {\n        var _this = _super.call(this) || this;\n        _this.hardDisconnect = true;\n        return _this;\n    }\n    return DisconnectMessage;\n}(game_message_1.GameMessage));\nexports.DisconnectMessage = DisconnectMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar ErrorMessage = /** @class */ (function (_super) {\n    __extends(ErrorMessage, _super);\n    function ErrorMessage(error) {\n        var _this = _super.call(this) || this;\n        _this.error = error;\n        return _this;\n    }\n    return ErrorMessage;\n}(game_message_1.GameMessage));\nexports.ErrorMessage = ErrorMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameMessage = void 0;\nvar GameMessage = /** @class */ (function () {\n    function GameMessage() {\n    }\n    GameMessage.isInitialMessage = function (msg) {\n        return (!isNaN(msg['gameId']) && msg['color']) || msg['opponentName'];\n    };\n    GameMessage.isInactivityMessage = function (msg) {\n        return msg['endGameDueToInactivity'] && msg['currentTurn'];\n    };\n    GameMessage.isActionMessage = function (msg) {\n        return msg['action'] && !isNaN(msg['column']) && msg['color'];\n    };\n    GameMessage.isSkipTurnMessage = function (msg) {\n        return msg['skipTurn'] && msg['currentTurn'];\n    };\n    GameMessage.isWinnerMessage = function (msg) {\n        return msg['winner'];\n    };\n    GameMessage.isTieMessage = function (msg) {\n        return msg['tie'];\n    };\n    GameMessage.isCurrentTurnMessage = function (msg) {\n        return msg['currentTurn'];\n    };\n    GameMessage.isDisconnectMessage = function (msg) {\n        return msg['hardDisconnect'];\n    };\n    GameMessage.isErrorMessage = function (msg) {\n        return msg['error'];\n    };\n    return GameMessage;\n}());\nexports.GameMessage = GameMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InitialMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar InitialMessage = /** @class */ (function (_super) {\n    __extends(InitialMessage, _super);\n    function InitialMessage(gameId, opponentName, color) {\n        var _this = _super.call(this) || this;\n        _this.gameId = gameId;\n        _this.opponentName = opponentName;\n        _this.color = color;\n        return _this;\n    }\n    return InitialMessage;\n}(game_message_1.GameMessage));\nexports.InitialMessage = InitialMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlayerNameMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar PlayerNameMessage = /** @class */ (function (_super) {\n    __extends(PlayerNameMessage, _super);\n    function PlayerNameMessage(name) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        return _this;\n    }\n    return PlayerNameMessage;\n}(game_message_1.GameMessage));\nexports.PlayerNameMessage = PlayerNameMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SkipTurnMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar SkipTurnMessage = /** @class */ (function (_super) {\n    __extends(SkipTurnMessage, _super);\n    function SkipTurnMessage(skipTurn, currentTurn) {\n        var _this = _super.call(this) || this;\n        _this.skipTurn = skipTurn;\n        _this.currentTurn = currentTurn;\n        return _this;\n    }\n    return SkipTurnMessage;\n}(game_message_1.GameMessage));\nexports.SkipTurnMessage = SkipTurnMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TieMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar TieMessage = /** @class */ (function (_super) {\n    __extends(TieMessage, _super);\n    function TieMessage(tie) {\n        if (tie === void 0) { tie = true; }\n        var _this = _super.call(this) || this;\n        _this.tie = tie;\n        return _this;\n    }\n    return TieMessage;\n}(game_message_1.GameMessage));\nexports.TieMessage = TieMessage;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WinnerMessage = void 0;\nvar game_message_1 = require(\"./game-message\");\nvar WinnerMessage = /** @class */ (function (_super) {\n    __extends(WinnerMessage, _super);\n    function WinnerMessage(winner) {\n        var _this = _super.call(this) || this;\n        _this.winner = winner;\n        return _this;\n    }\n    return WinnerMessage;\n}(game_message_1.GameMessage));\nexports.WinnerMessage = WinnerMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.switchTurn = exports.randomiseColor = void 0;\nvar coin_1 = require(\"./enums/coin\");\nfunction randomiseColor() {\n    return Math.floor(Math.random() * 2) + 1;\n}\nexports.randomiseColor = randomiseColor;\nfunction switchTurn(currentTurn) {\n    return currentTurn === coin_1.Coin.Red ? coin_1.Coin.Green : coin_1.Coin.Red;\n}\nexports.switchTurn = switchTurn;\n","import ConfirmationDialogOptions from \"./confirmation-dialog-options\";\r\nimport DialogOptions from \"./dialog-options\";\r\nimport { DialogType } from \"./enums/dialog-type\";\r\nimport PromptDialogOptions from \"./prompt-dialog-options\";\r\nimport PromptInput from \"./prompt-input\";\r\n\r\nexport default class Dialog {\r\n    \r\n    private static modal(type: DialogType, options: DialogOptions) {\r\n        if (!document.getElementById(options.id)) {\r\n            const modal = document.createElement('div') as HTMLDivElement;\r\n            modal.id = options.id;\r\n            modal.classList.add('dialog');\r\n\r\n            const textContainer = document.createElement('div') as HTMLDivElement;\r\n            this.appendText(options.text, textContainer);\r\n            modal.appendChild(textContainer);\r\n\r\n            switch (type) {\r\n                case DialogType.Confirmation: {\r\n                    const o = options as ConfirmationDialogOptions;\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'Yes', () => {\r\n                        o.yesCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.yesColor, 'button');\r\n                    this.appendBtn(btnContainer, 'No', () => {\r\n                        o.noCallback();\r\n                        this.closeModal(modal);\r\n                    }, o.noColor, 'button');\r\n                    break;\r\n                }\r\n                case DialogType.Notification: {\r\n                    const btnContainer = document.createElement('div') as HTMLDivElement;\r\n                    btnContainer.classList.add('dialog-btn-container');\r\n                    modal.appendChild(btnContainer);\r\n\r\n                    this.appendBtn(btnContainer, 'OK', () => {\r\n                        this.closeModal(modal);\r\n                    }, 'green', 'button');\r\n                    break;\r\n                }\r\n                case DialogType.Prompt: {\r\n                    const o = options as PromptDialogOptions;\r\n                    this.appendForm(modal, o);\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            document.body.appendChild(modal);\r\n        }\r\n    }\r\n\r\n    private static appendBtn(container: HTMLDivElement | HTMLFormElement,\r\n                text: string,\r\n                callback: any,\r\n                bgColor: string,\r\n                btnType: 'submit' | 'button' | 'reset') {\r\n        const btn = document.createElement('button') as HTMLButtonElement;\r\n        btn.type = btnType;\r\n        btn.innerText = text;\r\n        btn.classList.add('text');\r\n        btn.classList.add('dialog-btn');\r\n        btn.classList.add(`dialog-btn-${bgColor}`);\r\n        if (btnType === 'button') {\r\n            btn.addEventListener('click', callback);\r\n        }\r\n        container.appendChild(btn);\r\n    }\r\n\r\n    private static appendForm(modal: HTMLDivElement, options: PromptDialogOptions) {\r\n        const inputContainer = document.createElement('div') as HTMLDivElement;\r\n        inputContainer.classList.add('dialog-input-container');\r\n        modal.appendChild(inputContainer);\r\n\r\n        const form = document.createElement('form') as HTMLFormElement;\r\n        inputContainer.appendChild(form);\r\n        form.addEventListener('submit', (event: SubmitEvent) => {\r\n            event.preventDefault();\r\n            const error: string = options.onOK();\r\n            if (error) {\r\n                this.appendError(modal, error);\r\n            } else {\r\n                this.closeModal(modal);\r\n            }\r\n        });\r\n\r\n        this.appendInputs(form, options.inputs);\r\n\r\n        const btnContainer = document.createElement('div') as HTMLDivElement;\r\n        btnContainer.classList.add('dialog-btn-container');\r\n        form.appendChild(btnContainer);\r\n\r\n        this.appendBtn(btnContainer, 'OK', null, 'green', 'submit');\r\n        this.appendBtn(btnContainer, 'Cancel', () => {\r\n            options.onCancel();\r\n            this.closeModal(modal);\r\n        }, 'red', 'button');\r\n    }\r\n\r\n    private static appendInputs(form: HTMLFormElement, inputs: Array<PromptInput>) {\r\n        for (let i: number = 0; i < inputs.length; i++) {\r\n            const input = document.createElement('input') as HTMLInputElement;\r\n            input.type = inputs[i].type;\r\n            input.id = `dialog-input-${inputs[i].name}`;\r\n            input.name = `dialog-input-${inputs[i].name}`;\r\n            input.placeholder = `Enter ${inputs[i].label}`;\r\n            input.maxLength = inputs[i].limit;\r\n            input.classList.add('dialog-input');\r\n            input.classList.add('text');\r\n            input.required = inputs[i].required;\r\n            input.ariaRequired = inputs[i].required.toString();\r\n            form.appendChild(input);\r\n\r\n            this.appendBrElement(form);\r\n            this.appendBrElement(form);\r\n        }\r\n    }\r\n\r\n    private static appendBrElement(container: HTMLDivElement | HTMLFormElement) {\r\n        const br = document.createElement('br') as HTMLBRElement;\r\n        container.appendChild(br);\r\n    }\r\n\r\n    private static appendError(container: HTMLDivElement, text: string) {\r\n        let errorDiv = document.getElementById('dialogError') as HTMLDivElement;\r\n        if (!errorDiv) {\r\n            errorDiv = document.createElement('div');\r\n            errorDiv.id = 'dialogError';\r\n            errorDiv.classList.add('red-text');\r\n            errorDiv.classList.add('text');\r\n            errorDiv.classList.add('dialog-error');\r\n            container.appendChild(errorDiv);\r\n        }\r\n        errorDiv.innerText = text;\r\n    }\r\n\r\n    private static appendText(text: Array<string>, container: HTMLDivElement) {\r\n        container.classList.add('text');\r\n        container.classList.add('dialog-text');\r\n        for (let i: number = 0; i < text.length; i++) {\r\n            const p = document.createElement('p') as HTMLParagraphElement;\r\n            p.innerText = text[i];\r\n            container.appendChild(p);\r\n        }\r\n    }\r\n\r\n    private static closeModal(modal: HTMLDivElement) {\r\n        if (document.body.contains(modal)) {\r\n            document.body.removeChild(modal);\r\n        }\r\n    }\r\n\r\n    public static confirm(options: ConfirmationDialogOptions) {\r\n        Dialog.modal(DialogType.Confirmation, options);\r\n    }\r\n\r\n    public static notify(options: DialogOptions) {\r\n        Dialog.modal(DialogType.Notification, options);\r\n    }\r\n\r\n    public static prompt(options: PromptDialogOptions) {\r\n        Dialog.modal(DialogType.Prompt, options);\r\n    }\r\n\r\n    public static closeAllOpenDialogs() {\r\n        const dialogs = document.getElementsByClassName('dialog') as HTMLCollectionOf<HTMLDivElement>;\r\n        for (let i: number = 0; i < dialogs.length; i++) {\r\n            this.closeModal(dialogs[i]);\r\n        }\r\n    }\r\n\r\n}","export enum DialogType {\r\n    Confirmation = 0,\r\n    Notification = 1,\r\n    Prompt = 2\r\n}","export enum DialogIds {\r\n    PlayerNames = 'player-input-dialog',\r\n    ServerError = 'server-error-dialog',\r\n    Instructions = 'instructions-dialog',\r\n    GameEnd = 'game-end-dialog',\r\n    ExitGame = 'exit-game-dialog',\r\n    ContinueGame = 'continue-game-dialog',\r\n}","export enum GameMode {\r\n    SamePC = 1,\r\n    Network = 2\r\n}","export enum Sound {\r\n    LandCoin = './sounds/land-coin.m4a',\r\n    Win = './sounds/win.m4a',\r\n    Lose = './sounds/lose.m4a'\r\n}","import Position from './position';\r\nimport PlayerNameSection from './player-name-section';\r\nimport GameOptions from './game-options';\r\nimport BoardLogic, { Coin, switchTurn } from '@danieldesira/daniels-connect4-common';\r\n\r\nexport default abstract class Game {\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    protected context: CanvasRenderingContext2D;\r\n    protected board: Array<Array<Coin>> = new Array(BoardLogic.columns);\r\n\r\n    private exitBtn: HTMLButtonElement;\r\n    protected playerNameSection: PlayerNameSection;\r\n    private gameIndicatorsContainer: HTMLDivElement;\r\n    private gameMenu: HTMLDivElement;\r\n\r\n    protected turn: Coin = Coin.Red;\r\n\r\n    private circleRadius: number;\r\n    private rowGap: number;\r\n    private colGap: number;\r\n    private colOffset: number;\r\n    private static verticalOffset: number = 70;\r\n\r\n    protected currentCoinColumn: number = 4;\r\n    protected static moveLeftKeys: Array<string> = ['a', 'A', 'ArrowLeft'];\r\n    protected static moveRightKeys: Array<string> = ['d', 'D', 'ArrowRight'];\r\n\r\n    protected constructor(options: GameOptions) {\r\n        this.canvas = document.getElementById(options.canvasId) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        BoardLogic.initBoard(this.board);\r\n\r\n        if (options.exitBtnId) {\r\n            this.exitBtn = document.getElementById(options.exitBtnId) as HTMLButtonElement;\r\n        }\r\n\r\n        if (options.playerRedId && options.playerGreenId) {\r\n            this.playerNameSection = new PlayerNameSection(options.playerRedId, options.playerGreenId);\r\n        }\r\n\r\n        if (options.gameIndicatorsId) {\r\n            this.gameIndicatorsContainer = document.getElementById(options.gameIndicatorsId) as HTMLDivElement;\r\n        }\r\n\r\n        if (options.menuId) {\r\n            this.gameMenu = document.getElementById(options.menuId) as HTMLDivElement;\r\n        }\r\n    }\r\n\r\n    protected start() {\r\n        this.showGame();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.printPlayerNames();\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n\r\n        this.resizeCanvas();\r\n        this.setGameEvents();\r\n    }\r\n\r\n    private paintBoard() {\r\n        const boardGradient = this.context.createLinearGradient(0, 0, this.canvas.width, 0);\r\n        boardGradient.addColorStop(0, 'blue');\r\n        boardGradient.addColorStop(1, 'aqua');\r\n        this.context.fillStyle = boardGradient;\r\n        this.context.fillRect(0, Game.verticalOffset, this.canvas.width, this.canvas.height);\r\n\r\n        for (let col = BoardLogic.columns - 1; col >= 0; col--) {\r\n            for (let row = BoardLogic.rows - 1; row >= 0; row--) {\r\n                this.context.fillStyle = Game.getColor(this.board[col][row]);\r\n                this.drawCircle(col, row);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        this.canvas.addEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.addEventListener('click', this.canvasClick, false);\r\n        window.addEventListener('beforeunload', this.beforeUnload);\r\n        window.addEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.addEventListener('click', this.exit);\r\n        document.body.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    protected abstract canvasMousemove(event: MouseEvent): void;\r\n    protected abstract canvasClick(event: MouseEvent): void;\r\n    protected abstract handleKeyDown(event: KeyboardEvent): void;\r\n\r\n    protected getColumnFromCursorPosition(event: MouseEvent): number {\r\n        const position = Position.getCursorPosition(event, this.canvas);\r\n        const column = Math.round((position.x - this.colOffset) / this.colGap);\r\n        return column;\r\n    }\r\n\r\n    protected switchTurn() {\r\n        this.turn = switchTurn(this.turn);\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.indicateTurn(this.turn);\r\n        }\r\n    }\r\n\r\n    protected moveCoin() {\r\n        this.clearUpper();\r\n        this.context.fillStyle = Game.getColor(this.turn);\r\n        this.paintCoinToDrop(this.currentCoinColumn);\r\n    }\r\n\r\n    protected landCoin(): number {\r\n        if (this.board[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = BoardLogic.putCoin(this.board, this.turn, this.currentCoinColumn);\r\n            \r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.drawCircle(this.currentCoinColumn, row);\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected abstract showWinDialog(winner: string, currentTurn: Coin);\r\n\r\n    protected closeGameAfterWinning() {\r\n        this.cleanUpEvents();\r\n\r\n        if (this.exitBtn) {\r\n            this.exitBtn.classList.add('hide');\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            this.resetValues();\r\n            this.hideGame();\r\n\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.clear();\r\n            }\r\n        }, 3000);\r\n    }\r\n\r\n    protected paintCoinToDrop(column: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, this.circleRadius, this.circleRadius, 0, 2 * Math.PI);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected abstract beforeUnload(event: Event);\r\n\r\n    private clearUpper() {\r\n        this.context.clearRect(0, 0, this.canvas.width, Game.verticalOffset);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        this.canvas.removeEventListener('mousemove', this.canvasMousemove, false);\r\n        this.canvas.removeEventListener('click', this.canvasClick, false);\r\n        window.removeEventListener('beforeunload', this.beforeUnload);\r\n        window.removeEventListener('resize', this.resizeCanvas);\r\n        this.exitBtn.removeEventListener('click', this.exit);\r\n        document.body.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    protected exit() {\r\n        this.cleanUpEvents();\r\n        this.hideGame();\r\n        this.resetValues();\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.clear();\r\n        }\r\n    }\r\n\r\n    private resizeCanvas = () => {\r\n        this.canvas.height = window.innerHeight - 100;\r\n        this.canvas.width = window.innerWidth;\r\n\r\n        if (this.canvas.width < 1000) {\r\n            this.circleRadius = 20; // Mobile/tablet\r\n        } else {\r\n            this.circleRadius = 30; // Desktop\r\n        }\r\n\r\n        if (this.canvas.height > this.canvas.width) {\r\n            this.colGap = this.canvas.width / BoardLogic.columns;\r\n            this.rowGap = (this.canvas.height / BoardLogic.rows) - this.circleRadius;\r\n        } else {\r\n            this.colGap = this.canvas.width / BoardLogic.columns;\r\n            this.rowGap = 65;\r\n        }\r\n\r\n        this.colOffset = this.colGap / 2;\r\n\r\n        this.paintBoard();\r\n    };\r\n\r\n    protected resetValues() {\r\n        this.turn = Coin.Red;\r\n        BoardLogic.initBoard(this.board);\r\n        \r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.reset();\r\n        }\r\n    }\r\n\r\n    private drawCircle(column: number, row: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(this.colOffset + column * this.colGap, Game.verticalOffset * 2 + row * this.rowGap, this.circleRadius, 0, Math.PI * 2);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n    }\r\n\r\n    protected areBothPlayersConnected(): boolean {\r\n        return this.playerNameSection && this.playerNameSection.areBothPlayersConnected();\r\n    }\r\n\r\n    private showGame() {\r\n        this.canvas.classList.remove('hide');\r\n        this.exitBtn.classList.remove('hide');\r\n        this.gameIndicatorsContainer.classList.remove('hide');\r\n        this.gameMenu.classList.add('hide');\r\n    }\r\n\r\n    private hideGame() {\r\n        this.canvas.classList.add('hide');\r\n        this.exitBtn.classList.add('hide');\r\n        this.gameIndicatorsContainer.classList.add('hide');\r\n        this.gameMenu.classList.remove('hide');\r\n    }\r\n\r\n    protected static getColor(color: Coin): string {\r\n        let value: string = '';\r\n        switch (color) {\r\n            case Coin.Empty:\r\n                value = 'lightyellow';\r\n                break;\r\n            case Coin.Red:\r\n                value = 'red';\r\n                break;\r\n            case Coin.Green:\r\n                value = 'greenyellow';\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common/lib/enums/coin\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport Socket from \"./socket\";\r\nimport Utils from \"./utils\";\r\nimport { ActionMessage, CurrentTurnMessage, ErrorMessage, GameMessage, InitialMessage, SkipTurnMessage, WinnerMessage, skipTurnMaxWait } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport { BoardLogic } from \"@danieldesira/daniels-connect4-common/lib/board-logic\";\r\n\r\nexport default class NetworkGame extends Game {\r\n\r\n    private static instance: NetworkGame;\r\n\r\n    private socket: Socket;\r\n    private turnCountDown: number;\r\n    private turnCountDownInterval: number;\r\n    private countdownSpan: HTMLSpanElement;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n\r\n        if (options.timerCountdownId) {\r\n            this.countdownSpan = document.getElementById(options.timerCountdownId) as HTMLSpanElement;\r\n        }\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): NetworkGame {\r\n        if (!NetworkGame.instance) {\r\n            NetworkGame.instance = new NetworkGame(options);\r\n        }\r\n        return NetworkGame.instance;\r\n    }\r\n\r\n    public start() {\r\n        this.defineSocket();\r\n        this.startCountdown();\r\n        super.start();\r\n        document.body.classList.add('waiting');\r\n    }\r\n\r\n    private defineSocket() {\r\n        this.socket = new Socket();\r\n        this.socket.onMessageCallback = this.onSocketMessage;\r\n        this.socket.onErrorCallback = this.onSocketError;\r\n        this.socket.onInputPlayerNameInDialog = this.onInputPlayerNameInDialog;\r\n        this.socket.onGameCancel = this.confirmExit;\r\n    }\r\n\r\n    private onSocketMessage = (messageData: GameMessage) => {\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n            if (data.opponentName && this.socket && this.playerNameSection) {\r\n                this.toggleWaitingClass();\r\n                if (this.socket.getPlayerColor() === Coin.Red) {\r\n                    this.playerNameSection.setPlayerGreen(data.opponentName);\r\n                } else if (this.socket.getPlayerColor() === Coin.Green) {\r\n                    this.playerNameSection.setPlayerRed(data.opponentName);\r\n                }\r\n            }\r\n    \r\n            if (data.color && this.socket && this.playerNameSection) {\r\n                if (data.color === Coin.Red) {\r\n                    this.playerNameSection.setPlayerRed(this.socket.getPlayerName());\r\n                } else {\r\n                    this.playerNameSection.setPlayerGreen(this.socket.getPlayerName());\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isActionMessage(messageData)) {\r\n            const data = messageData as ActionMessage;\r\n            if (data.action === 'mousemove') {\r\n                this.currentCoinColumn = data.column;\r\n                this.moveCoin();\r\n            }\r\n    \r\n            if (data.action === 'click') {\r\n                this.turn = data.color;\r\n                this.currentCoinColumn = data.column;\r\n                this.landCoin();\r\n            }\r\n        }\r\n        \r\n        if (GameMessage.isSkipTurnMessage(messageData)) {\r\n            const data = messageData as SkipTurnMessage;\r\n            if (data.skipTurn && data.currentTurn) {\r\n                this.turn = data.currentTurn;\r\n                this.turnCountDown = skipTurnMaxWait;\r\n                this.toggleWaitingClass();\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isWinnerMessage(messageData)) {\r\n            const data = messageData as WinnerMessage;\r\n            let winner: string = null;\r\n            if (this.playerNameSection) {\r\n                if (data.winner === Coin.Red) {\r\n                    winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                } else {\r\n                    winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n            }\r\n            this.showWinDialog(winner, data.winner);\r\n\r\n            this.closeGameAfterWinning();\r\n            document.body.classList.remove('waiting');\r\n        }\r\n\r\n        if (GameMessage.isTieMessage(messageData)) {\r\n            Dialog.notify({\r\n                id: DialogIds.GameEnd,\r\n                text: ['Game resulted in tie!']\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isCurrentTurnMessage(messageData)) {\r\n            const data = messageData as CurrentTurnMessage;\r\n            this.turn = data.currentTurn;\r\n            this.toggleWaitingClass();\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.indicateTurn(this.turn);\r\n            }\r\n        }\r\n\r\n        if (GameMessage.isDisconnectMessage(messageData)) {\r\n            Dialog.notify({\r\n                id: DialogIds.GameEnd,\r\n                text: ['Your opponent disconnected. You win!']\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.closeGameAfterWinning();\r\n        }\r\n\r\n        if (GameMessage.isErrorMessage(messageData)) {\r\n            const data = messageData as ErrorMessage;\r\n            Dialog.closeAllOpenDialogs();\r\n            Dialog.notify({\r\n                id: DialogIds.ServerError,\r\n                text: [data.error]\r\n            });\r\n            document.body.classList.remove('waiting');\r\n            this.closeGameAfterWinning();\r\n        }\r\n    };\r\n\r\n    private onSocketError = () => {\r\n        super.exit();\r\n    };\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n        this.stopCountdown();\r\n\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin();\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n            this.socket.send(data);\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n\r\n            const data = new ActionMessage(this.currentCoinColumn, 'click', this.turn);\r\n            this.socket.send(data);\r\n            \r\n            this.landCoin();\r\n        }\r\n    };\r\n\r\n    protected landCoin(): number {\r\n        if (this.board[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = super.landCoin();\r\n            \r\n            // Assume the game is still going on\r\n            this.switchTurn();\r\n            this.context.fillStyle = Game.getColor(this.turn);\r\n            this.paintCoinToDrop(this.currentCoinColumn);\r\n            Utils.playSound(Sound.LandCoin);\r\n            this.toggleWaitingClass();\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    private toggleWaitingClass() {\r\n        if (this.socket.getPlayerColor() === this.turn) {\r\n            document.body.classList.remove('waiting');\r\n        } else {\r\n            document.body.classList.add('waiting');\r\n        }\r\n    }\r\n\r\n    public exit = () => {\r\n        Dialog.confirm({\r\n            id: DialogIds.ExitGame,\r\n            text: ['Network game in progress. Are you sure you want to quit?'],\r\n            yesCallback: this.confirmExit,\r\n            noCallback: () => {},\r\n            yesColor: 'red',\r\n            noColor: 'green'\r\n        });\r\n    };\r\n\r\n    private confirmExit = () => {\r\n        if (this.socket) {\r\n            this.socket.close();\r\n        }\r\n        Dialog.closeAllOpenDialogs();\r\n        document.body.classList.remove('waiting');\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = (event: Event) => {\r\n        // Display default dialog before closing\r\n        event.preventDefault();\r\n        event.returnValue = false; // Required by Chrome\r\n    };\r\n\r\n    protected showWinDialog(winner: string, currentTurn: Coin) {\r\n        let winMsg: Array<string> = new Array();\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.socket && this.socket.getPlayerColor() === currentTurn) {\r\n            winMsg.push('You win!');\r\n            Utils.playSound(Sound.Win);\r\n        } else {\r\n            winMsg.push('You lose!');\r\n            Utils.playSound(Sound.Lose);\r\n        }\r\n        Dialog.notify({\r\n            id: DialogIds.GameEnd,\r\n            text: winMsg\r\n        });\r\n    }\r\n\r\n    protected switchTurn() {\r\n        super.switchTurn();\r\n        this.resetCountdown();\r\n    }\r\n\r\n    private turnCountDownCallback = () => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.turnCountDown--;\r\n            this.countdownSpan.innerText = this.turnCountDown.toString();\r\n            this.adaptCountDownColor();\r\n        }\r\n    };\r\n\r\n    private adaptCountDownColor() {\r\n        if (this.turnCountDown > skipTurnMaxWait / 2) {\r\n            this.countdownSpan.classList.add('green-text');\r\n            this.countdownSpan.classList.remove('red-text');\r\n        } else {\r\n            this.countdownSpan.classList.remove('green-text');\r\n            this.countdownSpan.classList.add('red-text');\r\n        }\r\n    }\r\n\r\n    private startCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n        this.turnCountDownInterval = window.setInterval(this.turnCountDownCallback, 1000);\r\n    }\r\n\r\n    private stopCountdown() {\r\n        clearInterval(this.turnCountDownInterval);\r\n        this.countdownSpan.innerText = '';\r\n    }\r\n\r\n    private resetCountdown() {\r\n        this.turnCountDown = skipTurnMaxWait;\r\n    }\r\n\r\n    private onInputPlayerNameInDialog = (playerName: string) => {\r\n        if (this.socket) {\r\n            if (this.socket.getPlayerColor() === Coin.Red) {\r\n                this.playerNameSection.setPlayerRed(playerName);\r\n            } else {\r\n                this.playerNameSection.setPlayerGreen(playerName);\r\n            }\r\n        }\r\n    };\r\n\r\n    protected handleKeyDown = (event: KeyboardEvent) => {\r\n        if (this.socket && this.turn === this.socket.getPlayerColor() && this.areBothPlayersConnected()) {\r\n            let data: GameMessage;\r\n\r\n            if (Game.moveLeftKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn > 0) {\r\n                    this.currentCoinColumn--;\r\n\r\n                    data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n                    this.socket.send(data);\r\n\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (Game.moveRightKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn < BoardLogic.columns - 1) {\r\n                    this.currentCoinColumn++;\r\n\r\n                    data = new ActionMessage(this.currentCoinColumn, 'mousemove', this.turn);\r\n                    this.socket.send(data);\r\n\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (event.key === ' ') {\r\n                data = new ActionMessage(this.currentCoinColumn, 'click', this.turn);\r\n                this.socket.send(data);\r\n\r\n                this.landCoin();\r\n            }\r\n        }\r\n\r\n        if (event.key === 'Escape') {\r\n            this.exit();\r\n        }\r\n    };\r\n    \r\n}","import { Coin } from \"@danieldesira/daniels-connect4-common\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\n\r\nexport default class PlayerNameSection {\r\n    private playerRedSpan: HTMLSpanElement;\r\n    private playerGreenSpan: HTMLSpanElement;\r\n    private playerRed: string;\r\n    private playerGreen: string;\r\n\r\n    public constructor(playerRedId: string, playerGreenId: string) {\r\n        if (playerRedId) {\r\n            this.playerRedSpan = document.getElementById(playerRedId);\r\n        }\r\n\r\n        if (playerGreenId) {\r\n            this.playerGreenSpan = document.getElementById(playerGreenId);\r\n        }\r\n    }\r\n\r\n    public setUpPlayerNames(okAction: Function, cancelAction: Function) {\r\n        if (!localStorage.getItem('playerRed') || !localStorage.getItem('playerGreen')) {\r\n            Dialog.prompt({\r\n                id: DialogIds.PlayerNames,\r\n                text: ['Please enter player names! (10 characters or less.)'],\r\n                onOK: () => this.onPromptOK(okAction),\r\n                onCancel: () => this.onPromptCancel(cancelAction),\r\n                inputs: [\r\n                    {\r\n                        label: 'Player Red',\r\n                        name: 'red',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    },\r\n                    {\r\n                        label: 'Player Green',\r\n                        name: 'green',\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }\r\n\r\n    private onPromptOK = (action: Function): string => {\r\n        const redInput = document.getElementById('dialog-input-red') as HTMLInputElement;\r\n        const greenInput = document.getElementById('dialog-input-green') as HTMLInputElement;\r\n        if (redInput.value && greenInput.value && redInput.value.trim() && greenInput.value.trim()) {\r\n            this.playerRed = redInput.value;\r\n            this.playerGreen = greenInput.value;\r\n            this.printPlayerNames();\r\n            action();\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onPromptCancel = (action: Function) => {\r\n        action();\r\n    };\r\n\r\n    public printPlayerNames() {\r\n        const waiting = 'Waiting to connect...';\r\n        if (this.playerGreenSpan) {\r\n            if (!this.playerGreen) {\r\n                this.playerGreenSpan.innerText = waiting;\r\n            } else {\r\n                this.playerGreenSpan.innerText = this.playerGreen;\r\n            }\r\n        }\r\n        if (this.playerRedSpan) {\r\n            if (!this.playerRed) {\r\n                this.playerRedSpan.innerText = waiting;\r\n            } else {\r\n                this.playerRedSpan.innerText = this.playerRed;\r\n            }\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = '';\r\n        }\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = '';\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.playerRed = null;\r\n        this.playerGreen = null;\r\n    }\r\n\r\n    public getPlayerRed(): string {\r\n        return this.playerRed;\r\n    }\r\n\r\n    public getPlayerGreen(): string {\r\n        return this.playerGreen;\r\n    }\r\n\r\n    public areBothPlayersConnected(): boolean {\r\n        return !!this.playerRed && !!this.playerGreen;\r\n    }\r\n\r\n    public saveIntoLocalStorage() {\r\n        localStorage.setItem('playerRed', this.playerRed);\r\n        localStorage.setItem('playerGreen', this.playerGreen);\r\n    }\r\n\r\n    public setFromLocalStorage() {\r\n        this.playerRed = localStorage.getItem('playerRed');\r\n        this.playerGreen = localStorage.getItem('playerGreen');\r\n    }\r\n\r\n    public setPlayerRed(playerName: string) {\r\n        this.playerRed = playerName;\r\n        if (this.playerRedSpan) {\r\n            this.playerRedSpan.innerText = this.playerRed;\r\n        }\r\n    }\r\n\r\n    public setPlayerGreen(playerName: string) {\r\n        this.playerGreen = playerName;\r\n        if (this.playerGreenSpan) {\r\n            this.playerGreenSpan.innerText = this.playerGreen;\r\n        }\r\n    }\r\n\r\n    public indicateTurn(turn: Coin) {\r\n        if (turn === Coin.Red) {\r\n            this.playerRedSpan.classList.add('currentTurn');\r\n            this.playerGreenSpan.classList.remove('currentTurn');\r\n        } else {\r\n            this.playerGreenSpan.classList.add('currentTurn');\r\n            this.playerRedSpan.classList.remove('currentTurn');\r\n        }\r\n    }\r\n\r\n}","export default class Position {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public static getCursorPosition(event, canvas): Position {\r\n        let x: number;\r\n        let y: number;\r\n        if (event.pageX !== undefined || event.pageY !== undefined) {\r\n            x = event.pageX;\r\n            y = event.pageY;\r\n        }\r\n        else {\r\n            x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n            y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n        }\r\n        x -= canvas.offsetLeft;\r\n        y -= canvas.offsetTop;\r\n        return new Position(x, y);\r\n    }\r\n}","import Dialog from \"./dialog/dialog\";\r\nimport Game from \"./game\";\r\nimport GameOptions from \"./game-options\";\r\nimport { Sound } from \"./enums/sound\";\r\nimport Utils from \"./utils\";\r\nimport Timer from \"./timer\";\r\nimport BoardLogic, { Coin, randomiseColor } from \"@danieldesira/daniels-connect4-common\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\n\r\nexport default class SameDeviceGame extends Game {\r\n\r\n    private static instance: SameDeviceGame;\r\n    private timer: Timer;\r\n\r\n    private constructor(options: GameOptions) {\r\n        super(options);\r\n\r\n        if (options.timerCountdownId) {\r\n            this.timer = new Timer(options.timerCountdownId);\r\n        }\r\n    }\r\n\r\n    public static getInstance(options: GameOptions): SameDeviceGame {\r\n        if (!SameDeviceGame.instance) {\r\n            SameDeviceGame.instance = new SameDeviceGame(options);\r\n        }\r\n        return SameDeviceGame.instance;\r\n    }\r\n\r\n    private setTimer = () => {\r\n        if (this.timer) {\r\n            this.timer.set();\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        this.checkGameData();\r\n    }\r\n\r\n    private onGameDataCheck() {\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.setUpPlayerNames(this.setTimer, this.exit);\r\n        }\r\n\r\n        if (this.areBothPlayersConnected()) {\r\n            this.setTimer();\r\n        }\r\n\r\n        super.start();\r\n    }\r\n\r\n    private checkGameData() {\r\n        let board = localStorage.getItem('board');\r\n        let nextTurn = localStorage.getItem('nextTurn');\r\n        \r\n        if (board && nextTurn) {\r\n            Dialog.confirm({\r\n                id: DialogIds.ContinueGame,\r\n                text: ['Do you want to continue playing the previous game?'],\r\n                yesCallback: this.continuePreviousGame,\r\n                noCallback: this.cancelPreviousGame,\r\n                yesColor: 'green',\r\n                noColor: 'red'\r\n            });\r\n        } else {\r\n            this.turn = randomiseColor();\r\n            this.onGameDataCheck();\r\n        }\r\n    }\r\n\r\n    private continuePreviousGame = () => {\r\n        this.restoreLastGame();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private cancelPreviousGame = () => {\r\n        localStorage.clear();\r\n        this.turn = randomiseColor();\r\n        this.onGameDataCheck();\r\n    };\r\n\r\n    private restoreLastGame() {\r\n        this.turn = parseInt(localStorage.getItem('nextTurn'));\r\n        this.board = JSON.parse(localStorage.getItem('board'));\r\n\r\n        if (this.timer) {\r\n            this.timer.setSecondsRunningFromLocalStorage();\r\n        }\r\n\r\n        if (this.playerNameSection) {\r\n            this.playerNameSection.setFromLocalStorage();\r\n        }\r\n    }\r\n\r\n    private saveGame() {\r\n        if (this.areBothPlayersConnected()) {\r\n            localStorage.setItem('nextTurn', this.turn.toString());\r\n            localStorage.setItem('board', JSON.stringify(this.board));\r\n\r\n            if (this.playerNameSection) {\r\n                this.playerNameSection.saveIntoLocalStorage();\r\n            }\r\n\r\n            if (this.timer) {\r\n                this.timer.saveSecondsRunningToLocalStorage();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected canvasMousemove = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.moveCoin();\r\n        }\r\n    };\r\n\r\n    protected canvasClick = (event: MouseEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            this.currentCoinColumn = this.getColumnFromCursorPosition(event);\r\n            this.landCoin();\r\n        }\r\n    };\r\n\r\n    public exit = () => {\r\n        this.saveGame();\r\n        Dialog.closeAllOpenDialogs();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.exit();\r\n    };\r\n\r\n    protected beforeUnload = () => {\r\n        this.saveGame();\r\n    }\r\n\r\n    private pageVisibilityChange = () => {\r\n        if (this.timer) {\r\n            this.timer.pauseWhenDocumentHidden();\r\n        }\r\n    };\r\n\r\n    protected closeGameAfterWinning() {\r\n        // Clear game data\r\n        localStorage.clear();\r\n\r\n        if (this.timer) {\r\n            this.timer.stop();\r\n        }\r\n\r\n        super.closeGameAfterWinning();\r\n    }\r\n\r\n    protected landCoin(): number {\r\n        if (this.board[this.currentCoinColumn][0] === Coin.Empty) {\r\n            const row = super.landCoin();\r\n            \r\n            const coinCount = BoardLogic.countConsecutiveCoins(this.board, this.currentCoinColumn, row, this.turn);\r\n\r\n            if (coinCount >= 4) {\r\n                let winner: string = '';\r\n\r\n                if (this.playerNameSection) {\r\n                    if (this.turn === Coin.Red) {\r\n                        winner = `${this.playerNameSection.getPlayerRed()} (Red)`;\r\n                    } else if (this.turn === Coin.Green) {\r\n                        winner = `${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                    }\r\n                }\r\n\r\n                this.showWinDialog(winner, this.turn);\r\n                this.closeGameAfterWinning();\r\n            } else if (BoardLogic.isBoardFull(this.board)) {\r\n                let message: string = '';\r\n                if (this.playerNameSection) {\r\n                    message += `${this.playerNameSection.getPlayerRed()} (Red) and ${this.playerNameSection.getPlayerGreen()} (Green)`;\r\n                }\r\n                message += ' are tied!';\r\n                Dialog.notify({\r\n                    id: DialogIds.GameEnd,\r\n                    text: [message]\r\n                });\r\n                this.closeGameAfterWinning();\r\n            } else { // If game is still going on\r\n                this.switchTurn();\r\n                this.context.fillStyle = Game.getColor(this.turn);\r\n                this.paintCoinToDrop(this.currentCoinColumn);\r\n                Utils.playSound(Sound.LandCoin);\r\n            }\r\n\r\n            return row;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    protected setGameEvents() {\r\n        super.setGameEvents();\r\n        document.addEventListener('visibilitychange', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected cleanUpEvents() {\r\n        super.cleanUpEvents();\r\n        document.removeEventListener('changevisibility', this.pageVisibilityChange);\r\n    }\r\n\r\n    protected showWinDialog(winner: string, _: Coin) {\r\n        let winMsg: Array<string> = new Array();\r\n        winMsg.push(`${winner} wins!`);\r\n        if (this.timer) {\r\n            winMsg.push(`Time taken: ${this.timer.getTimeInStringFormat()}`);\r\n        }\r\n        Utils.playSound(Sound.Win);\r\n        Dialog.notify({\r\n            id: DialogIds.GameEnd,\r\n            text: winMsg\r\n        });\r\n    }\r\n\r\n    protected resetValues() {\r\n        super.resetValues();\r\n\r\n        if (this.timer) {\r\n            this.timer.reset();\r\n        }\r\n    }\r\n\r\n    protected handleKeyDown = (event: KeyboardEvent) => {\r\n        if (this.areBothPlayersConnected()) {\r\n            if (Game.moveLeftKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn > 0) {\r\n                    this.currentCoinColumn--;\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (Game.moveRightKeys.includes(event.key)) {\r\n                if (this.currentCoinColumn < BoardLogic.columns - 1) {\r\n                    this.currentCoinColumn++;\r\n                    this.moveCoin();\r\n                }\r\n            }\r\n    \r\n            if (event.key === ' ') {\r\n                this.landCoin();\r\n            }\r\n        }\r\n\r\n        if (event.key === 'Escape') {\r\n            this.exit();\r\n        }\r\n    };\r\n\r\n}","import Dialog from \"./dialog/dialog\";\r\nimport { DialogIds } from \"./enums/dialog-ids\";\r\nimport Utils from \"./utils\";\r\nimport { Coin, GameMessage, InitialMessage, PlayerNameMessage } from \"@danieldesira/daniels-connect4-common\";\r\n\r\nexport default class Socket {\r\n    private webSocket: WebSocket;\r\n    private playerColor: Coin;\r\n    private playerName: string;\r\n    private gameId: number;\r\n    public onMessageCallback: Function;\r\n    public onErrorCallback: Function;\r\n    public onInputPlayerNameInDialog: Function;\r\n    public onGameCancel: Function;\r\n\r\n    public constructor() {\r\n        this.connect();\r\n    }\r\n\r\n    private connect() {\r\n        let url: string;\r\n        if (Utils.isLocal()) {\r\n            url = 'ws://localhost:3000/';\r\n        } else {\r\n            url = 'wss://daniels-connect4-server.adaptable.app/';\r\n        }\r\n\r\n        if (this.playerColor && !isNaN(this.gameId)) {\r\n            url += `?playerColor=${this.playerColor}&gameId=${this.gameId}&playerName=${this.playerName}`;\r\n        }\r\n\r\n        this.webSocket = new WebSocket(url);\r\n\r\n        this.webSocket.onmessage = this.onMessage;\r\n        this.webSocket.onerror = this.onError;\r\n        this.webSocket.onclose = this.onClose;\r\n    }\r\n\r\n    public send(data: GameMessage) {\r\n        this.webSocket.send(JSON.stringify(data));\r\n    }\r\n\r\n    public close() {\r\n        this.webSocket.onclose = null;\r\n        this.webSocket.onmessage = null;\r\n        this.webSocket.onerror = null;\r\n        this.webSocket.close();\r\n    }\r\n\r\n    public getPlayerColor = (): Coin => this.playerColor;\r\n    public getPlayerName = (): string => this.playerName;\r\n\r\n    private onMessage = (event: MessageEvent) => {\r\n        const messageData: GameMessage = JSON.parse(event.data);\r\n\r\n        if (GameMessage.isInitialMessage(messageData)) {\r\n            const data = messageData as InitialMessage;\r\n\r\n            if (!this.gameId) {\r\n                this.gameId = data.gameId;\r\n            }\r\n            \r\n            if (!this.playerColor) {\r\n                this.playerColor = data.color;\r\n    \r\n                let color: string;\r\n                if (this.playerColor === Coin.Red) {\r\n                    color = 'red';\r\n                } else {\r\n                    color = 'green';\r\n                }\r\n    \r\n                Dialog.prompt({\r\n                    id: DialogIds.PlayerNames,\r\n                    text: [`You are ${color}. Please enter your name. (10 characters or less.)`],\r\n                    onOK: () => this.onPlayerNameInput(color),\r\n                    onCancel: () => this.onGameCancel(),\r\n                    inputs: [{\r\n                        label: `Player ${color[0].toUpperCase()}${color.substring(1)}`,\r\n                        name: color,\r\n                        type: 'text',\r\n                        limit: 10,\r\n                        required: true\r\n                    }]\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.onMessageCallback) {\r\n            this.onMessageCallback(messageData);\r\n        }\r\n    };\r\n\r\n    private onPlayerNameInput = (color: string): string => {\r\n        const playerNameField = document.getElementById(`dialog-input-${color}`) as HTMLInputElement;\r\n\r\n        if (playerNameField) {\r\n            if (playerNameField.value && playerNameField.value.trim()) {\r\n                this.playerName = playerNameField.value;\r\n                this.onInputPlayerNameInDialog(this.playerName);\r\n                const data = new PlayerNameMessage(this.playerName);\r\n                this.send(data);\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    private onError = () => {\r\n        this.onErrorCallback();\r\n        Dialog.closeAllOpenDialogs();\r\n        Dialog.notify({\r\n            id: DialogIds.ServerError,\r\n            text: ['Problem connecting to server!']\r\n        });\r\n\r\n        document.body.classList.remove('waiting');\r\n    };\r\n\r\n    private onClose = () => {\r\n        this.connect();\r\n    };\r\n}","export default class Timer {\r\n\r\n    private secondsRunning: number;\r\n    private interval: number;\r\n    private timerSpan: HTMLSpanElement;\r\n\r\n    public constructor(timerId: string) {\r\n        this.timerSpan = document.getElementById(timerId) as HTMLSpanElement;\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n    private timerCallback = () => {\r\n        this.secondsRunning++;\r\n        const minutes: number = Math.floor(this.secondsRunning / 60);\r\n        const seconds: number = this.secondsRunning % 60;\r\n        this.timerSpan.innerText = `${minutes}:${(seconds < 10 ? '0' : '')}${seconds}`;\r\n        \r\n        if (this.timerSpan.classList.contains('hide')) {\r\n            clearInterval(this.interval);\r\n        }\r\n    };\r\n\r\n    public set() {\r\n        if (this.timerSpan) {\r\n            this.timerSpan.classList.remove('hide');\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public stop() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.timerSpan.innerText = '';\r\n            this.timerSpan.classList.add('hide');\r\n        }\r\n    }\r\n\r\n    public pauseWhenDocumentHidden() {\r\n        if (document.hidden) {\r\n            clearInterval(this.interval);\r\n        } else {\r\n            this.interval = window.setInterval(this.timerCallback, 1000);\r\n        }\r\n    }\r\n\r\n    public getTimeInStringFormat(): string {\r\n        if (this.timerSpan) {\r\n            return this.timerSpan.innerText;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    public saveSecondsRunningToLocalStorage() {\r\n        localStorage.setItem('secondsRunning', this.secondsRunning.toString());\r\n    }\r\n\r\n    public setSecondsRunningFromLocalStorage() {\r\n        this.secondsRunning = parseInt(localStorage.getItem('secondsRunning'));\r\n    }\r\n\r\n    public reset() {\r\n        this.secondsRunning = 0;\r\n    }\r\n\r\n}","export default class Utils {\r\n    public static isLocal(): boolean {\r\n        return location.protocol === 'file:'\r\n            || location.hostname === 'localhost';\r\n    }\r\n\r\n    public static playSound(path: string) {\r\n        let audio = new Audio(path);\r\n        audio.play();\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import Dialog from \"./lib/dialog/dialog\";\r\nimport { DialogIds } from \"./lib/enums/dialog-ids\";\r\nimport { GameMode } from \"./lib/enums/game-mode\";\r\nimport GameOptions from \"./lib/game-options\";\r\nimport NetworkGame from \"./lib/network-game\";\r\nimport SameDeviceGame from \"./lib/same-device-game\";\r\n\r\nconst samePCBtn = document.getElementById('samePC') as HTMLButtonElement;\r\nconst networkBtn = document.getElementById('network') as HTMLButtonElement;\r\nconst instructionsBtn = document.getElementById('instructions') as HTMLButtonElement;\r\n\r\nsamePCBtn.addEventListener('click', () => {\r\n    initGame(GameMode.SamePC);\r\n}, false);\r\n\r\nnetworkBtn.addEventListener('click', () => {\r\n    initGame(GameMode.Network);\r\n}, false);\r\n\r\nfunction initGame(mode: GameMode) {\r\n    clearError();\r\n\r\n    try {\r\n        const options: GameOptions = {\r\n            canvasId: 'board',\r\n            exitBtnId: 'exitBtn',\r\n            timerCountdownId: 'timer',\r\n            playerRedId: 'playerRed',\r\n            playerGreenId: 'playerGreen',\r\n            menuId: 'menu',\r\n            gameIndicatorsId: 'gameIndicators'\r\n        };\r\n        if (mode === GameMode.Network) {\r\n            const connect4 = NetworkGame.getInstance(options);\r\n            connect4.start();\r\n        } else {\r\n            const connect4 = SameDeviceGame.getInstance(options);\r\n            connect4.start();\r\n        }\r\n    } catch (ex) {\r\n        showError('Problem encountered!');\r\n        // To-do: include logging\r\n    }\r\n}\r\n\r\nfunction showError(message: string) {\r\n    const errorMessageDiv = document.getElementById('errorMessage') as HTMLDivElement;\r\n    if (errorMessageDiv) {\r\n        errorMessageDiv.classList.remove('hide');\r\n        errorMessageDiv.innerText = message;\r\n    }\r\n}\r\n\r\nfunction clearError() {\r\n    const errorMessageDiv = document.getElementById('errorMessage') as HTMLDivElement;\r\n    if (errorMessageDiv) {\r\n        errorMessageDiv.classList.add('hide');\r\n    }\r\n}\r\n\r\ninstructionsBtn.addEventListener('click', () => {\r\n    const text = [\r\n        'The principle behind Connect4 is simple:',\r\n        `The player who first places 4 coins next to each other, wins. These may be \r\n            horizontal, vertical or diagonal.`,\r\n        `Furthermore, in network play, you must place your coin within 60 seconds.\r\n            If you fail to do so, you pass the turn to your opponent.`,\r\n        'Good luck and have fun playing!'\r\n    ];\r\n    Dialog.notify({\r\n        id: DialogIds.Instructions,\r\n        text\r\n    });\r\n}, false);\r\n\r\nconst shareBtn = document.getElementById('shareBtn') as HTMLAnchorElement;\r\nshareBtn.addEventListener('click', (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    if (navigator.canShare) {\r\n        const shareData = {\r\n            url: location.href,\r\n            title: `Daniel's Connect4`\r\n        };\r\n        navigator.share(shareData)\r\n            .catch((err) => console.error(`Problem while sharing: ${err}`));\r\n    }\r\n});"],"names":["Object","defineProperty","exports","value","BoardLogic","coin_1","initBoard","board","col","columns","Array","rows","row","Coin","Empty","countConsecutiveCoins","column","currentTurn","count","coinCount","rowCount","colCount","isBoardFull","full","putCoin","color","skipTurnMaxWait","switchTurn","randomiseColor","WinnerMessage","TieMessage","SkipTurnMessage","PlayerNameMessage","InitialMessage","GameMessage","ErrorMessage","DisconnectMessage","CurrentTurnMessage","ActionMessage","board_logic_1","enumerable","get","action_message_1","current_turn_message_1","disconnect_message_1","error_message_1","game_message_1","initial_message_1","player_name_message_1","skip_turn_message_1","tie_message_1","winner_message_1","player_turn_1","constants_1","extendStatics","__extends","this","d","b","setPrototypeOf","__proto__","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","_super","action","_this","hardDisconnect","error","isInitialMessage","msg","isNaN","isInactivityMessage","isActionMessage","isSkipTurnMessage","isWinnerMessage","isTieMessage","isCurrentTurnMessage","isDisconnectMessage","isErrorMessage","gameId","opponentName","name","skipTurn","tie","winner","Math","floor","random","Red","Green","modal","type","options","document","getElementById","id","createElement","classList","add","textContainer","appendText","text","appendChild","DialogType","Confirmation","btnContainer","appendBtn","yesCallback","closeModal","yesColor","noCallback","noColor","Notification","Prompt","o","appendForm","body","container","callback","bgColor","btnType","btn","innerText","addEventListener","inputContainer","form","event","preventDefault","onOK","appendError","appendInputs","inputs","onCancel","i","length","input","placeholder","label","maxLength","limit","required","ariaRequired","toString","appendBrElement","br","errorDiv","contains","removeChild","confirm","Dialog","notify","prompt","closeAllOpenDialogs","dialogs","getElementsByClassName","DialogIds","GameMode","Sound","turn","currentCoinColumn","resizeCanvas","canvas","height","window","innerHeight","width","innerWidth","circleRadius","colGap","rowGap","colOffset","paintBoard","canvasId","context","getContext","exitBtnId","exitBtn","playerRedId","playerGreenId","playerNameSection","gameIndicatorsId","gameIndicatorsContainer","menuId","gameMenu","start","showGame","printPlayerNames","indicateTurn","setGameEvents","boardGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Game","verticalOffset","getColor","drawCircle","canvasMousemove","canvasClick","beforeUnload","exit","handleKeyDown","getColumnFromCursorPosition","position","getCursorPosition","round","x","moveCoin","clearUpper","paintCoinToDrop","landCoin","closeGameAfterWinning","cleanUpEvents","setTimeout","resetValues","hideGame","clear","beginPath","arc","PI","closePath","fill","clearRect","removeEventListener","reset","areBothPlayersConnected","remove","moveLeftKeys","moveRightKeys","onSocketMessage","messageData","data","socket","toggleWaitingClass","getPlayerColor","setPlayerGreen","setPlayerRed","getPlayerName","turnCountDown","getPlayerRed","getPlayerGreen","showWinDialog","GameEnd","ServerError","onSocketError","send","ExitGame","confirmExit","close","returnValue","turnCountDownCallback","countdownSpan","adaptCountDownColor","onInputPlayerNameInDialog","playerName","includes","key","timerCountdownId","getInstance","NetworkGame","instance","defineSocket","startCountdown","onMessageCallback","onErrorCallback","onGameCancel","stopCountdown","playSound","LandCoin","winMsg","push","Win","Lose","resetCountdown","turnCountDownInterval","setInterval","clearInterval","onPromptOK","redInput","greenInput","trim","playerRed","playerGreen","onPromptCancel","playerRedSpan","playerGreenSpan","setUpPlayerNames","okAction","cancelAction","localStorage","getItem","PlayerNames","waiting","saveIntoLocalStorage","setItem","setFromLocalStorage","y","undefined","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","Position","offsetLeft","offsetTop","setTimer","timer","set","continuePreviousGame","restoreLastGame","onGameDataCheck","cancelPreviousGame","saveGame","stop","pageVisibilityChange","pauseWhenDocumentHidden","SameDeviceGame","checkGameData","nextTurn","ContinueGame","parseInt","JSON","parse","setSecondsRunningFromLocalStorage","stringify","saveSecondsRunningToLocalStorage","message","_","getTimeInStringFormat","playerColor","onMessage","onPlayerNameInput","toUpperCase","substring","playerNameField","onError","onClose","connect","url","isLocal","webSocket","WebSocket","onmessage","onerror","onclose","timerId","timerCallback","secondsRunning","minutes","seconds","timerSpan","interval","hidden","location","protocol","hostname","path","Audio","play","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","samePCBtn","networkBtn","instructionsBtn","initGame","mode","errorMessageDiv","Network","ex","showError","SamePC","Instructions","navigator","canShare","shareData","href","title","share","catch","err","console"],"sourceRoot":""}